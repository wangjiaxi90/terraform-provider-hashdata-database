/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CommonPriceConfig struct for CommonPriceConfig
type CommonPriceConfig struct {
	Props *[]CommonIaasProperties `json:"props,omitempty"`
}

// NewCommonPriceConfig instantiates a new CommonPriceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonPriceConfig() *CommonPriceConfig {
	this := CommonPriceConfig{}
	return &this
}

// NewCommonPriceConfigWithDefaults instantiates a new CommonPriceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonPriceConfigWithDefaults() *CommonPriceConfig {
	this := CommonPriceConfig{}
	return &this
}

// GetProps returns the Props field value if set, zero value otherwise.
func (o *CommonPriceConfig) GetProps() []CommonIaasProperties {
	if o == nil || o.Props == nil {
		var ret []CommonIaasProperties
		return ret
	}
	return *o.Props
}

// GetPropsOk returns a tuple with the Props field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonPriceConfig) GetPropsOk() (*[]CommonIaasProperties, bool) {
	if o == nil || o.Props == nil {
		return nil, false
	}
	return o.Props, true
}

// HasProps returns a boolean if a field has been set.
func (o *CommonPriceConfig) HasProps() bool {
	if o != nil && o.Props != nil {
		return true
	}

	return false
}

// SetProps gets a reference to the given []CommonIaasProperties and assigns it to the Props field.
func (o *CommonPriceConfig) SetProps(v []CommonIaasProperties) {
	o.Props = &v
}

func (o CommonPriceConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Props != nil {
		toSerialize["props"] = o.Props
	}
	return json.Marshal(toSerialize)
}

type NullableCommonPriceConfig struct {
	value *CommonPriceConfig
	isSet bool
}

func (v NullableCommonPriceConfig) Get() *CommonPriceConfig {
	return v.value
}

func (v *NullableCommonPriceConfig) Set(val *CommonPriceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonPriceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonPriceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonPriceConfig(val *CommonPriceConfig) *NullableCommonPriceConfig {
	return &NullableCommonPriceConfig{value: val, isSet: true}
}

func (v NullableCommonPriceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonPriceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


