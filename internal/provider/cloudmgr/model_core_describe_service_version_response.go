/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreDescribeServiceVersionResponse struct for CoreDescribeServiceVersionResponse
type CoreDescribeServiceVersionResponse struct {
	Arch *string `json:"arch,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	DestroyedAt *string `json:"destroyed_at,omitempty"`
	DowngradeTo *[]string `json:"downgrade_to,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Id *string `json:"id,omitempty"`
	Image *string `json:"image,omitempty"`
	Region *string `json:"region,omitempty"`
	Type *string `json:"type,omitempty"`
	UpgradeFrom *[]string `json:"upgrade_from,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewCoreDescribeServiceVersionResponse instantiates a new CoreDescribeServiceVersionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreDescribeServiceVersionResponse() *CoreDescribeServiceVersionResponse {
	this := CoreDescribeServiceVersionResponse{}
	return &this
}

// NewCoreDescribeServiceVersionResponseWithDefaults instantiates a new CoreDescribeServiceVersionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreDescribeServiceVersionResponseWithDefaults() *CoreDescribeServiceVersionResponse {
	this := CoreDescribeServiceVersionResponse{}
	return &this
}

// GetArch returns the Arch field value if set, zero value otherwise.
func (o *CoreDescribeServiceVersionResponse) GetArch() string {
	if o == nil || o.Arch == nil {
		var ret string
		return ret
	}
	return *o.Arch
}

// GetArchOk returns a tuple with the Arch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceVersionResponse) GetArchOk() (*string, bool) {
	if o == nil || o.Arch == nil {
		return nil, false
	}
	return o.Arch, true
}

// HasArch returns a boolean if a field has been set.
func (o *CoreDescribeServiceVersionResponse) HasArch() bool {
	if o != nil && o.Arch != nil {
		return true
	}

	return false
}

// SetArch gets a reference to the given string and assigns it to the Arch field.
func (o *CoreDescribeServiceVersionResponse) SetArch(v string) {
	o.Arch = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CoreDescribeServiceVersionResponse) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceVersionResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CoreDescribeServiceVersionResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CoreDescribeServiceVersionResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDestroyedAt returns the DestroyedAt field value if set, zero value otherwise.
func (o *CoreDescribeServiceVersionResponse) GetDestroyedAt() string {
	if o == nil || o.DestroyedAt == nil {
		var ret string
		return ret
	}
	return *o.DestroyedAt
}

// GetDestroyedAtOk returns a tuple with the DestroyedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceVersionResponse) GetDestroyedAtOk() (*string, bool) {
	if o == nil || o.DestroyedAt == nil {
		return nil, false
	}
	return o.DestroyedAt, true
}

// HasDestroyedAt returns a boolean if a field has been set.
func (o *CoreDescribeServiceVersionResponse) HasDestroyedAt() bool {
	if o != nil && o.DestroyedAt != nil {
		return true
	}

	return false
}

// SetDestroyedAt gets a reference to the given string and assigns it to the DestroyedAt field.
func (o *CoreDescribeServiceVersionResponse) SetDestroyedAt(v string) {
	o.DestroyedAt = &v
}

// GetDowngradeTo returns the DowngradeTo field value if set, zero value otherwise.
func (o *CoreDescribeServiceVersionResponse) GetDowngradeTo() []string {
	if o == nil || o.DowngradeTo == nil {
		var ret []string
		return ret
	}
	return *o.DowngradeTo
}

// GetDowngradeToOk returns a tuple with the DowngradeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceVersionResponse) GetDowngradeToOk() (*[]string, bool) {
	if o == nil || o.DowngradeTo == nil {
		return nil, false
	}
	return o.DowngradeTo, true
}

// HasDowngradeTo returns a boolean if a field has been set.
func (o *CoreDescribeServiceVersionResponse) HasDowngradeTo() bool {
	if o != nil && o.DowngradeTo != nil {
		return true
	}

	return false
}

// SetDowngradeTo gets a reference to the given []string and assigns it to the DowngradeTo field.
func (o *CoreDescribeServiceVersionResponse) SetDowngradeTo(v []string) {
	o.DowngradeTo = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CoreDescribeServiceVersionResponse) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceVersionResponse) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CoreDescribeServiceVersionResponse) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CoreDescribeServiceVersionResponse) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreDescribeServiceVersionResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceVersionResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreDescribeServiceVersionResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CoreDescribeServiceVersionResponse) SetId(v string) {
	o.Id = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *CoreDescribeServiceVersionResponse) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceVersionResponse) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *CoreDescribeServiceVersionResponse) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *CoreDescribeServiceVersionResponse) SetImage(v string) {
	o.Image = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *CoreDescribeServiceVersionResponse) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceVersionResponse) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *CoreDescribeServiceVersionResponse) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *CoreDescribeServiceVersionResponse) SetRegion(v string) {
	o.Region = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CoreDescribeServiceVersionResponse) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceVersionResponse) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CoreDescribeServiceVersionResponse) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CoreDescribeServiceVersionResponse) SetType(v string) {
	o.Type = &v
}

// GetUpgradeFrom returns the UpgradeFrom field value if set, zero value otherwise.
func (o *CoreDescribeServiceVersionResponse) GetUpgradeFrom() []string {
	if o == nil || o.UpgradeFrom == nil {
		var ret []string
		return ret
	}
	return *o.UpgradeFrom
}

// GetUpgradeFromOk returns a tuple with the UpgradeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceVersionResponse) GetUpgradeFromOk() (*[]string, bool) {
	if o == nil || o.UpgradeFrom == nil {
		return nil, false
	}
	return o.UpgradeFrom, true
}

// HasUpgradeFrom returns a boolean if a field has been set.
func (o *CoreDescribeServiceVersionResponse) HasUpgradeFrom() bool {
	if o != nil && o.UpgradeFrom != nil {
		return true
	}

	return false
}

// SetUpgradeFrom gets a reference to the given []string and assigns it to the UpgradeFrom field.
func (o *CoreDescribeServiceVersionResponse) SetUpgradeFrom(v []string) {
	o.UpgradeFrom = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *CoreDescribeServiceVersionResponse) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceVersionResponse) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *CoreDescribeServiceVersionResponse) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *CoreDescribeServiceVersionResponse) SetVendor(v string) {
	o.Vendor = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CoreDescribeServiceVersionResponse) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceVersionResponse) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CoreDescribeServiceVersionResponse) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CoreDescribeServiceVersionResponse) SetVersion(v string) {
	o.Version = &v
}

func (o CoreDescribeServiceVersionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Arch != nil {
		toSerialize["arch"] = o.Arch
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.DestroyedAt != nil {
		toSerialize["destroyed_at"] = o.DestroyedAt
	}
	if o.DowngradeTo != nil {
		toSerialize["downgrade_to"] = o.DowngradeTo
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpgradeFrom != nil {
		toSerialize["upgrade_from"] = o.UpgradeFrom
	}
	if o.Vendor != nil {
		toSerialize["vendor"] = o.Vendor
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableCoreDescribeServiceVersionResponse struct {
	value *CoreDescribeServiceVersionResponse
	isSet bool
}

func (v NullableCoreDescribeServiceVersionResponse) Get() *CoreDescribeServiceVersionResponse {
	return v.value
}

func (v *NullableCoreDescribeServiceVersionResponse) Set(val *CoreDescribeServiceVersionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreDescribeServiceVersionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreDescribeServiceVersionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreDescribeServiceVersionResponse(val *CoreDescribeServiceVersionResponse) *NullableCoreDescribeServiceVersionResponse {
	return &NullableCoreDescribeServiceVersionResponse{value: val, isSet: true}
}

func (v NullableCoreDescribeServiceVersionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreDescribeServiceVersionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


