/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreDescribeVpcResponse struct for CoreDescribeVpcResponse
type CoreDescribeVpcResponse struct {
	CidrV4 *string `json:"cidr_v4,omitempty"`
	CidrV6 *string `json:"cidr_v6,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewCoreDescribeVpcResponse instantiates a new CoreDescribeVpcResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreDescribeVpcResponse() *CoreDescribeVpcResponse {
	this := CoreDescribeVpcResponse{}
	return &this
}

// NewCoreDescribeVpcResponseWithDefaults instantiates a new CoreDescribeVpcResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreDescribeVpcResponseWithDefaults() *CoreDescribeVpcResponse {
	this := CoreDescribeVpcResponse{}
	return &this
}

// GetCidrV4 returns the CidrV4 field value if set, zero value otherwise.
func (o *CoreDescribeVpcResponse) GetCidrV4() string {
	if o == nil || o.CidrV4 == nil {
		var ret string
		return ret
	}
	return *o.CidrV4
}

// GetCidrV4Ok returns a tuple with the CidrV4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeVpcResponse) GetCidrV4Ok() (*string, bool) {
	if o == nil || o.CidrV4 == nil {
		return nil, false
	}
	return o.CidrV4, true
}

// HasCidrV4 returns a boolean if a field has been set.
func (o *CoreDescribeVpcResponse) HasCidrV4() bool {
	if o != nil && o.CidrV4 != nil {
		return true
	}

	return false
}

// SetCidrV4 gets a reference to the given string and assigns it to the CidrV4 field.
func (o *CoreDescribeVpcResponse) SetCidrV4(v string) {
	o.CidrV4 = &v
}

// GetCidrV6 returns the CidrV6 field value if set, zero value otherwise.
func (o *CoreDescribeVpcResponse) GetCidrV6() string {
	if o == nil || o.CidrV6 == nil {
		var ret string
		return ret
	}
	return *o.CidrV6
}

// GetCidrV6Ok returns a tuple with the CidrV6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeVpcResponse) GetCidrV6Ok() (*string, bool) {
	if o == nil || o.CidrV6 == nil {
		return nil, false
	}
	return o.CidrV6, true
}

// HasCidrV6 returns a boolean if a field has been set.
func (o *CoreDescribeVpcResponse) HasCidrV6() bool {
	if o != nil && o.CidrV6 != nil {
		return true
	}

	return false
}

// SetCidrV6 gets a reference to the given string and assigns it to the CidrV6 field.
func (o *CoreDescribeVpcResponse) SetCidrV6(v string) {
	o.CidrV6 = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CoreDescribeVpcResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeVpcResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CoreDescribeVpcResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CoreDescribeVpcResponse) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreDescribeVpcResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeVpcResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreDescribeVpcResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CoreDescribeVpcResponse) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreDescribeVpcResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeVpcResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreDescribeVpcResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreDescribeVpcResponse) SetName(v string) {
	o.Name = &v
}

func (o CoreDescribeVpcResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CidrV4 != nil {
		toSerialize["cidr_v4"] = o.CidrV4
	}
	if o.CidrV6 != nil {
		toSerialize["cidr_v6"] = o.CidrV6
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCoreDescribeVpcResponse struct {
	value *CoreDescribeVpcResponse
	isSet bool
}

func (v NullableCoreDescribeVpcResponse) Get() *CoreDescribeVpcResponse {
	return v.value
}

func (v *NullableCoreDescribeVpcResponse) Set(val *CoreDescribeVpcResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreDescribeVpcResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreDescribeVpcResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreDescribeVpcResponse(val *CoreDescribeVpcResponse) *NullableCoreDescribeVpcResponse {
	return &NullableCoreDescribeVpcResponse{value: val, isSet: true}
}

func (v NullableCoreDescribeVpcResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreDescribeVpcResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


