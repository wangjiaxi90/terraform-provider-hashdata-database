/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreDescribeElasticNicResponse struct for CoreDescribeElasticNicResponse
type CoreDescribeElasticNicResponse struct {
	ElasticNicId *string `json:"elastic_nic_id,omitempty"`
	Ipaddresses *[]string `json:"ipaddresses,omitempty"`
}

// NewCoreDescribeElasticNicResponse instantiates a new CoreDescribeElasticNicResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreDescribeElasticNicResponse() *CoreDescribeElasticNicResponse {
	this := CoreDescribeElasticNicResponse{}
	return &this
}

// NewCoreDescribeElasticNicResponseWithDefaults instantiates a new CoreDescribeElasticNicResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreDescribeElasticNicResponseWithDefaults() *CoreDescribeElasticNicResponse {
	this := CoreDescribeElasticNicResponse{}
	return &this
}

// GetElasticNicId returns the ElasticNicId field value if set, zero value otherwise.
func (o *CoreDescribeElasticNicResponse) GetElasticNicId() string {
	if o == nil || o.ElasticNicId == nil {
		var ret string
		return ret
	}
	return *o.ElasticNicId
}

// GetElasticNicIdOk returns a tuple with the ElasticNicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticNicResponse) GetElasticNicIdOk() (*string, bool) {
	if o == nil || o.ElasticNicId == nil {
		return nil, false
	}
	return o.ElasticNicId, true
}

// HasElasticNicId returns a boolean if a field has been set.
func (o *CoreDescribeElasticNicResponse) HasElasticNicId() bool {
	if o != nil && o.ElasticNicId != nil {
		return true
	}

	return false
}

// SetElasticNicId gets a reference to the given string and assigns it to the ElasticNicId field.
func (o *CoreDescribeElasticNicResponse) SetElasticNicId(v string) {
	o.ElasticNicId = &v
}

// GetIpaddresses returns the Ipaddresses field value if set, zero value otherwise.
func (o *CoreDescribeElasticNicResponse) GetIpaddresses() []string {
	if o == nil || o.Ipaddresses == nil {
		var ret []string
		return ret
	}
	return *o.Ipaddresses
}

// GetIpaddressesOk returns a tuple with the Ipaddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticNicResponse) GetIpaddressesOk() (*[]string, bool) {
	if o == nil || o.Ipaddresses == nil {
		return nil, false
	}
	return o.Ipaddresses, true
}

// HasIpaddresses returns a boolean if a field has been set.
func (o *CoreDescribeElasticNicResponse) HasIpaddresses() bool {
	if o != nil && o.Ipaddresses != nil {
		return true
	}

	return false
}

// SetIpaddresses gets a reference to the given []string and assigns it to the Ipaddresses field.
func (o *CoreDescribeElasticNicResponse) SetIpaddresses(v []string) {
	o.Ipaddresses = &v
}

func (o CoreDescribeElasticNicResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ElasticNicId != nil {
		toSerialize["elastic_nic_id"] = o.ElasticNicId
	}
	if o.Ipaddresses != nil {
		toSerialize["ipaddresses"] = o.Ipaddresses
	}
	return json.Marshal(toSerialize)
}

type NullableCoreDescribeElasticNicResponse struct {
	value *CoreDescribeElasticNicResponse
	isSet bool
}

func (v NullableCoreDescribeElasticNicResponse) Get() *CoreDescribeElasticNicResponse {
	return v.value
}

func (v *NullableCoreDescribeElasticNicResponse) Set(val *CoreDescribeElasticNicResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreDescribeElasticNicResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreDescribeElasticNicResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreDescribeElasticNicResponse(val *CoreDescribeElasticNicResponse) *NullableCoreDescribeElasticNicResponse {
	return &NullableCoreDescribeElasticNicResponse{value: val, isSet: true}
}

func (v NullableCoreDescribeElasticNicResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreDescribeElasticNicResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


