/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreScaleOutIaasResource struct for CoreScaleOutIaasResource
type CoreScaleOutIaasResource struct {
	Count *int32 `json:"count,omitempty"`
}

// NewCoreScaleOutIaasResource instantiates a new CoreScaleOutIaasResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreScaleOutIaasResource() *CoreScaleOutIaasResource {
	this := CoreScaleOutIaasResource{}
	return &this
}

// NewCoreScaleOutIaasResourceWithDefaults instantiates a new CoreScaleOutIaasResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreScaleOutIaasResourceWithDefaults() *CoreScaleOutIaasResource {
	this := CoreScaleOutIaasResource{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *CoreScaleOutIaasResource) GetCount() int32 {
	if o == nil || o.Count == nil {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreScaleOutIaasResource) GetCountOk() (*int32, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *CoreScaleOutIaasResource) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *CoreScaleOutIaasResource) SetCount(v int32) {
	o.Count = &v
}

func (o CoreScaleOutIaasResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

type NullableCoreScaleOutIaasResource struct {
	value *CoreScaleOutIaasResource
	isSet bool
}

func (v NullableCoreScaleOutIaasResource) Get() *CoreScaleOutIaasResource {
	return v.value
}

func (v *NullableCoreScaleOutIaasResource) Set(val *CoreScaleOutIaasResource) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreScaleOutIaasResource) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreScaleOutIaasResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreScaleOutIaasResource(val *CoreScaleOutIaasResource) *NullableCoreScaleOutIaasResource {
	return &NullableCoreScaleOutIaasResource{value: val, isSet: true}
}

func (v NullableCoreScaleOutIaasResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreScaleOutIaasResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


