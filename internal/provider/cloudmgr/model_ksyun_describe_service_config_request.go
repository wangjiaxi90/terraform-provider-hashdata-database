/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// KsyunDescribeServiceConfigRequest struct for KsyunDescribeServiceConfigRequest
type KsyunDescribeServiceConfigRequest struct {
	Conf *string `json:"conf,omitempty"`
	ConfId *string `json:"confId,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewKsyunDescribeServiceConfigRequest instantiates a new KsyunDescribeServiceConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKsyunDescribeServiceConfigRequest() *KsyunDescribeServiceConfigRequest {
	this := KsyunDescribeServiceConfigRequest{}
	return &this
}

// NewKsyunDescribeServiceConfigRequestWithDefaults instantiates a new KsyunDescribeServiceConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKsyunDescribeServiceConfigRequestWithDefaults() *KsyunDescribeServiceConfigRequest {
	this := KsyunDescribeServiceConfigRequest{}
	return &this
}

// GetConf returns the Conf field value if set, zero value otherwise.
func (o *KsyunDescribeServiceConfigRequest) GetConf() string {
	if o == nil || o.Conf == nil {
		var ret string
		return ret
	}
	return *o.Conf
}

// GetConfOk returns a tuple with the Conf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KsyunDescribeServiceConfigRequest) GetConfOk() (*string, bool) {
	if o == nil || o.Conf == nil {
		return nil, false
	}
	return o.Conf, true
}

// HasConf returns a boolean if a field has been set.
func (o *KsyunDescribeServiceConfigRequest) HasConf() bool {
	if o != nil && o.Conf != nil {
		return true
	}

	return false
}

// SetConf gets a reference to the given string and assigns it to the Conf field.
func (o *KsyunDescribeServiceConfigRequest) SetConf(v string) {
	o.Conf = &v
}

// GetConfId returns the ConfId field value if set, zero value otherwise.
func (o *KsyunDescribeServiceConfigRequest) GetConfId() string {
	if o == nil || o.ConfId == nil {
		var ret string
		return ret
	}
	return *o.ConfId
}

// GetConfIdOk returns a tuple with the ConfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KsyunDescribeServiceConfigRequest) GetConfIdOk() (*string, bool) {
	if o == nil || o.ConfId == nil {
		return nil, false
	}
	return o.ConfId, true
}

// HasConfId returns a boolean if a field has been set.
func (o *KsyunDescribeServiceConfigRequest) HasConfId() bool {
	if o != nil && o.ConfId != nil {
		return true
	}

	return false
}

// SetConfId gets a reference to the given string and assigns it to the ConfId field.
func (o *KsyunDescribeServiceConfigRequest) SetConfId(v string) {
	o.ConfId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *KsyunDescribeServiceConfigRequest) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KsyunDescribeServiceConfigRequest) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *KsyunDescribeServiceConfigRequest) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *KsyunDescribeServiceConfigRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o KsyunDescribeServiceConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Conf != nil {
		toSerialize["conf"] = o.Conf
	}
	if o.ConfId != nil {
		toSerialize["confId"] = o.ConfId
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableKsyunDescribeServiceConfigRequest struct {
	value *KsyunDescribeServiceConfigRequest
	isSet bool
}

func (v NullableKsyunDescribeServiceConfigRequest) Get() *KsyunDescribeServiceConfigRequest {
	return v.value
}

func (v *NullableKsyunDescribeServiceConfigRequest) Set(val *KsyunDescribeServiceConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKsyunDescribeServiceConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKsyunDescribeServiceConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKsyunDescribeServiceConfigRequest(val *KsyunDescribeServiceConfigRequest) *NullableKsyunDescribeServiceConfigRequest {
	return &NullableKsyunDescribeServiceConfigRequest{value: val, isSet: true}
}

func (v NullableKsyunDescribeServiceConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKsyunDescribeServiceConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


