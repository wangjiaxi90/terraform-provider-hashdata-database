/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreDescribeServiceTypeResponse struct for CoreDescribeServiceTypeResponse
type CoreDescribeServiceTypeResponse struct {
	Component *[]CoreDescribeServiceComponentResponse `json:"component,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Name *string `json:"name,omitempty"`
	Properties *map[string]interface{} `json:"properties,omitempty"`
}

// NewCoreDescribeServiceTypeResponse instantiates a new CoreDescribeServiceTypeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreDescribeServiceTypeResponse() *CoreDescribeServiceTypeResponse {
	this := CoreDescribeServiceTypeResponse{}
	return &this
}

// NewCoreDescribeServiceTypeResponseWithDefaults instantiates a new CoreDescribeServiceTypeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreDescribeServiceTypeResponseWithDefaults() *CoreDescribeServiceTypeResponse {
	this := CoreDescribeServiceTypeResponse{}
	return &this
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *CoreDescribeServiceTypeResponse) GetComponent() []CoreDescribeServiceComponentResponse {
	if o == nil || o.Component == nil {
		var ret []CoreDescribeServiceComponentResponse
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceTypeResponse) GetComponentOk() (*[]CoreDescribeServiceComponentResponse, bool) {
	if o == nil || o.Component == nil {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *CoreDescribeServiceTypeResponse) HasComponent() bool {
	if o != nil && o.Component != nil {
		return true
	}

	return false
}

// SetComponent gets a reference to the given []CoreDescribeServiceComponentResponse and assigns it to the Component field.
func (o *CoreDescribeServiceTypeResponse) SetComponent(v []CoreDescribeServiceComponentResponse) {
	o.Component = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CoreDescribeServiceTypeResponse) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceTypeResponse) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CoreDescribeServiceTypeResponse) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CoreDescribeServiceTypeResponse) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreDescribeServiceTypeResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceTypeResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreDescribeServiceTypeResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreDescribeServiceTypeResponse) SetName(v string) {
	o.Name = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *CoreDescribeServiceTypeResponse) GetProperties() map[string]interface{} {
	if o == nil || o.Properties == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceTypeResponse) GetPropertiesOk() (*map[string]interface{}, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *CoreDescribeServiceTypeResponse) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *CoreDescribeServiceTypeResponse) SetProperties(v map[string]interface{}) {
	o.Properties = &v
}

func (o CoreDescribeServiceTypeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Component != nil {
		toSerialize["component"] = o.Component
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableCoreDescribeServiceTypeResponse struct {
	value *CoreDescribeServiceTypeResponse
	isSet bool
}

func (v NullableCoreDescribeServiceTypeResponse) Get() *CoreDescribeServiceTypeResponse {
	return v.value
}

func (v *NullableCoreDescribeServiceTypeResponse) Set(val *CoreDescribeServiceTypeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreDescribeServiceTypeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreDescribeServiceTypeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreDescribeServiceTypeResponse(val *CoreDescribeServiceTypeResponse) *NullableCoreDescribeServiceTypeResponse {
	return &NullableCoreDescribeServiceTypeResponse{value: val, isSet: true}
}

func (v NullableCoreDescribeServiceTypeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreDescribeServiceTypeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


