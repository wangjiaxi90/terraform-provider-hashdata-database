/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreInplaceUpgradeServiceRequest struct for CoreInplaceUpgradeServiceRequest
type CoreInplaceUpgradeServiceRequest struct {
	Image *string `json:"image,omitempty"`
	Url *string `json:"url,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewCoreInplaceUpgradeServiceRequest instantiates a new CoreInplaceUpgradeServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreInplaceUpgradeServiceRequest() *CoreInplaceUpgradeServiceRequest {
	this := CoreInplaceUpgradeServiceRequest{}
	return &this
}

// NewCoreInplaceUpgradeServiceRequestWithDefaults instantiates a new CoreInplaceUpgradeServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreInplaceUpgradeServiceRequestWithDefaults() *CoreInplaceUpgradeServiceRequest {
	this := CoreInplaceUpgradeServiceRequest{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *CoreInplaceUpgradeServiceRequest) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreInplaceUpgradeServiceRequest) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *CoreInplaceUpgradeServiceRequest) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *CoreInplaceUpgradeServiceRequest) SetImage(v string) {
	o.Image = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CoreInplaceUpgradeServiceRequest) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreInplaceUpgradeServiceRequest) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CoreInplaceUpgradeServiceRequest) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CoreInplaceUpgradeServiceRequest) SetUrl(v string) {
	o.Url = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CoreInplaceUpgradeServiceRequest) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreInplaceUpgradeServiceRequest) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CoreInplaceUpgradeServiceRequest) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CoreInplaceUpgradeServiceRequest) SetVersion(v string) {
	o.Version = &v
}

func (o CoreInplaceUpgradeServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableCoreInplaceUpgradeServiceRequest struct {
	value *CoreInplaceUpgradeServiceRequest
	isSet bool
}

func (v NullableCoreInplaceUpgradeServiceRequest) Get() *CoreInplaceUpgradeServiceRequest {
	return v.value
}

func (v *NullableCoreInplaceUpgradeServiceRequest) Set(val *CoreInplaceUpgradeServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreInplaceUpgradeServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreInplaceUpgradeServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreInplaceUpgradeServiceRequest(val *CoreInplaceUpgradeServiceRequest) *NullableCoreInplaceUpgradeServiceRequest {
	return &NullableCoreInplaceUpgradeServiceRequest{value: val, isSet: true}
}

func (v NullableCoreInplaceUpgradeServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreInplaceUpgradeServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


