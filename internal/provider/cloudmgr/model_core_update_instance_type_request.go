/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreUpdateInstanceTypeRequest struct for CoreUpdateInstanceTypeRequest
type CoreUpdateInstanceTypeRequest struct {
	Arch *string `json:"arch,omitempty"`
	CompatibleVolumeType *[]string `json:"compatible_volume_type,omitempty"`
	Cpu *int32 `json:"cpu,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	InstanceClass *string `json:"instance_class,omitempty"`
	InstanceType *string `json:"instance_type,omitempty"`
	InstanceTypeGroup *string `json:"instance_type_group,omitempty"`
	Memory *int32 `json:"memory,omitempty"`
	Zone *[]string `json:"zone,omitempty"`
}

// NewCoreUpdateInstanceTypeRequest instantiates a new CoreUpdateInstanceTypeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreUpdateInstanceTypeRequest() *CoreUpdateInstanceTypeRequest {
	this := CoreUpdateInstanceTypeRequest{}
	return &this
}

// NewCoreUpdateInstanceTypeRequestWithDefaults instantiates a new CoreUpdateInstanceTypeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreUpdateInstanceTypeRequestWithDefaults() *CoreUpdateInstanceTypeRequest {
	this := CoreUpdateInstanceTypeRequest{}
	return &this
}

// GetArch returns the Arch field value if set, zero value otherwise.
func (o *CoreUpdateInstanceTypeRequest) GetArch() string {
	if o == nil || o.Arch == nil {
		var ret string
		return ret
	}
	return *o.Arch
}

// GetArchOk returns a tuple with the Arch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInstanceTypeRequest) GetArchOk() (*string, bool) {
	if o == nil || o.Arch == nil {
		return nil, false
	}
	return o.Arch, true
}

// HasArch returns a boolean if a field has been set.
func (o *CoreUpdateInstanceTypeRequest) HasArch() bool {
	if o != nil && o.Arch != nil {
		return true
	}

	return false
}

// SetArch gets a reference to the given string and assigns it to the Arch field.
func (o *CoreUpdateInstanceTypeRequest) SetArch(v string) {
	o.Arch = &v
}

// GetCompatibleVolumeType returns the CompatibleVolumeType field value if set, zero value otherwise.
func (o *CoreUpdateInstanceTypeRequest) GetCompatibleVolumeType() []string {
	if o == nil || o.CompatibleVolumeType == nil {
		var ret []string
		return ret
	}
	return *o.CompatibleVolumeType
}

// GetCompatibleVolumeTypeOk returns a tuple with the CompatibleVolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInstanceTypeRequest) GetCompatibleVolumeTypeOk() (*[]string, bool) {
	if o == nil || o.CompatibleVolumeType == nil {
		return nil, false
	}
	return o.CompatibleVolumeType, true
}

// HasCompatibleVolumeType returns a boolean if a field has been set.
func (o *CoreUpdateInstanceTypeRequest) HasCompatibleVolumeType() bool {
	if o != nil && o.CompatibleVolumeType != nil {
		return true
	}

	return false
}

// SetCompatibleVolumeType gets a reference to the given []string and assigns it to the CompatibleVolumeType field.
func (o *CoreUpdateInstanceTypeRequest) SetCompatibleVolumeType(v []string) {
	o.CompatibleVolumeType = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *CoreUpdateInstanceTypeRequest) GetCpu() int32 {
	if o == nil || o.Cpu == nil {
		var ret int32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInstanceTypeRequest) GetCpuOk() (*int32, bool) {
	if o == nil || o.Cpu == nil {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *CoreUpdateInstanceTypeRequest) HasCpu() bool {
	if o != nil && o.Cpu != nil {
		return true
	}

	return false
}

// SetCpu gets a reference to the given int32 and assigns it to the Cpu field.
func (o *CoreUpdateInstanceTypeRequest) SetCpu(v int32) {
	o.Cpu = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CoreUpdateInstanceTypeRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInstanceTypeRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CoreUpdateInstanceTypeRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CoreUpdateInstanceTypeRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CoreUpdateInstanceTypeRequest) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInstanceTypeRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CoreUpdateInstanceTypeRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CoreUpdateInstanceTypeRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetInstanceClass returns the InstanceClass field value if set, zero value otherwise.
func (o *CoreUpdateInstanceTypeRequest) GetInstanceClass() string {
	if o == nil || o.InstanceClass == nil {
		var ret string
		return ret
	}
	return *o.InstanceClass
}

// GetInstanceClassOk returns a tuple with the InstanceClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInstanceTypeRequest) GetInstanceClassOk() (*string, bool) {
	if o == nil || o.InstanceClass == nil {
		return nil, false
	}
	return o.InstanceClass, true
}

// HasInstanceClass returns a boolean if a field has been set.
func (o *CoreUpdateInstanceTypeRequest) HasInstanceClass() bool {
	if o != nil && o.InstanceClass != nil {
		return true
	}

	return false
}

// SetInstanceClass gets a reference to the given string and assigns it to the InstanceClass field.
func (o *CoreUpdateInstanceTypeRequest) SetInstanceClass(v string) {
	o.InstanceClass = &v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *CoreUpdateInstanceTypeRequest) GetInstanceType() string {
	if o == nil || o.InstanceType == nil {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInstanceTypeRequest) GetInstanceTypeOk() (*string, bool) {
	if o == nil || o.InstanceType == nil {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *CoreUpdateInstanceTypeRequest) HasInstanceType() bool {
	if o != nil && o.InstanceType != nil {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *CoreUpdateInstanceTypeRequest) SetInstanceType(v string) {
	o.InstanceType = &v
}

// GetInstanceTypeGroup returns the InstanceTypeGroup field value if set, zero value otherwise.
func (o *CoreUpdateInstanceTypeRequest) GetInstanceTypeGroup() string {
	if o == nil || o.InstanceTypeGroup == nil {
		var ret string
		return ret
	}
	return *o.InstanceTypeGroup
}

// GetInstanceTypeGroupOk returns a tuple with the InstanceTypeGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInstanceTypeRequest) GetInstanceTypeGroupOk() (*string, bool) {
	if o == nil || o.InstanceTypeGroup == nil {
		return nil, false
	}
	return o.InstanceTypeGroup, true
}

// HasInstanceTypeGroup returns a boolean if a field has been set.
func (o *CoreUpdateInstanceTypeRequest) HasInstanceTypeGroup() bool {
	if o != nil && o.InstanceTypeGroup != nil {
		return true
	}

	return false
}

// SetInstanceTypeGroup gets a reference to the given string and assigns it to the InstanceTypeGroup field.
func (o *CoreUpdateInstanceTypeRequest) SetInstanceTypeGroup(v string) {
	o.InstanceTypeGroup = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *CoreUpdateInstanceTypeRequest) GetMemory() int32 {
	if o == nil || o.Memory == nil {
		var ret int32
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInstanceTypeRequest) GetMemoryOk() (*int32, bool) {
	if o == nil || o.Memory == nil {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *CoreUpdateInstanceTypeRequest) HasMemory() bool {
	if o != nil && o.Memory != nil {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int32 and assigns it to the Memory field.
func (o *CoreUpdateInstanceTypeRequest) SetMemory(v int32) {
	o.Memory = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *CoreUpdateInstanceTypeRequest) GetZone() []string {
	if o == nil || o.Zone == nil {
		var ret []string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateInstanceTypeRequest) GetZoneOk() (*[]string, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *CoreUpdateInstanceTypeRequest) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given []string and assigns it to the Zone field.
func (o *CoreUpdateInstanceTypeRequest) SetZone(v []string) {
	o.Zone = &v
}

func (o CoreUpdateInstanceTypeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Arch != nil {
		toSerialize["arch"] = o.Arch
	}
	if o.CompatibleVolumeType != nil {
		toSerialize["compatible_volume_type"] = o.CompatibleVolumeType
	}
	if o.Cpu != nil {
		toSerialize["cpu"] = o.Cpu
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.InstanceClass != nil {
		toSerialize["instance_class"] = o.InstanceClass
	}
	if o.InstanceType != nil {
		toSerialize["instance_type"] = o.InstanceType
	}
	if o.InstanceTypeGroup != nil {
		toSerialize["instance_type_group"] = o.InstanceTypeGroup
	}
	if o.Memory != nil {
		toSerialize["memory"] = o.Memory
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	return json.Marshal(toSerialize)
}

type NullableCoreUpdateInstanceTypeRequest struct {
	value *CoreUpdateInstanceTypeRequest
	isSet bool
}

func (v NullableCoreUpdateInstanceTypeRequest) Get() *CoreUpdateInstanceTypeRequest {
	return v.value
}

func (v *NullableCoreUpdateInstanceTypeRequest) Set(val *CoreUpdateInstanceTypeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreUpdateInstanceTypeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreUpdateInstanceTypeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreUpdateInstanceTypeRequest(val *CoreUpdateInstanceTypeRequest) *NullableCoreUpdateInstanceTypeRequest {
	return &NullableCoreUpdateInstanceTypeRequest{value: val, isSet: true}
}

func (v NullableCoreUpdateInstanceTypeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreUpdateInstanceTypeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


