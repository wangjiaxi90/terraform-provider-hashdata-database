/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// AccountAddUserToTeamRequest struct for AccountAddUserToTeamRequest
type AccountAddUserToTeamRequest struct {
	Maintainer *bool `json:"maintainer,omitempty"`
	Userid *string `json:"userid,omitempty"`
}

// NewAccountAddUserToTeamRequest instantiates a new AccountAddUserToTeamRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountAddUserToTeamRequest() *AccountAddUserToTeamRequest {
	this := AccountAddUserToTeamRequest{}
	return &this
}

// NewAccountAddUserToTeamRequestWithDefaults instantiates a new AccountAddUserToTeamRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountAddUserToTeamRequestWithDefaults() *AccountAddUserToTeamRequest {
	this := AccountAddUserToTeamRequest{}
	return &this
}

// GetMaintainer returns the Maintainer field value if set, zero value otherwise.
func (o *AccountAddUserToTeamRequest) GetMaintainer() bool {
	if o == nil || o.Maintainer == nil {
		var ret bool
		return ret
	}
	return *o.Maintainer
}

// GetMaintainerOk returns a tuple with the Maintainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAddUserToTeamRequest) GetMaintainerOk() (*bool, bool) {
	if o == nil || o.Maintainer == nil {
		return nil, false
	}
	return o.Maintainer, true
}

// HasMaintainer returns a boolean if a field has been set.
func (o *AccountAddUserToTeamRequest) HasMaintainer() bool {
	if o != nil && o.Maintainer != nil {
		return true
	}

	return false
}

// SetMaintainer gets a reference to the given bool and assigns it to the Maintainer field.
func (o *AccountAddUserToTeamRequest) SetMaintainer(v bool) {
	o.Maintainer = &v
}

// GetUserid returns the Userid field value if set, zero value otherwise.
func (o *AccountAddUserToTeamRequest) GetUserid() string {
	if o == nil || o.Userid == nil {
		var ret string
		return ret
	}
	return *o.Userid
}

// GetUseridOk returns a tuple with the Userid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAddUserToTeamRequest) GetUseridOk() (*string, bool) {
	if o == nil || o.Userid == nil {
		return nil, false
	}
	return o.Userid, true
}

// HasUserid returns a boolean if a field has been set.
func (o *AccountAddUserToTeamRequest) HasUserid() bool {
	if o != nil && o.Userid != nil {
		return true
	}

	return false
}

// SetUserid gets a reference to the given string and assigns it to the Userid field.
func (o *AccountAddUserToTeamRequest) SetUserid(v string) {
	o.Userid = &v
}

func (o AccountAddUserToTeamRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Maintainer != nil {
		toSerialize["maintainer"] = o.Maintainer
	}
	if o.Userid != nil {
		toSerialize["userid"] = o.Userid
	}
	return json.Marshal(toSerialize)
}

type NullableAccountAddUserToTeamRequest struct {
	value *AccountAddUserToTeamRequest
	isSet bool
}

func (v NullableAccountAddUserToTeamRequest) Get() *AccountAddUserToTeamRequest {
	return v.value
}

func (v *NullableAccountAddUserToTeamRequest) Set(val *AccountAddUserToTeamRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountAddUserToTeamRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountAddUserToTeamRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountAddUserToTeamRequest(val *AccountAddUserToTeamRequest) *NullableAccountAddUserToTeamRequest {
	return &NullableAccountAddUserToTeamRequest{value: val, isSet: true}
}

func (v NullableAccountAddUserToTeamRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountAddUserToTeamRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


