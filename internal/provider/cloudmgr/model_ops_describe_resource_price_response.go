/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// OpsDescribeResourcePriceResponse struct for OpsDescribeResourcePriceResponse
type OpsDescribeResourcePriceResponse struct {
	ActivatedPrice *float64 `json:"activated_price,omitempty"`
	CreateAt *string `json:"createAt,omitempty"`
	DeactivatedPrice *float64 `json:"deactivated_price,omitempty"`
	IaasChargeType *string `json:"iaas_charge_type,omitempty"`
	IaasResourceType *string `json:"iaas_resource_type,omitempty"`
	Id *string `json:"id,omitempty"`
	ResourceConfigName *string `json:"resource_config_name,omitempty"`
	Unit *string `json:"unit,omitempty"`
	Valid *bool `json:"valid,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	Zone *string `json:"zone,omitempty"`
}

// NewOpsDescribeResourcePriceResponse instantiates a new OpsDescribeResourcePriceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsDescribeResourcePriceResponse() *OpsDescribeResourcePriceResponse {
	this := OpsDescribeResourcePriceResponse{}
	return &this
}

// NewOpsDescribeResourcePriceResponseWithDefaults instantiates a new OpsDescribeResourcePriceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsDescribeResourcePriceResponseWithDefaults() *OpsDescribeResourcePriceResponse {
	this := OpsDescribeResourcePriceResponse{}
	return &this
}

// GetActivatedPrice returns the ActivatedPrice field value if set, zero value otherwise.
func (o *OpsDescribeResourcePriceResponse) GetActivatedPrice() float64 {
	if o == nil || o.ActivatedPrice == nil {
		var ret float64
		return ret
	}
	return *o.ActivatedPrice
}

// GetActivatedPriceOk returns a tuple with the ActivatedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeResourcePriceResponse) GetActivatedPriceOk() (*float64, bool) {
	if o == nil || o.ActivatedPrice == nil {
		return nil, false
	}
	return o.ActivatedPrice, true
}

// HasActivatedPrice returns a boolean if a field has been set.
func (o *OpsDescribeResourcePriceResponse) HasActivatedPrice() bool {
	if o != nil && o.ActivatedPrice != nil {
		return true
	}

	return false
}

// SetActivatedPrice gets a reference to the given float64 and assigns it to the ActivatedPrice field.
func (o *OpsDescribeResourcePriceResponse) SetActivatedPrice(v float64) {
	o.ActivatedPrice = &v
}

// GetCreateAt returns the CreateAt field value if set, zero value otherwise.
func (o *OpsDescribeResourcePriceResponse) GetCreateAt() string {
	if o == nil || o.CreateAt == nil {
		var ret string
		return ret
	}
	return *o.CreateAt
}

// GetCreateAtOk returns a tuple with the CreateAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeResourcePriceResponse) GetCreateAtOk() (*string, bool) {
	if o == nil || o.CreateAt == nil {
		return nil, false
	}
	return o.CreateAt, true
}

// HasCreateAt returns a boolean if a field has been set.
func (o *OpsDescribeResourcePriceResponse) HasCreateAt() bool {
	if o != nil && o.CreateAt != nil {
		return true
	}

	return false
}

// SetCreateAt gets a reference to the given string and assigns it to the CreateAt field.
func (o *OpsDescribeResourcePriceResponse) SetCreateAt(v string) {
	o.CreateAt = &v
}

// GetDeactivatedPrice returns the DeactivatedPrice field value if set, zero value otherwise.
func (o *OpsDescribeResourcePriceResponse) GetDeactivatedPrice() float64 {
	if o == nil || o.DeactivatedPrice == nil {
		var ret float64
		return ret
	}
	return *o.DeactivatedPrice
}

// GetDeactivatedPriceOk returns a tuple with the DeactivatedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeResourcePriceResponse) GetDeactivatedPriceOk() (*float64, bool) {
	if o == nil || o.DeactivatedPrice == nil {
		return nil, false
	}
	return o.DeactivatedPrice, true
}

// HasDeactivatedPrice returns a boolean if a field has been set.
func (o *OpsDescribeResourcePriceResponse) HasDeactivatedPrice() bool {
	if o != nil && o.DeactivatedPrice != nil {
		return true
	}

	return false
}

// SetDeactivatedPrice gets a reference to the given float64 and assigns it to the DeactivatedPrice field.
func (o *OpsDescribeResourcePriceResponse) SetDeactivatedPrice(v float64) {
	o.DeactivatedPrice = &v
}

// GetIaasChargeType returns the IaasChargeType field value if set, zero value otherwise.
func (o *OpsDescribeResourcePriceResponse) GetIaasChargeType() string {
	if o == nil || o.IaasChargeType == nil {
		var ret string
		return ret
	}
	return *o.IaasChargeType
}

// GetIaasChargeTypeOk returns a tuple with the IaasChargeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeResourcePriceResponse) GetIaasChargeTypeOk() (*string, bool) {
	if o == nil || o.IaasChargeType == nil {
		return nil, false
	}
	return o.IaasChargeType, true
}

// HasIaasChargeType returns a boolean if a field has been set.
func (o *OpsDescribeResourcePriceResponse) HasIaasChargeType() bool {
	if o != nil && o.IaasChargeType != nil {
		return true
	}

	return false
}

// SetIaasChargeType gets a reference to the given string and assigns it to the IaasChargeType field.
func (o *OpsDescribeResourcePriceResponse) SetIaasChargeType(v string) {
	o.IaasChargeType = &v
}

// GetIaasResourceType returns the IaasResourceType field value if set, zero value otherwise.
func (o *OpsDescribeResourcePriceResponse) GetIaasResourceType() string {
	if o == nil || o.IaasResourceType == nil {
		var ret string
		return ret
	}
	return *o.IaasResourceType
}

// GetIaasResourceTypeOk returns a tuple with the IaasResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeResourcePriceResponse) GetIaasResourceTypeOk() (*string, bool) {
	if o == nil || o.IaasResourceType == nil {
		return nil, false
	}
	return o.IaasResourceType, true
}

// HasIaasResourceType returns a boolean if a field has been set.
func (o *OpsDescribeResourcePriceResponse) HasIaasResourceType() bool {
	if o != nil && o.IaasResourceType != nil {
		return true
	}

	return false
}

// SetIaasResourceType gets a reference to the given string and assigns it to the IaasResourceType field.
func (o *OpsDescribeResourcePriceResponse) SetIaasResourceType(v string) {
	o.IaasResourceType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpsDescribeResourcePriceResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeResourcePriceResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpsDescribeResourcePriceResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OpsDescribeResourcePriceResponse) SetId(v string) {
	o.Id = &v
}

// GetResourceConfigName returns the ResourceConfigName field value if set, zero value otherwise.
func (o *OpsDescribeResourcePriceResponse) GetResourceConfigName() string {
	if o == nil || o.ResourceConfigName == nil {
		var ret string
		return ret
	}
	return *o.ResourceConfigName
}

// GetResourceConfigNameOk returns a tuple with the ResourceConfigName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeResourcePriceResponse) GetResourceConfigNameOk() (*string, bool) {
	if o == nil || o.ResourceConfigName == nil {
		return nil, false
	}
	return o.ResourceConfigName, true
}

// HasResourceConfigName returns a boolean if a field has been set.
func (o *OpsDescribeResourcePriceResponse) HasResourceConfigName() bool {
	if o != nil && o.ResourceConfigName != nil {
		return true
	}

	return false
}

// SetResourceConfigName gets a reference to the given string and assigns it to the ResourceConfigName field.
func (o *OpsDescribeResourcePriceResponse) SetResourceConfigName(v string) {
	o.ResourceConfigName = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *OpsDescribeResourcePriceResponse) GetUnit() string {
	if o == nil || o.Unit == nil {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeResourcePriceResponse) GetUnitOk() (*string, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *OpsDescribeResourcePriceResponse) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *OpsDescribeResourcePriceResponse) SetUnit(v string) {
	o.Unit = &v
}

// GetValid returns the Valid field value if set, zero value otherwise.
func (o *OpsDescribeResourcePriceResponse) GetValid() bool {
	if o == nil || o.Valid == nil {
		var ret bool
		return ret
	}
	return *o.Valid
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeResourcePriceResponse) GetValidOk() (*bool, bool) {
	if o == nil || o.Valid == nil {
		return nil, false
	}
	return o.Valid, true
}

// HasValid returns a boolean if a field has been set.
func (o *OpsDescribeResourcePriceResponse) HasValid() bool {
	if o != nil && o.Valid != nil {
		return true
	}

	return false
}

// SetValid gets a reference to the given bool and assigns it to the Valid field.
func (o *OpsDescribeResourcePriceResponse) SetValid(v bool) {
	o.Valid = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *OpsDescribeResourcePriceResponse) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeResourcePriceResponse) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *OpsDescribeResourcePriceResponse) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *OpsDescribeResourcePriceResponse) SetVendor(v string) {
	o.Vendor = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *OpsDescribeResourcePriceResponse) GetZone() string {
	if o == nil || o.Zone == nil {
		var ret string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeResourcePriceResponse) GetZoneOk() (*string, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *OpsDescribeResourcePriceResponse) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given string and assigns it to the Zone field.
func (o *OpsDescribeResourcePriceResponse) SetZone(v string) {
	o.Zone = &v
}

func (o OpsDescribeResourcePriceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActivatedPrice != nil {
		toSerialize["activated_price"] = o.ActivatedPrice
	}
	if o.CreateAt != nil {
		toSerialize["createAt"] = o.CreateAt
	}
	if o.DeactivatedPrice != nil {
		toSerialize["deactivated_price"] = o.DeactivatedPrice
	}
	if o.IaasChargeType != nil {
		toSerialize["iaas_charge_type"] = o.IaasChargeType
	}
	if o.IaasResourceType != nil {
		toSerialize["iaas_resource_type"] = o.IaasResourceType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ResourceConfigName != nil {
		toSerialize["resource_config_name"] = o.ResourceConfigName
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	if o.Valid != nil {
		toSerialize["valid"] = o.Valid
	}
	if o.Vendor != nil {
		toSerialize["vendor"] = o.Vendor
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	return json.Marshal(toSerialize)
}

type NullableOpsDescribeResourcePriceResponse struct {
	value *OpsDescribeResourcePriceResponse
	isSet bool
}

func (v NullableOpsDescribeResourcePriceResponse) Get() *OpsDescribeResourcePriceResponse {
	return v.value
}

func (v *NullableOpsDescribeResourcePriceResponse) Set(val *OpsDescribeResourcePriceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsDescribeResourcePriceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsDescribeResourcePriceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsDescribeResourcePriceResponse(val *OpsDescribeResourcePriceResponse) *NullableOpsDescribeResourcePriceResponse {
	return &NullableOpsDescribeResourcePriceResponse{value: val, isSet: true}
}

func (v NullableOpsDescribeResourcePriceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsDescribeResourcePriceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


