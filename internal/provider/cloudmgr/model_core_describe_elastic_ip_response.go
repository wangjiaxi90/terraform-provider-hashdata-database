/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreDescribeElasticIpResponse struct for CoreDescribeElasticIpResponse
type CoreDescribeElasticIpResponse struct {
	AssociationId *string `json:"association_id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	DestroyedAt *string `json:"destroyed_at,omitempty"`
	Id *string `json:"id,omitempty"`
	Instance *string `json:"instance,omitempty"`
	InternetChargeType *string `json:"internet_charge_type,omitempty"`
	MaxBandWidth *int32 `json:"max_band_width,omitempty"`
	Name *string `json:"name,omitempty"`
	NetworkId *string `json:"network_id,omitempty"`
	PoolName *string `json:"pool_name,omitempty"`
	PublicAddressIp *string `json:"public_address_ip,omitempty"`
	Region *string `json:"region,omitempty"`
	Service *string `json:"service,omitempty"`
	Status *string `json:"status,omitempty"`
	Tenant *string `json:"tenant,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	VendorElasticIpId *string `json:"vendor_elastic_ip_id,omitempty"`
}

// NewCoreDescribeElasticIpResponse instantiates a new CoreDescribeElasticIpResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreDescribeElasticIpResponse() *CoreDescribeElasticIpResponse {
	this := CoreDescribeElasticIpResponse{}
	return &this
}

// NewCoreDescribeElasticIpResponseWithDefaults instantiates a new CoreDescribeElasticIpResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreDescribeElasticIpResponseWithDefaults() *CoreDescribeElasticIpResponse {
	this := CoreDescribeElasticIpResponse{}
	return &this
}

// GetAssociationId returns the AssociationId field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetAssociationId() string {
	if o == nil || o.AssociationId == nil {
		var ret string
		return ret
	}
	return *o.AssociationId
}

// GetAssociationIdOk returns a tuple with the AssociationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetAssociationIdOk() (*string, bool) {
	if o == nil || o.AssociationId == nil {
		return nil, false
	}
	return o.AssociationId, true
}

// HasAssociationId returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasAssociationId() bool {
	if o != nil && o.AssociationId != nil {
		return true
	}

	return false
}

// SetAssociationId gets a reference to the given string and assigns it to the AssociationId field.
func (o *CoreDescribeElasticIpResponse) SetAssociationId(v string) {
	o.AssociationId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CoreDescribeElasticIpResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDestroyedAt returns the DestroyedAt field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetDestroyedAt() string {
	if o == nil || o.DestroyedAt == nil {
		var ret string
		return ret
	}
	return *o.DestroyedAt
}

// GetDestroyedAtOk returns a tuple with the DestroyedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetDestroyedAtOk() (*string, bool) {
	if o == nil || o.DestroyedAt == nil {
		return nil, false
	}
	return o.DestroyedAt, true
}

// HasDestroyedAt returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasDestroyedAt() bool {
	if o != nil && o.DestroyedAt != nil {
		return true
	}

	return false
}

// SetDestroyedAt gets a reference to the given string and assigns it to the DestroyedAt field.
func (o *CoreDescribeElasticIpResponse) SetDestroyedAt(v string) {
	o.DestroyedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CoreDescribeElasticIpResponse) SetId(v string) {
	o.Id = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetInstance() string {
	if o == nil || o.Instance == nil {
		var ret string
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetInstanceOk() (*string, bool) {
	if o == nil || o.Instance == nil {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasInstance() bool {
	if o != nil && o.Instance != nil {
		return true
	}

	return false
}

// SetInstance gets a reference to the given string and assigns it to the Instance field.
func (o *CoreDescribeElasticIpResponse) SetInstance(v string) {
	o.Instance = &v
}

// GetInternetChargeType returns the InternetChargeType field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetInternetChargeType() string {
	if o == nil || o.InternetChargeType == nil {
		var ret string
		return ret
	}
	return *o.InternetChargeType
}

// GetInternetChargeTypeOk returns a tuple with the InternetChargeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetInternetChargeTypeOk() (*string, bool) {
	if o == nil || o.InternetChargeType == nil {
		return nil, false
	}
	return o.InternetChargeType, true
}

// HasInternetChargeType returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasInternetChargeType() bool {
	if o != nil && o.InternetChargeType != nil {
		return true
	}

	return false
}

// SetInternetChargeType gets a reference to the given string and assigns it to the InternetChargeType field.
func (o *CoreDescribeElasticIpResponse) SetInternetChargeType(v string) {
	o.InternetChargeType = &v
}

// GetMaxBandWidth returns the MaxBandWidth field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetMaxBandWidth() int32 {
	if o == nil || o.MaxBandWidth == nil {
		var ret int32
		return ret
	}
	return *o.MaxBandWidth
}

// GetMaxBandWidthOk returns a tuple with the MaxBandWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetMaxBandWidthOk() (*int32, bool) {
	if o == nil || o.MaxBandWidth == nil {
		return nil, false
	}
	return o.MaxBandWidth, true
}

// HasMaxBandWidth returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasMaxBandWidth() bool {
	if o != nil && o.MaxBandWidth != nil {
		return true
	}

	return false
}

// SetMaxBandWidth gets a reference to the given int32 and assigns it to the MaxBandWidth field.
func (o *CoreDescribeElasticIpResponse) SetMaxBandWidth(v int32) {
	o.MaxBandWidth = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreDescribeElasticIpResponse) SetName(v string) {
	o.Name = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetNetworkId() string {
	if o == nil || o.NetworkId == nil {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetNetworkIdOk() (*string, bool) {
	if o == nil || o.NetworkId == nil {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasNetworkId() bool {
	if o != nil && o.NetworkId != nil {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *CoreDescribeElasticIpResponse) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetPoolName returns the PoolName field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetPoolName() string {
	if o == nil || o.PoolName == nil {
		var ret string
		return ret
	}
	return *o.PoolName
}

// GetPoolNameOk returns a tuple with the PoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetPoolNameOk() (*string, bool) {
	if o == nil || o.PoolName == nil {
		return nil, false
	}
	return o.PoolName, true
}

// HasPoolName returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasPoolName() bool {
	if o != nil && o.PoolName != nil {
		return true
	}

	return false
}

// SetPoolName gets a reference to the given string and assigns it to the PoolName field.
func (o *CoreDescribeElasticIpResponse) SetPoolName(v string) {
	o.PoolName = &v
}

// GetPublicAddressIp returns the PublicAddressIp field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetPublicAddressIp() string {
	if o == nil || o.PublicAddressIp == nil {
		var ret string
		return ret
	}
	return *o.PublicAddressIp
}

// GetPublicAddressIpOk returns a tuple with the PublicAddressIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetPublicAddressIpOk() (*string, bool) {
	if o == nil || o.PublicAddressIp == nil {
		return nil, false
	}
	return o.PublicAddressIp, true
}

// HasPublicAddressIp returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasPublicAddressIp() bool {
	if o != nil && o.PublicAddressIp != nil {
		return true
	}

	return false
}

// SetPublicAddressIp gets a reference to the given string and assigns it to the PublicAddressIp field.
func (o *CoreDescribeElasticIpResponse) SetPublicAddressIp(v string) {
	o.PublicAddressIp = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *CoreDescribeElasticIpResponse) SetRegion(v string) {
	o.Region = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *CoreDescribeElasticIpResponse) SetService(v string) {
	o.Service = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CoreDescribeElasticIpResponse) SetStatus(v string) {
	o.Status = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetTenant() string {
	if o == nil || o.Tenant == nil {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetTenantOk() (*string, bool) {
	if o == nil || o.Tenant == nil {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasTenant() bool {
	if o != nil && o.Tenant != nil {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *CoreDescribeElasticIpResponse) SetTenant(v string) {
	o.Tenant = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *CoreDescribeElasticIpResponse) SetVendor(v string) {
	o.Vendor = &v
}

// GetVendorElasticIpId returns the VendorElasticIpId field value if set, zero value otherwise.
func (o *CoreDescribeElasticIpResponse) GetVendorElasticIpId() string {
	if o == nil || o.VendorElasticIpId == nil {
		var ret string
		return ret
	}
	return *o.VendorElasticIpId
}

// GetVendorElasticIpIdOk returns a tuple with the VendorElasticIpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeElasticIpResponse) GetVendorElasticIpIdOk() (*string, bool) {
	if o == nil || o.VendorElasticIpId == nil {
		return nil, false
	}
	return o.VendorElasticIpId, true
}

// HasVendorElasticIpId returns a boolean if a field has been set.
func (o *CoreDescribeElasticIpResponse) HasVendorElasticIpId() bool {
	if o != nil && o.VendorElasticIpId != nil {
		return true
	}

	return false
}

// SetVendorElasticIpId gets a reference to the given string and assigns it to the VendorElasticIpId field.
func (o *CoreDescribeElasticIpResponse) SetVendorElasticIpId(v string) {
	o.VendorElasticIpId = &v
}

func (o CoreDescribeElasticIpResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssociationId != nil {
		toSerialize["association_id"] = o.AssociationId
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.DestroyedAt != nil {
		toSerialize["destroyed_at"] = o.DestroyedAt
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Instance != nil {
		toSerialize["instance"] = o.Instance
	}
	if o.InternetChargeType != nil {
		toSerialize["internet_charge_type"] = o.InternetChargeType
	}
	if o.MaxBandWidth != nil {
		toSerialize["max_band_width"] = o.MaxBandWidth
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NetworkId != nil {
		toSerialize["network_id"] = o.NetworkId
	}
	if o.PoolName != nil {
		toSerialize["pool_name"] = o.PoolName
	}
	if o.PublicAddressIp != nil {
		toSerialize["public_address_ip"] = o.PublicAddressIp
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tenant != nil {
		toSerialize["tenant"] = o.Tenant
	}
	if o.Vendor != nil {
		toSerialize["vendor"] = o.Vendor
	}
	if o.VendorElasticIpId != nil {
		toSerialize["vendor_elastic_ip_id"] = o.VendorElasticIpId
	}
	return json.Marshal(toSerialize)
}

type NullableCoreDescribeElasticIpResponse struct {
	value *CoreDescribeElasticIpResponse
	isSet bool
}

func (v NullableCoreDescribeElasticIpResponse) Get() *CoreDescribeElasticIpResponse {
	return v.value
}

func (v *NullableCoreDescribeElasticIpResponse) Set(val *CoreDescribeElasticIpResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreDescribeElasticIpResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreDescribeElasticIpResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreDescribeElasticIpResponse(val *CoreDescribeElasticIpResponse) *NullableCoreDescribeElasticIpResponse {
	return &NullableCoreDescribeElasticIpResponse{value: val, isSet: true}
}

func (v NullableCoreDescribeElasticIpResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreDescribeElasticIpResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


