/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreCreateInternetAccessRequest struct for CoreCreateInternetAccessRequest
type CoreCreateInternetAccessRequest struct {
	EipId *[]string `json:"eip_id,omitempty"`
	MaxBandwidth *int32 `json:"max_bandwidth,omitempty"`
	PayByBandwidth *bool `json:"pay_by_bandwidth,omitempty"`
}

// NewCoreCreateInternetAccessRequest instantiates a new CoreCreateInternetAccessRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCreateInternetAccessRequest() *CoreCreateInternetAccessRequest {
	this := CoreCreateInternetAccessRequest{}
	return &this
}

// NewCoreCreateInternetAccessRequestWithDefaults instantiates a new CoreCreateInternetAccessRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCreateInternetAccessRequestWithDefaults() *CoreCreateInternetAccessRequest {
	this := CoreCreateInternetAccessRequest{}
	return &this
}

// GetEipId returns the EipId field value if set, zero value otherwise.
func (o *CoreCreateInternetAccessRequest) GetEipId() []string {
	if o == nil || o.EipId == nil {
		var ret []string
		return ret
	}
	return *o.EipId
}

// GetEipIdOk returns a tuple with the EipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateInternetAccessRequest) GetEipIdOk() (*[]string, bool) {
	if o == nil || o.EipId == nil {
		return nil, false
	}
	return o.EipId, true
}

// HasEipId returns a boolean if a field has been set.
func (o *CoreCreateInternetAccessRequest) HasEipId() bool {
	if o != nil && o.EipId != nil {
		return true
	}

	return false
}

// SetEipId gets a reference to the given []string and assigns it to the EipId field.
func (o *CoreCreateInternetAccessRequest) SetEipId(v []string) {
	o.EipId = &v
}

// GetMaxBandwidth returns the MaxBandwidth field value if set, zero value otherwise.
func (o *CoreCreateInternetAccessRequest) GetMaxBandwidth() int32 {
	if o == nil || o.MaxBandwidth == nil {
		var ret int32
		return ret
	}
	return *o.MaxBandwidth
}

// GetMaxBandwidthOk returns a tuple with the MaxBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateInternetAccessRequest) GetMaxBandwidthOk() (*int32, bool) {
	if o == nil || o.MaxBandwidth == nil {
		return nil, false
	}
	return o.MaxBandwidth, true
}

// HasMaxBandwidth returns a boolean if a field has been set.
func (o *CoreCreateInternetAccessRequest) HasMaxBandwidth() bool {
	if o != nil && o.MaxBandwidth != nil {
		return true
	}

	return false
}

// SetMaxBandwidth gets a reference to the given int32 and assigns it to the MaxBandwidth field.
func (o *CoreCreateInternetAccessRequest) SetMaxBandwidth(v int32) {
	o.MaxBandwidth = &v
}

// GetPayByBandwidth returns the PayByBandwidth field value if set, zero value otherwise.
func (o *CoreCreateInternetAccessRequest) GetPayByBandwidth() bool {
	if o == nil || o.PayByBandwidth == nil {
		var ret bool
		return ret
	}
	return *o.PayByBandwidth
}

// GetPayByBandwidthOk returns a tuple with the PayByBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateInternetAccessRequest) GetPayByBandwidthOk() (*bool, bool) {
	if o == nil || o.PayByBandwidth == nil {
		return nil, false
	}
	return o.PayByBandwidth, true
}

// HasPayByBandwidth returns a boolean if a field has been set.
func (o *CoreCreateInternetAccessRequest) HasPayByBandwidth() bool {
	if o != nil && o.PayByBandwidth != nil {
		return true
	}

	return false
}

// SetPayByBandwidth gets a reference to the given bool and assigns it to the PayByBandwidth field.
func (o *CoreCreateInternetAccessRequest) SetPayByBandwidth(v bool) {
	o.PayByBandwidth = &v
}

func (o CoreCreateInternetAccessRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EipId != nil {
		toSerialize["eip_id"] = o.EipId
	}
	if o.MaxBandwidth != nil {
		toSerialize["max_bandwidth"] = o.MaxBandwidth
	}
	if o.PayByBandwidth != nil {
		toSerialize["pay_by_bandwidth"] = o.PayByBandwidth
	}
	return json.Marshal(toSerialize)
}

type NullableCoreCreateInternetAccessRequest struct {
	value *CoreCreateInternetAccessRequest
	isSet bool
}

func (v NullableCoreCreateInternetAccessRequest) Get() *CoreCreateInternetAccessRequest {
	return v.value
}

func (v *NullableCoreCreateInternetAccessRequest) Set(val *CoreCreateInternetAccessRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCreateInternetAccessRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCreateInternetAccessRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCreateInternetAccessRequest(val *CoreCreateInternetAccessRequest) *NullableCoreCreateInternetAccessRequest {
	return &NullableCoreCreateInternetAccessRequest{value: val, isSet: true}
}

func (v NullableCoreCreateInternetAccessRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCreateInternetAccessRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


