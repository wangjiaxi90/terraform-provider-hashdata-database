/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// OpsMatcher struct for OpsMatcher
type OpsMatcher struct {
	Equal *bool `json:"equal,omitempty"`
	Name *string `json:"name,omitempty"`
	Regex *bool `json:"regex,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewOpsMatcher instantiates a new OpsMatcher object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsMatcher() *OpsMatcher {
	this := OpsMatcher{}
	return &this
}

// NewOpsMatcherWithDefaults instantiates a new OpsMatcher object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsMatcherWithDefaults() *OpsMatcher {
	this := OpsMatcher{}
	return &this
}

// GetEqual returns the Equal field value if set, zero value otherwise.
func (o *OpsMatcher) GetEqual() bool {
	if o == nil || o.Equal == nil {
		var ret bool
		return ret
	}
	return *o.Equal
}

// GetEqualOk returns a tuple with the Equal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsMatcher) GetEqualOk() (*bool, bool) {
	if o == nil || o.Equal == nil {
		return nil, false
	}
	return o.Equal, true
}

// HasEqual returns a boolean if a field has been set.
func (o *OpsMatcher) HasEqual() bool {
	if o != nil && o.Equal != nil {
		return true
	}

	return false
}

// SetEqual gets a reference to the given bool and assigns it to the Equal field.
func (o *OpsMatcher) SetEqual(v bool) {
	o.Equal = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpsMatcher) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsMatcher) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpsMatcher) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpsMatcher) SetName(v string) {
	o.Name = &v
}

// GetRegex returns the Regex field value if set, zero value otherwise.
func (o *OpsMatcher) GetRegex() bool {
	if o == nil || o.Regex == nil {
		var ret bool
		return ret
	}
	return *o.Regex
}

// GetRegexOk returns a tuple with the Regex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsMatcher) GetRegexOk() (*bool, bool) {
	if o == nil || o.Regex == nil {
		return nil, false
	}
	return o.Regex, true
}

// HasRegex returns a boolean if a field has been set.
func (o *OpsMatcher) HasRegex() bool {
	if o != nil && o.Regex != nil {
		return true
	}

	return false
}

// SetRegex gets a reference to the given bool and assigns it to the Regex field.
func (o *OpsMatcher) SetRegex(v bool) {
	o.Regex = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *OpsMatcher) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsMatcher) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *OpsMatcher) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *OpsMatcher) SetValue(v string) {
	o.Value = &v
}

func (o OpsMatcher) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Equal != nil {
		toSerialize["equal"] = o.Equal
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Regex != nil {
		toSerialize["regex"] = o.Regex
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableOpsMatcher struct {
	value *OpsMatcher
	isSet bool
}

func (v NullableOpsMatcher) Get() *OpsMatcher {
	return v.value
}

func (v *NullableOpsMatcher) Set(val *OpsMatcher) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsMatcher) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsMatcher) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsMatcher(val *OpsMatcher) *NullableOpsMatcher {
	return &NullableOpsMatcher{value: val, isSet: true}
}

func (v NullableOpsMatcher) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsMatcher) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


