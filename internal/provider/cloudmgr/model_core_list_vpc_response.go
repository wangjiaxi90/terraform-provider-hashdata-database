/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreListVpcResponse struct for CoreListVpcResponse
type CoreListVpcResponse struct {
	Vpc *[]CoreDescribeVpcResponse `json:"vpc,omitempty"`
}

// NewCoreListVpcResponse instantiates a new CoreListVpcResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreListVpcResponse() *CoreListVpcResponse {
	this := CoreListVpcResponse{}
	return &this
}

// NewCoreListVpcResponseWithDefaults instantiates a new CoreListVpcResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreListVpcResponseWithDefaults() *CoreListVpcResponse {
	this := CoreListVpcResponse{}
	return &this
}

// GetVpc returns the Vpc field value if set, zero value otherwise.
func (o *CoreListVpcResponse) GetVpc() []CoreDescribeVpcResponse {
	if o == nil || o.Vpc == nil {
		var ret []CoreDescribeVpcResponse
		return ret
	}
	return *o.Vpc
}

// GetVpcOk returns a tuple with the Vpc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreListVpcResponse) GetVpcOk() (*[]CoreDescribeVpcResponse, bool) {
	if o == nil || o.Vpc == nil {
		return nil, false
	}
	return o.Vpc, true
}

// HasVpc returns a boolean if a field has been set.
func (o *CoreListVpcResponse) HasVpc() bool {
	if o != nil && o.Vpc != nil {
		return true
	}

	return false
}

// SetVpc gets a reference to the given []CoreDescribeVpcResponse and assigns it to the Vpc field.
func (o *CoreListVpcResponse) SetVpc(v []CoreDescribeVpcResponse) {
	o.Vpc = &v
}

func (o CoreListVpcResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Vpc != nil {
		toSerialize["vpc"] = o.Vpc
	}
	return json.Marshal(toSerialize)
}

type NullableCoreListVpcResponse struct {
	value *CoreListVpcResponse
	isSet bool
}

func (v NullableCoreListVpcResponse) Get() *CoreListVpcResponse {
	return v.value
}

func (v *NullableCoreListVpcResponse) Set(val *CoreListVpcResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreListVpcResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreListVpcResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreListVpcResponse(val *CoreListVpcResponse) *NullableCoreListVpcResponse {
	return &NullableCoreListVpcResponse{value: val, isSet: true}
}

func (v NullableCoreListVpcResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreListVpcResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


