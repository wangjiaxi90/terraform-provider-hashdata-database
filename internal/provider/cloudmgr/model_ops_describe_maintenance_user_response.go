/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// OpsDescribeMaintenanceUserResponse struct for OpsDescribeMaintenanceUserResponse
type OpsDescribeMaintenanceUserResponse struct {
	Admin *bool `json:"admin,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	DestroyedAt *string `json:"destroyed_at,omitempty"`
	Email *string `json:"email,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	ExpiredAt *string `json:"expired_at,omitempty"`
	External *bool `json:"external,omitempty"`
	GivenName *string `json:"given_name,omitempty"`
	Id *string `json:"id,omitempty"`
	Locked *bool `json:"locked,omitempty"`
	PasswordExpiredAt *string `json:"password_expired_at,omitempty"`
	Supervisor *bool `json:"supervisor,omitempty"`
	Surname *string `json:"surname,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewOpsDescribeMaintenanceUserResponse instantiates a new OpsDescribeMaintenanceUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsDescribeMaintenanceUserResponse() *OpsDescribeMaintenanceUserResponse {
	this := OpsDescribeMaintenanceUserResponse{}
	return &this
}

// NewOpsDescribeMaintenanceUserResponseWithDefaults instantiates a new OpsDescribeMaintenanceUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsDescribeMaintenanceUserResponseWithDefaults() *OpsDescribeMaintenanceUserResponse {
	this := OpsDescribeMaintenanceUserResponse{}
	return &this
}

// GetAdmin returns the Admin field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetAdmin() bool {
	if o == nil || o.Admin == nil {
		var ret bool
		return ret
	}
	return *o.Admin
}

// GetAdminOk returns a tuple with the Admin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetAdminOk() (*bool, bool) {
	if o == nil || o.Admin == nil {
		return nil, false
	}
	return o.Admin, true
}

// HasAdmin returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasAdmin() bool {
	if o != nil && o.Admin != nil {
		return true
	}

	return false
}

// SetAdmin gets a reference to the given bool and assigns it to the Admin field.
func (o *OpsDescribeMaintenanceUserResponse) SetAdmin(v bool) {
	o.Admin = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *OpsDescribeMaintenanceUserResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDestroyedAt returns the DestroyedAt field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetDestroyedAt() string {
	if o == nil || o.DestroyedAt == nil {
		var ret string
		return ret
	}
	return *o.DestroyedAt
}

// GetDestroyedAtOk returns a tuple with the DestroyedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetDestroyedAtOk() (*string, bool) {
	if o == nil || o.DestroyedAt == nil {
		return nil, false
	}
	return o.DestroyedAt, true
}

// HasDestroyedAt returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasDestroyedAt() bool {
	if o != nil && o.DestroyedAt != nil {
		return true
	}

	return false
}

// SetDestroyedAt gets a reference to the given string and assigns it to the DestroyedAt field.
func (o *OpsDescribeMaintenanceUserResponse) SetDestroyedAt(v string) {
	o.DestroyedAt = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OpsDescribeMaintenanceUserResponse) SetEmail(v string) {
	o.Email = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *OpsDescribeMaintenanceUserResponse) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetExpiredAt() string {
	if o == nil || o.ExpiredAt == nil {
		var ret string
		return ret
	}
	return *o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetExpiredAtOk() (*string, bool) {
	if o == nil || o.ExpiredAt == nil {
		return nil, false
	}
	return o.ExpiredAt, true
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasExpiredAt() bool {
	if o != nil && o.ExpiredAt != nil {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given string and assigns it to the ExpiredAt field.
func (o *OpsDescribeMaintenanceUserResponse) SetExpiredAt(v string) {
	o.ExpiredAt = &v
}

// GetExternal returns the External field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetExternal() bool {
	if o == nil || o.External == nil {
		var ret bool
		return ret
	}
	return *o.External
}

// GetExternalOk returns a tuple with the External field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetExternalOk() (*bool, bool) {
	if o == nil || o.External == nil {
		return nil, false
	}
	return o.External, true
}

// HasExternal returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasExternal() bool {
	if o != nil && o.External != nil {
		return true
	}

	return false
}

// SetExternal gets a reference to the given bool and assigns it to the External field.
func (o *OpsDescribeMaintenanceUserResponse) SetExternal(v bool) {
	o.External = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetGivenName() string {
	if o == nil || o.GivenName == nil {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetGivenNameOk() (*string, bool) {
	if o == nil || o.GivenName == nil {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasGivenName() bool {
	if o != nil && o.GivenName != nil {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *OpsDescribeMaintenanceUserResponse) SetGivenName(v string) {
	o.GivenName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OpsDescribeMaintenanceUserResponse) SetId(v string) {
	o.Id = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetLockedOk() (*bool, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *OpsDescribeMaintenanceUserResponse) SetLocked(v bool) {
	o.Locked = &v
}

// GetPasswordExpiredAt returns the PasswordExpiredAt field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetPasswordExpiredAt() string {
	if o == nil || o.PasswordExpiredAt == nil {
		var ret string
		return ret
	}
	return *o.PasswordExpiredAt
}

// GetPasswordExpiredAtOk returns a tuple with the PasswordExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetPasswordExpiredAtOk() (*string, bool) {
	if o == nil || o.PasswordExpiredAt == nil {
		return nil, false
	}
	return o.PasswordExpiredAt, true
}

// HasPasswordExpiredAt returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasPasswordExpiredAt() bool {
	if o != nil && o.PasswordExpiredAt != nil {
		return true
	}

	return false
}

// SetPasswordExpiredAt gets a reference to the given string and assigns it to the PasswordExpiredAt field.
func (o *OpsDescribeMaintenanceUserResponse) SetPasswordExpiredAt(v string) {
	o.PasswordExpiredAt = &v
}

// GetSupervisor returns the Supervisor field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetSupervisor() bool {
	if o == nil || o.Supervisor == nil {
		var ret bool
		return ret
	}
	return *o.Supervisor
}

// GetSupervisorOk returns a tuple with the Supervisor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetSupervisorOk() (*bool, bool) {
	if o == nil || o.Supervisor == nil {
		return nil, false
	}
	return o.Supervisor, true
}

// HasSupervisor returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasSupervisor() bool {
	if o != nil && o.Supervisor != nil {
		return true
	}

	return false
}

// SetSupervisor gets a reference to the given bool and assigns it to the Supervisor field.
func (o *OpsDescribeMaintenanceUserResponse) SetSupervisor(v bool) {
	o.Supervisor = &v
}

// GetSurname returns the Surname field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetSurname() string {
	if o == nil || o.Surname == nil {
		var ret string
		return ret
	}
	return *o.Surname
}

// GetSurnameOk returns a tuple with the Surname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetSurnameOk() (*string, bool) {
	if o == nil || o.Surname == nil {
		return nil, false
	}
	return o.Surname, true
}

// HasSurname returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasSurname() bool {
	if o != nil && o.Surname != nil {
		return true
	}

	return false
}

// SetSurname gets a reference to the given string and assigns it to the Surname field.
func (o *OpsDescribeMaintenanceUserResponse) SetSurname(v string) {
	o.Surname = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *OpsDescribeMaintenanceUserResponse) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeMaintenanceUserResponse) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *OpsDescribeMaintenanceUserResponse) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *OpsDescribeMaintenanceUserResponse) SetUsername(v string) {
	o.Username = &v
}

func (o OpsDescribeMaintenanceUserResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Admin != nil {
		toSerialize["admin"] = o.Admin
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.DestroyedAt != nil {
		toSerialize["destroyed_at"] = o.DestroyedAt
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.ExpiredAt != nil {
		toSerialize["expired_at"] = o.ExpiredAt
	}
	if o.External != nil {
		toSerialize["external"] = o.External
	}
	if o.GivenName != nil {
		toSerialize["given_name"] = o.GivenName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.PasswordExpiredAt != nil {
		toSerialize["password_expired_at"] = o.PasswordExpiredAt
	}
	if o.Supervisor != nil {
		toSerialize["supervisor"] = o.Supervisor
	}
	if o.Surname != nil {
		toSerialize["surname"] = o.Surname
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableOpsDescribeMaintenanceUserResponse struct {
	value *OpsDescribeMaintenanceUserResponse
	isSet bool
}

func (v NullableOpsDescribeMaintenanceUserResponse) Get() *OpsDescribeMaintenanceUserResponse {
	return v.value
}

func (v *NullableOpsDescribeMaintenanceUserResponse) Set(val *OpsDescribeMaintenanceUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsDescribeMaintenanceUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsDescribeMaintenanceUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsDescribeMaintenanceUserResponse(val *OpsDescribeMaintenanceUserResponse) *NullableOpsDescribeMaintenanceUserResponse {
	return &NullableOpsDescribeMaintenanceUserResponse{value: val, isSet: true}
}

func (v NullableOpsDescribeMaintenanceUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsDescribeMaintenanceUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


