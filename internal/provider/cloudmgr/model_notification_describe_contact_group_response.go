/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// NotificationDescribeContactGroupResponse struct for NotificationDescribeContactGroupResponse
type NotificationDescribeContactGroupResponse struct {
	Contacts *[]NotificationDescribeContactResponse `json:"contacts,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Tenant *string `json:"tenant,omitempty"`
	User *string `json:"user,omitempty"`
}

// NewNotificationDescribeContactGroupResponse instantiates a new NotificationDescribeContactGroupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationDescribeContactGroupResponse() *NotificationDescribeContactGroupResponse {
	this := NotificationDescribeContactGroupResponse{}
	return &this
}

// NewNotificationDescribeContactGroupResponseWithDefaults instantiates a new NotificationDescribeContactGroupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationDescribeContactGroupResponseWithDefaults() *NotificationDescribeContactGroupResponse {
	this := NotificationDescribeContactGroupResponse{}
	return &this
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *NotificationDescribeContactGroupResponse) GetContacts() []NotificationDescribeContactResponse {
	if o == nil || o.Contacts == nil {
		var ret []NotificationDescribeContactResponse
		return ret
	}
	return *o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationDescribeContactGroupResponse) GetContactsOk() (*[]NotificationDescribeContactResponse, bool) {
	if o == nil || o.Contacts == nil {
		return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *NotificationDescribeContactGroupResponse) HasContacts() bool {
	if o != nil && o.Contacts != nil {
		return true
	}

	return false
}

// SetContacts gets a reference to the given []NotificationDescribeContactResponse and assigns it to the Contacts field.
func (o *NotificationDescribeContactGroupResponse) SetContacts(v []NotificationDescribeContactResponse) {
	o.Contacts = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NotificationDescribeContactGroupResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationDescribeContactGroupResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NotificationDescribeContactGroupResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *NotificationDescribeContactGroupResponse) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NotificationDescribeContactGroupResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationDescribeContactGroupResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NotificationDescribeContactGroupResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NotificationDescribeContactGroupResponse) SetName(v string) {
	o.Name = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *NotificationDescribeContactGroupResponse) GetTenant() string {
	if o == nil || o.Tenant == nil {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationDescribeContactGroupResponse) GetTenantOk() (*string, bool) {
	if o == nil || o.Tenant == nil {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *NotificationDescribeContactGroupResponse) HasTenant() bool {
	if o != nil && o.Tenant != nil {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *NotificationDescribeContactGroupResponse) SetTenant(v string) {
	o.Tenant = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *NotificationDescribeContactGroupResponse) GetUser() string {
	if o == nil || o.User == nil {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationDescribeContactGroupResponse) GetUserOk() (*string, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *NotificationDescribeContactGroupResponse) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *NotificationDescribeContactGroupResponse) SetUser(v string) {
	o.User = &v
}

func (o NotificationDescribeContactGroupResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Contacts != nil {
		toSerialize["contacts"] = o.Contacts
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Tenant != nil {
		toSerialize["tenant"] = o.Tenant
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationDescribeContactGroupResponse struct {
	value *NotificationDescribeContactGroupResponse
	isSet bool
}

func (v NullableNotificationDescribeContactGroupResponse) Get() *NotificationDescribeContactGroupResponse {
	return v.value
}

func (v *NullableNotificationDescribeContactGroupResponse) Set(val *NotificationDescribeContactGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationDescribeContactGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationDescribeContactGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationDescribeContactGroupResponse(val *NotificationDescribeContactGroupResponse) *NullableNotificationDescribeContactGroupResponse {
	return &NullableNotificationDescribeContactGroupResponse{value: val, isSet: true}
}

func (v NullableNotificationDescribeContactGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationDescribeContactGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


