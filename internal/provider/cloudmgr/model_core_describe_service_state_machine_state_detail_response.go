/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreDescribeServiceStateMachineStateDetailResponse struct for CoreDescribeServiceStateMachineStateDetailResponse
type CoreDescribeServiceStateMachineStateDetailResponse struct {
	CurrentState *string `json:"current_state,omitempty"`
	ElementStatus *map[string]interface{} `json:"element_status,omitempty"`
	Elements *[]CoreDescribeComponentStateMachineStateDetailResponse `json:"elements,omitempty"`
	Event *string `json:"event,omitempty"`
	MachineTime *string `json:"machine_time,omitempty"`
	Service *string `json:"service,omitempty"`
	SourceState *string `json:"source_state,omitempty"`
	Transition *string `json:"transition,omitempty"`
}

// NewCoreDescribeServiceStateMachineStateDetailResponse instantiates a new CoreDescribeServiceStateMachineStateDetailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreDescribeServiceStateMachineStateDetailResponse() *CoreDescribeServiceStateMachineStateDetailResponse {
	this := CoreDescribeServiceStateMachineStateDetailResponse{}
	return &this
}

// NewCoreDescribeServiceStateMachineStateDetailResponseWithDefaults instantiates a new CoreDescribeServiceStateMachineStateDetailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreDescribeServiceStateMachineStateDetailResponseWithDefaults() *CoreDescribeServiceStateMachineStateDetailResponse {
	this := CoreDescribeServiceStateMachineStateDetailResponse{}
	return &this
}

// GetCurrentState returns the CurrentState field value if set, zero value otherwise.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetCurrentState() string {
	if o == nil || o.CurrentState == nil {
		var ret string
		return ret
	}
	return *o.CurrentState
}

// GetCurrentStateOk returns a tuple with the CurrentState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetCurrentStateOk() (*string, bool) {
	if o == nil || o.CurrentState == nil {
		return nil, false
	}
	return o.CurrentState, true
}

// HasCurrentState returns a boolean if a field has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) HasCurrentState() bool {
	if o != nil && o.CurrentState != nil {
		return true
	}

	return false
}

// SetCurrentState gets a reference to the given string and assigns it to the CurrentState field.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) SetCurrentState(v string) {
	o.CurrentState = &v
}

// GetElementStatus returns the ElementStatus field value if set, zero value otherwise.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetElementStatus() map[string]interface{} {
	if o == nil || o.ElementStatus == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.ElementStatus
}

// GetElementStatusOk returns a tuple with the ElementStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetElementStatusOk() (*map[string]interface{}, bool) {
	if o == nil || o.ElementStatus == nil {
		return nil, false
	}
	return o.ElementStatus, true
}

// HasElementStatus returns a boolean if a field has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) HasElementStatus() bool {
	if o != nil && o.ElementStatus != nil {
		return true
	}

	return false
}

// SetElementStatus gets a reference to the given map[string]interface{} and assigns it to the ElementStatus field.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) SetElementStatus(v map[string]interface{}) {
	o.ElementStatus = &v
}

// GetElements returns the Elements field value if set, zero value otherwise.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetElements() []CoreDescribeComponentStateMachineStateDetailResponse {
	if o == nil || o.Elements == nil {
		var ret []CoreDescribeComponentStateMachineStateDetailResponse
		return ret
	}
	return *o.Elements
}

// GetElementsOk returns a tuple with the Elements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetElementsOk() (*[]CoreDescribeComponentStateMachineStateDetailResponse, bool) {
	if o == nil || o.Elements == nil {
		return nil, false
	}
	return o.Elements, true
}

// HasElements returns a boolean if a field has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) HasElements() bool {
	if o != nil && o.Elements != nil {
		return true
	}

	return false
}

// SetElements gets a reference to the given []CoreDescribeComponentStateMachineStateDetailResponse and assigns it to the Elements field.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) SetElements(v []CoreDescribeComponentStateMachineStateDetailResponse) {
	o.Elements = &v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetEvent() string {
	if o == nil || o.Event == nil {
		var ret string
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetEventOk() (*string, bool) {
	if o == nil || o.Event == nil {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) HasEvent() bool {
	if o != nil && o.Event != nil {
		return true
	}

	return false
}

// SetEvent gets a reference to the given string and assigns it to the Event field.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) SetEvent(v string) {
	o.Event = &v
}

// GetMachineTime returns the MachineTime field value if set, zero value otherwise.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetMachineTime() string {
	if o == nil || o.MachineTime == nil {
		var ret string
		return ret
	}
	return *o.MachineTime
}

// GetMachineTimeOk returns a tuple with the MachineTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetMachineTimeOk() (*string, bool) {
	if o == nil || o.MachineTime == nil {
		return nil, false
	}
	return o.MachineTime, true
}

// HasMachineTime returns a boolean if a field has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) HasMachineTime() bool {
	if o != nil && o.MachineTime != nil {
		return true
	}

	return false
}

// SetMachineTime gets a reference to the given string and assigns it to the MachineTime field.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) SetMachineTime(v string) {
	o.MachineTime = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) SetService(v string) {
	o.Service = &v
}

// GetSourceState returns the SourceState field value if set, zero value otherwise.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetSourceState() string {
	if o == nil || o.SourceState == nil {
		var ret string
		return ret
	}
	return *o.SourceState
}

// GetSourceStateOk returns a tuple with the SourceState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetSourceStateOk() (*string, bool) {
	if o == nil || o.SourceState == nil {
		return nil, false
	}
	return o.SourceState, true
}

// HasSourceState returns a boolean if a field has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) HasSourceState() bool {
	if o != nil && o.SourceState != nil {
		return true
	}

	return false
}

// SetSourceState gets a reference to the given string and assigns it to the SourceState field.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) SetSourceState(v string) {
	o.SourceState = &v
}

// GetTransition returns the Transition field value if set, zero value otherwise.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetTransition() string {
	if o == nil || o.Transition == nil {
		var ret string
		return ret
	}
	return *o.Transition
}

// GetTransitionOk returns a tuple with the Transition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) GetTransitionOk() (*string, bool) {
	if o == nil || o.Transition == nil {
		return nil, false
	}
	return o.Transition, true
}

// HasTransition returns a boolean if a field has been set.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) HasTransition() bool {
	if o != nil && o.Transition != nil {
		return true
	}

	return false
}

// SetTransition gets a reference to the given string and assigns it to the Transition field.
func (o *CoreDescribeServiceStateMachineStateDetailResponse) SetTransition(v string) {
	o.Transition = &v
}

func (o CoreDescribeServiceStateMachineStateDetailResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CurrentState != nil {
		toSerialize["current_state"] = o.CurrentState
	}
	if o.ElementStatus != nil {
		toSerialize["element_status"] = o.ElementStatus
	}
	if o.Elements != nil {
		toSerialize["elements"] = o.Elements
	}
	if o.Event != nil {
		toSerialize["event"] = o.Event
	}
	if o.MachineTime != nil {
		toSerialize["machine_time"] = o.MachineTime
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.SourceState != nil {
		toSerialize["source_state"] = o.SourceState
	}
	if o.Transition != nil {
		toSerialize["transition"] = o.Transition
	}
	return json.Marshal(toSerialize)
}

type NullableCoreDescribeServiceStateMachineStateDetailResponse struct {
	value *CoreDescribeServiceStateMachineStateDetailResponse
	isSet bool
}

func (v NullableCoreDescribeServiceStateMachineStateDetailResponse) Get() *CoreDescribeServiceStateMachineStateDetailResponse {
	return v.value
}

func (v *NullableCoreDescribeServiceStateMachineStateDetailResponse) Set(val *CoreDescribeServiceStateMachineStateDetailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreDescribeServiceStateMachineStateDetailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreDescribeServiceStateMachineStateDetailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreDescribeServiceStateMachineStateDetailResponse(val *CoreDescribeServiceStateMachineStateDetailResponse) *NullableCoreDescribeServiceStateMachineStateDetailResponse {
	return &NullableCoreDescribeServiceStateMachineStateDetailResponse{value: val, isSet: true}
}

func (v NullableCoreDescribeServiceStateMachineStateDetailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreDescribeServiceStateMachineStateDetailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


