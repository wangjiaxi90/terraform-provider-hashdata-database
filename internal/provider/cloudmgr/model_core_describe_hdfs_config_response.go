/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreDescribeHdfsConfigResponse struct for CoreDescribeHdfsConfigResponse
type CoreDescribeHdfsConfigResponse struct {
	Hdfs *string `json:"hdfs,omitempty"`
	Hosts *[]CoreHost `json:"hosts,omitempty"`
	KeytabName *string `json:"keytab_name,omitempty"`
	Krb5 *CoreKrb5 `json:"krb5,omitempty"`
	Service *string `json:"service,omitempty"`
	Status *string `json:"status,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
}

// NewCoreDescribeHdfsConfigResponse instantiates a new CoreDescribeHdfsConfigResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreDescribeHdfsConfigResponse() *CoreDescribeHdfsConfigResponse {
	this := CoreDescribeHdfsConfigResponse{}
	return &this
}

// NewCoreDescribeHdfsConfigResponseWithDefaults instantiates a new CoreDescribeHdfsConfigResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreDescribeHdfsConfigResponseWithDefaults() *CoreDescribeHdfsConfigResponse {
	this := CoreDescribeHdfsConfigResponse{}
	return &this
}

// GetHdfs returns the Hdfs field value if set, zero value otherwise.
func (o *CoreDescribeHdfsConfigResponse) GetHdfs() string {
	if o == nil || o.Hdfs == nil {
		var ret string
		return ret
	}
	return *o.Hdfs
}

// GetHdfsOk returns a tuple with the Hdfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeHdfsConfigResponse) GetHdfsOk() (*string, bool) {
	if o == nil || o.Hdfs == nil {
		return nil, false
	}
	return o.Hdfs, true
}

// HasHdfs returns a boolean if a field has been set.
func (o *CoreDescribeHdfsConfigResponse) HasHdfs() bool {
	if o != nil && o.Hdfs != nil {
		return true
	}

	return false
}

// SetHdfs gets a reference to the given string and assigns it to the Hdfs field.
func (o *CoreDescribeHdfsConfigResponse) SetHdfs(v string) {
	o.Hdfs = &v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *CoreDescribeHdfsConfigResponse) GetHosts() []CoreHost {
	if o == nil || o.Hosts == nil {
		var ret []CoreHost
		return ret
	}
	return *o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeHdfsConfigResponse) GetHostsOk() (*[]CoreHost, bool) {
	if o == nil || o.Hosts == nil {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *CoreDescribeHdfsConfigResponse) HasHosts() bool {
	if o != nil && o.Hosts != nil {
		return true
	}

	return false
}

// SetHosts gets a reference to the given []CoreHost and assigns it to the Hosts field.
func (o *CoreDescribeHdfsConfigResponse) SetHosts(v []CoreHost) {
	o.Hosts = &v
}

// GetKeytabName returns the KeytabName field value if set, zero value otherwise.
func (o *CoreDescribeHdfsConfigResponse) GetKeytabName() string {
	if o == nil || o.KeytabName == nil {
		var ret string
		return ret
	}
	return *o.KeytabName
}

// GetKeytabNameOk returns a tuple with the KeytabName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeHdfsConfigResponse) GetKeytabNameOk() (*string, bool) {
	if o == nil || o.KeytabName == nil {
		return nil, false
	}
	return o.KeytabName, true
}

// HasKeytabName returns a boolean if a field has been set.
func (o *CoreDescribeHdfsConfigResponse) HasKeytabName() bool {
	if o != nil && o.KeytabName != nil {
		return true
	}

	return false
}

// SetKeytabName gets a reference to the given string and assigns it to the KeytabName field.
func (o *CoreDescribeHdfsConfigResponse) SetKeytabName(v string) {
	o.KeytabName = &v
}

// GetKrb5 returns the Krb5 field value if set, zero value otherwise.
func (o *CoreDescribeHdfsConfigResponse) GetKrb5() CoreKrb5 {
	if o == nil || o.Krb5 == nil {
		var ret CoreKrb5
		return ret
	}
	return *o.Krb5
}

// GetKrb5Ok returns a tuple with the Krb5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeHdfsConfigResponse) GetKrb5Ok() (*CoreKrb5, bool) {
	if o == nil || o.Krb5 == nil {
		return nil, false
	}
	return o.Krb5, true
}

// HasKrb5 returns a boolean if a field has been set.
func (o *CoreDescribeHdfsConfigResponse) HasKrb5() bool {
	if o != nil && o.Krb5 != nil {
		return true
	}

	return false
}

// SetKrb5 gets a reference to the given CoreKrb5 and assigns it to the Krb5 field.
func (o *CoreDescribeHdfsConfigResponse) SetKrb5(v CoreKrb5) {
	o.Krb5 = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *CoreDescribeHdfsConfigResponse) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeHdfsConfigResponse) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *CoreDescribeHdfsConfigResponse) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *CoreDescribeHdfsConfigResponse) SetService(v string) {
	o.Service = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CoreDescribeHdfsConfigResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeHdfsConfigResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CoreDescribeHdfsConfigResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CoreDescribeHdfsConfigResponse) SetStatus(v string) {
	o.Status = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *CoreDescribeHdfsConfigResponse) GetTimestamp() string {
	if o == nil || o.Timestamp == nil {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeHdfsConfigResponse) GetTimestampOk() (*string, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *CoreDescribeHdfsConfigResponse) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *CoreDescribeHdfsConfigResponse) SetTimestamp(v string) {
	o.Timestamp = &v
}

func (o CoreDescribeHdfsConfigResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hdfs != nil {
		toSerialize["hdfs"] = o.Hdfs
	}
	if o.Hosts != nil {
		toSerialize["hosts"] = o.Hosts
	}
	if o.KeytabName != nil {
		toSerialize["keytab_name"] = o.KeytabName
	}
	if o.Krb5 != nil {
		toSerialize["krb5"] = o.Krb5
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableCoreDescribeHdfsConfigResponse struct {
	value *CoreDescribeHdfsConfigResponse
	isSet bool
}

func (v NullableCoreDescribeHdfsConfigResponse) Get() *CoreDescribeHdfsConfigResponse {
	return v.value
}

func (v *NullableCoreDescribeHdfsConfigResponse) Set(val *CoreDescribeHdfsConfigResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreDescribeHdfsConfigResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreDescribeHdfsConfigResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreDescribeHdfsConfigResponse(val *CoreDescribeHdfsConfigResponse) *NullableCoreDescribeHdfsConfigResponse {
	return &NullableCoreDescribeHdfsConfigResponse{value: val, isSet: true}
}

func (v NullableCoreDescribeHdfsConfigResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreDescribeHdfsConfigResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


