/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreWorkloadTextResponse struct for CoreWorkloadTextResponse
type CoreWorkloadTextResponse struct {
	Id *string `json:"id,omitempty"`
	Texts *map[string]interface{} `json:"texts,omitempty"`
}

// NewCoreWorkloadTextResponse instantiates a new CoreWorkloadTextResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreWorkloadTextResponse() *CoreWorkloadTextResponse {
	this := CoreWorkloadTextResponse{}
	return &this
}

// NewCoreWorkloadTextResponseWithDefaults instantiates a new CoreWorkloadTextResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreWorkloadTextResponseWithDefaults() *CoreWorkloadTextResponse {
	this := CoreWorkloadTextResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreWorkloadTextResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreWorkloadTextResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreWorkloadTextResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CoreWorkloadTextResponse) SetId(v string) {
	o.Id = &v
}

// GetTexts returns the Texts field value if set, zero value otherwise.
func (o *CoreWorkloadTextResponse) GetTexts() map[string]interface{} {
	if o == nil || o.Texts == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Texts
}

// GetTextsOk returns a tuple with the Texts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreWorkloadTextResponse) GetTextsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Texts == nil {
		return nil, false
	}
	return o.Texts, true
}

// HasTexts returns a boolean if a field has been set.
func (o *CoreWorkloadTextResponse) HasTexts() bool {
	if o != nil && o.Texts != nil {
		return true
	}

	return false
}

// SetTexts gets a reference to the given map[string]interface{} and assigns it to the Texts field.
func (o *CoreWorkloadTextResponse) SetTexts(v map[string]interface{}) {
	o.Texts = &v
}

func (o CoreWorkloadTextResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Texts != nil {
		toSerialize["texts"] = o.Texts
	}
	return json.Marshal(toSerialize)
}

type NullableCoreWorkloadTextResponse struct {
	value *CoreWorkloadTextResponse
	isSet bool
}

func (v NullableCoreWorkloadTextResponse) Get() *CoreWorkloadTextResponse {
	return v.value
}

func (v *NullableCoreWorkloadTextResponse) Set(val *CoreWorkloadTextResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreWorkloadTextResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreWorkloadTextResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreWorkloadTextResponse(val *CoreWorkloadTextResponse) *NullableCoreWorkloadTextResponse {
	return &NullableCoreWorkloadTextResponse{value: val, isSet: true}
}

func (v NullableCoreWorkloadTextResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreWorkloadTextResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


