openapi: 3.0.1
info:
  contact:
    email: wang@hashdata.cn
    name: Zhanwei Wang
    url: www.hashdata.cn
  description: Cloud Manager Restful API Documentation.
  license:
    name: ALL RIGHT REVERSED
    url: http://www.hashdata.cn/license
  termsOfService: Terms of service
  title: Cloud Manager API
  version: v2.0
servers:
- url: http://localhost:8000/
paths:
  /account/api/v2/clients:
    get:
      operationId: ListClient
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountListClientResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: List clients.
      tags:
      - AccountClientService
    post:
      operationId: CreateClient
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/accountCreateClientRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeClientResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create a new client.
      tags:
      - AccountClientService
      x-codegen-request-body-name: body
  /account/api/v2/clients/{id}:
    delete:
      operationId: DeleteClient
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete an existent client.
      tags:
      - AccountClientService
    get:
      operationId: DescribeClient
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeClientResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Describe the client detail with given client id.
      tags:
      - AccountClientService
  /account/api/v2/teams:
    get:
      operationId: ListTeam
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenant
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: user
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountListTeamResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all teams.
      tags:
      - AccountTeamService
    post:
      operationId: CreateTeam
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/accountCreateTeamRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeTeamResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Create a new team.
      tags:
      - AccountTeamService
      x-codegen-request-body-name: body
  /account/api/v2/teams/{teamid}:
    delete:
      operationId: DeleteTeam
      parameters:
      - in: path
        name: teamid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Delete an existent team.
      tags:
      - AccountTeamService
    get:
      operationId: DescribeTeam
      parameters:
      - in: path
        name: teamid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeTeamResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a team.
      tags:
      - AccountTeamService
    put:
      operationId: ModifyTeam
      parameters:
      - in: path
        name: teamid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/accountModifyTeamRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeTeamResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Modify an existent team.
      tags:
      - AccountTeamService
      x-codegen-request-body-name: body
  /account/api/v2/teams/{teamid}/users:
    get:
      operationId: ListUserOfTeam
      parameters:
      - in: path
        name: teamid
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountListUserOfTeamResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all users of a team.
      tags:
      - AccountTeamService
    post:
      operationId: AddUserToTeam
      parameters:
      - in: path
        name: teamid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/accountAddUserToTeamRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Add an user to the team with given role.
      tags:
      - AccountTeamService
      x-codegen-request-body-name: body
  /account/api/v2/teams/{teamid}/users/{userid}:
    delete:
      operationId: DeleteUserFromTeam
      parameters:
      - in: path
        name: teamid
        required: true
        schema:
          type: string
      - in: path
        name: userid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Remove an user from a team.
      tags:
      - AccountTeamService
  /account/api/v2/tenants:
    get:
      operationId: ListTenant
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: verified
        schema:
          format: boolean
          type: boolean
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountListTenantResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: List all tenants.
      tags:
      - AccountTenantService
    post:
      operationId: CreateTenant
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/accountCreateTenantRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeTenantResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create a new tenant.
      tags:
      - AccountTenantService
      x-codegen-request-body-name: body
  /account/api/v2/tenants/external:
    get:
      operationId: DescribeExternalTenant
      parameters:
      - in: query
        name: external_id
        schema:
          type: string
      - in: query
        name: vendor
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeTenantResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of tenant.
      tags:
      - AccountTenantService
    post:
      operationId: CreateExternalTenant
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/accountCreateExternalTenantRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeTenantResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create a new tenant from outside.
      tags:
      - AccountTenantService
      x-codegen-request-body-name: body
  /account/api/v2/tenants/{tenantid}:
    delete:
      operationId: DeleteTenant
      parameters:
      - in: path
        name: tenantid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete a tenant.
      tags:
      - AccountTenantService
    get:
      operationId: DescribeTenant
      parameters:
      - in: path
        name: tenantid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeTenantResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of tenant.
      tags:
      - AccountTenantService
  /account/api/v2/users:
    get:
      operationId: ListUser
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenant
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: username
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: surname
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: given_name
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: email
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: expired
        schema:
          format: boolean
          type: boolean
      - in: query
        name: locked
        schema:
          format: boolean
          type: boolean
      - in: query
        name: external
        schema:
          format: boolean
          type: boolean
      - in: query
        name: password_expired
        schema:
          format: boolean
          type: boolean
      - in: query
        name: enabled
        schema:
          format: boolean
          type: boolean
      - in: query
        name: external_id
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountListUserResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all users.
      tags:
      - AccountUserService
    post:
      operationId: CreateUser
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/accountCreateUserRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeUserResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Create a new user.
      tags:
      - AccountUserService
      x-codegen-request-body-name: body
  /account/api/v2/users/external:
    get:
      operationId: DescribeExternalUser
      parameters:
      - in: query
        name: external_id
        schema:
          type: string
      - in: query
        name: vendor
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeUserResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of an user.
      tags:
      - AccountUserService
    post:
      operationId: CreateExternalUser
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/accountCreateExternalUserRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeUserResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Create a new user from outside.
      tags:
      - AccountUserService
      x-codegen-request-body-name: body
  /account/api/v2/users/external/{user.id}/tenants/external/{tenant.id}:
    put:
      operationId: ComplementExternalUserAndTenant
      parameters:
      - in: path
        name: user.id
        required: true
        schema:
          type: string
      - in: path
        name: tenant.id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/accountComplementExternalUserAndTenantRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Complete external user's information and external tenant's information.
      tags:
      - AccountUserService
      x-codegen-request-body-name: body
  /account/api/v2/users/self:
    get:
      operationId: DescribeSelf
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeUserResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe current login user.
      tags:
      - AccountUserService
  /account/api/v2/users/{userid}:
    delete:
      operationId: DeleteUser
      parameters:
      - in: path
        name: userid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Delete an user.
      tags:
      - AccountUserService
    get:
      operationId: DescribeUser
      parameters:
      - in: path
        name: userid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeUserResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of an user.
      tags:
      - AccountUserService
    put:
      operationId: ModifyUser
      parameters:
      - in: path
        name: userid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/accountModifyUserRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountDescribeUserResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Modify an user.
      tags:
      - AccountUserService
      x-codegen-request-body-name: body
  /account/api/v2/users/{userid}/password:
    put:
      operationId: ChangePassword
      parameters:
      - in: path
        name: userid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/accountChangePasswordRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Modify user's password.
      tags:
      - AccountUserService
      x-codegen-request-body-name: body
  /account/api/v2/users/{userid}/teams:
    get:
      operationId: ListTeamOfUser
      parameters:
      - in: path
        name: userid
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/accountListTeamOfUserResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all teams which the user belongs to.
      tags:
      - AccountUserService
  /default/api/v2/buckets/{bucket}/contents:
    get:
      operationId: ListObject
      parameters:
      - in: path
        name: bucket
        required: true
        schema:
          type: string
      - in: query
        name: prefix
        schema:
          type: string
      - in: query
        name: marker
        schema:
          type: string
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListObjectResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List the contents of a given bucket.
      tags:
      - CoreBucketService
  /default/api/v2/buckets/{id}:
    get:
      operationId: DescribeBucket
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeBucketResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given bucket.
      tags:
      - CoreBucketService
  /default/api/v2/commons/alert:
    get:
      operationId: DescribeAlertConfig
      parameters:
      - in: query
        name: id
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeAlertConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_CLIENT
      summary: Describe alert availability of system and a service.
      tags:
      - CoreCommonService
  /default/api/v2/commons/tenant/onboarding:
    post:
      operationId: InitializeTenant
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreInitializeTenantRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreInitializeTenantResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_CLIENT
      summary: Customer onboarding
      tags:
      - CoreCommonService
      x-codegen-request-body-name: body
  /default/api/v2/instances:
    get:
      operationId: ListInstance
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: owner
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenant
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: vendor
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: zone
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListInstanceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all instance.
      tags:
      - CoreInstanceService
  /default/api/v2/instances/types:
    get:
      operationId: ListInstanceType
      parameters:
      - explode: true
        in: query
        name: zone
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: vendor
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - explode: true
        in: query
        name: arch
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListInstanceTypeResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all instance type.
      tags:
      - CoreInstanceTypeService
    post:
      operationId: CreateInstanceType
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateInstanceTypeRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeInstanceTypeResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create an instance type.
      tags:
      - CoreInstanceTypeService
      x-codegen-request-body-name: body
  /default/api/v2/instances/types/component:
    get:
      operationId: DescribeInstanceTypeByComponentType
      parameters:
      - in: query
        name: service
        schema:
          type: string
      - in: query
        name: component_type
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeInstanceTypeResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given instance type.
      tags:
      - CoreInstanceTypeService
  /default/api/v2/instances/types/groups:
    get:
      operationId: ListInstanceTypeGroup
      parameters:
      - explode: true
        in: query
        name: vendor
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - explode: true
        in: query
        name: arches
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListInstanceTypeGroupResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all instance type group.
      tags:
      - CoreInstanceTypeGroupService
    post:
      operationId: CreateInstanceTypeGroup
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateInstanceTypeGroupRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeInstanceTypeGroupResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create an instance type group.
      tags:
      - CoreInstanceTypeGroupService
      x-codegen-request-body-name: body
  /default/api/v2/instances/types/groups/{name}:
    delete:
      operationId: DeleteInstanceTypeGroup
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete an instance type group.
      tags:
      - CoreInstanceTypeGroupService
    get:
      operationId: DescribeInstanceTypeGroup
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeInstanceTypeGroupResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given instance type group.
      tags:
      - CoreInstanceTypeGroupService
    put:
      operationId: UpdateInstanceTypeGroup
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreUpdateInstanceTypeGroupRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeInstanceTypeGroupResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Update an instance type group.
      tags:
      - CoreInstanceTypeGroupService
      x-codegen-request-body-name: body
  /default/api/v2/instances/types/{name}:
    delete:
      operationId: DeleteInstanceType
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete an instance type.
      tags:
      - CoreInstanceTypeService
    get:
      operationId: DescribeInstanceType
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeInstanceTypeResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given instance type.
      tags:
      - CoreInstanceTypeService
    put:
      operationId: UpdateInstanceType
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreUpdateInstanceTypeRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeInstanceTypeResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Update an instance type.
      tags:
      - CoreInstanceTypeService
      x-codegen-request-body-name: body
  /default/api/v2/instances/{id}:
    get:
      operationId: DescribeInstance
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeInstanceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given instance.
      tags:
      - CoreInstanceService
  /default/api/v2/instances/{instance}/volumes:
    get:
      operationId: ListVolume
      parameters:
      - in: path
        name: instance
        required: true
        schema:
          type: string
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListVolumeResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all volumes of of a given instance.
      tags:
      - CoreInstanceService
  /default/api/v2/jobs:
    get:
      operationId: ListJob
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: resource
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenant
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all jobs.
      tags:
      - CoreJobService
  /default/api/v2/jobs/{id}:
    get:
      operationId: DescribeJob
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given job.
      tags:
      - CoreJobService
  /default/api/v2/jobs/{id}/logs:
    get:
      operationId: GetJobLog
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreJobLogResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Fetch job log.
      tags:
      - CoreJobService
  /default/api/v2/network/eips:
    get:
      operationId: ListElasticIp
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: region
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: vendor
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenant
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListElasticIpResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all eips.
      tags:
      - CoreElasticIpService
    post:
      operationId: CreateElasticIp
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateElasticIpRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Create a new eip.
      tags:
      - CoreElasticIpService
      x-codegen-request-body-name: body
  /default/api/v2/network/eips/{id}:
    delete:
      operationId: DeleteElasticIp
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: release an eip.
      tags:
      - CoreElasticIpService
    get:
      operationId: DescribeElasticIp
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeElasticIpResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe an eip detail.
      tags:
      - CoreElasticIpService
    put:
      operationId: ModifyElasticIpMaxBandWidth
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreModifyElasticIpMaxBandWidthRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Modify maxBandWidth for specified eip.
      tags:
      - CoreElasticIpService
      x-codegen-request-body-name: body
  /default/api/v2/network/eips/{id}/attach:
    post:
      operationId: AttachElasticIp
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreAttachElasticIpRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Attach an eip to specified instance.
      tags:
      - CoreElasticIpService
      x-codegen-request-body-name: body
  /default/api/v2/network/eips/{id}/detach:
    get:
      operationId: DetachElasticIp
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Detach an eip from instance.
      tags:
      - CoreElasticIpService
  /default/api/v2/network/nics:
    get:
      operationId: ListNetworkInterface
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenant
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: vendor
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: region
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: zone
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListNetworkInterfaceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all nics.
      tags:
      - CoreNetworkInterfaceService
    post:
      operationId: CreateNetworkInterface
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateNetworkInterfaceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Create a new nic.
      tags:
      - CoreNetworkInterfaceService
      x-codegen-request-body-name: body
  /default/api/v2/network/nics/{id}:
    delete:
      operationId: DeleteNetworkInterface
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: release a nic.
      tags:
      - CoreNetworkInterfaceService
    get:
      operationId: DescribeNetworkInterface
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeNetworkInterfaceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe an eip detail.
      tags:
      - CoreNetworkInterfaceService
  /default/api/v2/network/nics/{id}/attach:
    post:
      operationId: AttachNetworkInterface
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreAttachNetworkInterfaceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Attach a nic to specified instance.
      tags:
      - CoreNetworkInterfaceService
      x-codegen-request-body-name: body
  /default/api/v2/network/nics/{id}/detach:
    get:
      operationId: DetachNetworkInterface
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Detach a nic from instance.
      tags:
      - CoreNetworkInterfaceService
  /default/api/v2/oss/zones:
    get:
      operationId: ListOssZone
      parameters:
      - explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: vendor
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: iaas_zone
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: resource_pool
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: available_only
        schema:
          format: boolean
          type: boolean
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListOssZoneResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all object storage zone.
      tags:
      - CoreOssZoneService
    post:
      operationId: CreateOssZone
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateOssZoneRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeOssZoneResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create an object storage zone.
      tags:
      - CoreOssZoneService
      x-codegen-request-body-name: body
  /default/api/v2/oss/zones/configs:
    get:
      operationId: ListOssZoneConfig
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenant
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: zone
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListOssZoneConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: List all object storage service configuration.
      tags:
      - CoreOssZoneConfigService
    post:
      operationId: CreateOssZoneConfig
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateOssZoneConfigRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeOssZoneConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create an object storage service configuration.
      tags:
      - CoreOssZoneConfigService
      x-codegen-request-body-name: body
  /default/api/v2/oss/zones/configs/{id}:
    delete:
      operationId: DeleteOssZoneConfig
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete an object storage service configuration.
      tags:
      - CoreOssZoneConfigService
    get:
      operationId: DescribeOssZoneConfig
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeOssZoneConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Describe the detail of an object storage service configuration.
      tags:
      - CoreOssZoneConfigService
    put:
      operationId: UpdateOssZoneConfig
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreUpdateOssZoneConfigRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeOssZoneConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Update n object storage service configuration.
      tags:
      - CoreOssZoneConfigService
      x-codegen-request-body-name: body
  /default/api/v2/oss/zones/{name}:
    delete:
      operationId: DeleteOssZone
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete an object storage zone.
      tags:
      - CoreOssZoneService
    get:
      operationId: DescribeOssZone
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeOssZoneResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given object storage zone.
      tags:
      - CoreOssZoneService
  /default/api/v2/quotas:
    get:
      operationId: ListQuota
      parameters:
      - in: query
        name: tenant
        schema:
          type: string
      - explode: true
        in: query
        name: zone
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - explode: true
        in: query
        name: region
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListQuotaResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all configured quota.
      tags:
      - CoreQuotaService
    post:
      operationId: CreateQuota
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateQuotaRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Create default quota configure for given tenant.
      tags:
      - CoreQuotaService
      x-codegen-request-body-name: body
    put:
      operationId: UpdateQuota
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreUpdateQuotaRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeQuotaResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Adjust quota for given tenant.
      tags:
      - CoreQuotaService
      x-codegen-request-body-name: body
  /default/api/v2/regions:
    get:
      operationId: ListRegion
      parameters:
      - explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: vendor
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListRegionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all data center region.
      tags:
      - CoreRegionService
    post:
      operationId: CreateRegion
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateRegionRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeRegionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create a new data center region.
      tags:
      - CoreRegionService
      x-codegen-request-body-name: body
  /default/api/v2/regions/configs:
    get:
      operationId: ListRegionConfig
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenant
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: region
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListRegionConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: List all data center region configuration.
      tags:
      - CoreRegionConfigService
    post:
      operationId: CreateRegionConfig
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateRegionConfigRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeRegionConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create a data center region configuration.
      tags:
      - CoreRegionConfigService
      x-codegen-request-body-name: body
  /default/api/v2/regions/configs/{id}:
    delete:
      operationId: DeleteRegionConfig
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete a data center region configuration.
      tags:
      - CoreRegionConfigService
    get:
      operationId: DescribeRegionConfig
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeRegionConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given data center region configuration.
      tags:
      - CoreRegionConfigService
    put:
      operationId: UpdateRegionConfig
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreUpdateRegionConfigRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeRegionConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Update a data center region configuration.
      tags:
      - CoreRegionConfigService
      x-codegen-request-body-name: body
  /default/api/v2/regions/{name}:
    delete:
      operationId: DeleteRegion
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete a data center region.
      tags:
      - CoreRegionService
    get:
      operationId: DescribeRegion
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeRegionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given data center region.
      tags:
      - CoreRegionService
  /default/api/v2/resources:
    get:
      operationId: ListResourcePool
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenant
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListResourcePoolResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all resource pool.
      tags:
      - CoreResourcePoolService
    post:
      operationId: CreateResourcePool
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateResourcePoolRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeResourcePoolResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create a new data center zone.
      tags:
      - CoreResourcePoolService
      x-codegen-request-body-name: body
  /default/api/v2/resources/{id}:
    delete:
      operationId: DeleteResourcePool
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete a data center zone.
      tags:
      - CoreResourcePoolService
    get:
      operationId: DescribeResourcePool
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeResourcePoolResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given resource pool.
      tags:
      - CoreResourcePoolService
  /default/api/v2/resources/{id}/instances:
    get:
      operationId: ListPoolInstance
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - explode: true
        in: query
        name: instance
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: component
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListInstanceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all instances in resource pool.
      tags:
      - CoreResourcePoolService
    post:
      operationId: AddInstanceToResourcePool
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreAddInstanceToResourcePoolRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Add instances to a resource pool
      tags:
      - CoreResourcePoolService
      x-codegen-request-body-name: body
  /default/api/v2/resources/{id}/instances/{instance}:
    delete:
      operationId: DeleteInstanceFromResourcePool
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: instance
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Remove a instance from a resource pool.
      tags:
      - CoreResourcePoolService
  /default/api/v2/roles:
    get:
      operationId: ListRole
      parameters:
      - explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListRoleResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all roles.
      tags:
      - CoreRoleService
  /default/api/v2/roles/{name}:
    get:
      operationId: DescribeRole
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeRoleResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given role.
      tags:
      - CoreRoleService
  /default/api/v2/service/recoveries/{id}:
    get:
      operationId: ListServiceRecoveryDetail
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListServiceRecoveryDetailResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List recovery detail by recovery id.
      tags:
      - CoreService
  /default/api/v2/service/{service}/alerts:
    delete:
      operationId: DeleteAlertRuleByService
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Delete all alert rules of a service.
      tags:
      - CoreAlertService
  /default/api/v2/service/{service}/alerts/{alert}:
    delete:
      operationId: DeleteAlertRule
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      - in: path
        name: alert
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Delete an alert rule of a service.
      tags:
      - CoreAlertService
  /default/api/v2/service/{service}/hdfs/{timestamp}:
    delete:
      operationId: DeleteHdfsConfig
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      - in: path
        name: timestamp
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Delete a hdfs configuration of a service.
      tags:
      - CoreHdfsConfigService
  /default/api/v2/services:
    get:
      operationId: ListService
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenant
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: owner
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: vendor
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: zone
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: region
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: health_status
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: recovering
        schema:
          items:
            format: boolean
            type: boolean
          type: array
        style: form
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all service.
      tags:
      - CoreService
  /default/api/v2/services/catalog:
    post:
      operationId: CreateCatalog
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateCatalogRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Create a catalog service.
      tags:
      - CoreWarehouseService
      x-codegen-request-body-name: body
  /default/api/v2/services/count:
    get:
      operationId: CountService
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreCountServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: count services.
      tags:
      - CoreService
  /default/api/v2/services/enableInternalCharge:
    put:
      operationId: EnableInternalCharge
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreEnableInternalChargeRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: enable internal charge for service.
      tags:
      - CoreService
      x-codegen-request-body-name: body
  /default/api/v2/services/modifyChargeInfo/{id}:
    put:
      operationId: ModifyChargeInfo
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreModifyChargeInfoRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Modify Charge infomation.
      tags:
      - CoreService
      x-codegen-request-body-name: body
  /default/api/v2/services/monitor:
    get:
      operationId: ListMonitorService
      parameters:
      - explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListMonitorServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_CLIENT
      summary: List monitor service.
      tags:
      - CoreService
  /default/api/v2/services/projectTag:
    put:
      operationId: AddProjectTag
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreAddProjectTagRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given service.
      tags:
      - CoreService
      x-codegen-request-body-name: body
  /default/api/v2/services/startmetering/{id}:
    put:
      operationId: StartMetering
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreStartMeteringRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Service start metering.
      tags:
      - MeteringService
      x-codegen-request-body-name: body
  /default/api/v2/services/statuses:
    get:
      operationId: ListServiceStatuses
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListServiceStatusesResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all status of a service can be in.
      tags:
      - CoreService
  /default/api/v2/services/tunnel:
    get:
      operationId: DescribeTunnelInfo
      parameters:
      - in: query
        name: service
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeTunnelInfoResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_CLIENT
      summary: describe tunnel info of service.
      tags:
      - CoreService
  /default/api/v2/services/types:
    get:
      operationId: ListServiceType
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListServiceTypeResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all type of service.
      tags:
      - CoreServiceTypeService
  /default/api/v2/services/unmanaged:
    post:
      operationId: CreateUnmanagedService
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateUnmanagedServiceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create a unmanaged service.
      tags:
      - CoreUnmanagedService
      x-codegen-request-body-name: body
  /default/api/v2/services/versions:
    get:
      operationId: ListServiceVersion
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: region
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: vendor
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: lower_than
        schema:
          type: string
      - in: query
        name: upgrade_from
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - explode: true
        in: query
        name: arch
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListServiceVersionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: List all service versions.
      tags:
      - CoreServiceVersionService
    post:
      operationId: CreateServiceVersion
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateServiceVersionRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceVersionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create a new service version.
      tags:
      - CoreServiceVersionService
      x-codegen-request-body-name: body
  /default/api/v2/services/versions/{id}:
    delete:
      operationId: DeleteServiceVersion
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete a service version.
      tags:
      - CoreServiceVersionService
    get:
      operationId: DescribeServiceVersion
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceVersionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given service version.
      tags:
      - CoreServiceVersionService
    put:
      operationId: UpdateServiceVersion
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreUpdateServiceVersionRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceVersionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Update a service version.
      tags:
      - CoreServiceVersionService
      x-codegen-request-body-name: body
  /default/api/v2/services/warehouse:
    post:
      operationId: CreateWarehouse
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateWarehouseRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Create a database service.
      tags:
      - CoreWarehouseService
      x-codegen-request-body-name: body
  /default/api/v2/services/{id}:
    delete:
      operationId: DeleteService
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: force
        schema:
          format: boolean
          type: boolean
      - in: query
        name: external
        schema:
          format: boolean
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Destroy a given service.
      tags:
      - CoreService
    get:
      operationId: DescribeService
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given service.
      tags:
      - CoreService
    put:
      operationId: ModifyService
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreModifyServiceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Modify attribute of a service.
      tags:
      - CoreService
      x-codegen-request-body-name: body
  /default/api/v2/services/{id}/action:
    put:
      operationId: CheckServiceActionPermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Check if login user has permission to perform action on a given service.
      tags:
      - CoreService
  /default/api/v2/services/{id}/alert:
    get:
      operationId: ToggleAlertAvailability
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: enable_alert
        schema:
          format: boolean
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Toggle alert availability.
      tags:
      - CoreService
  /default/api/v2/services/{id}/component/health:
    get:
      operationId: ListServiceComponentHeatlhStatus
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: component_type
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListServiceComponentHealthResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List service Component health status.
      tags:
      - CoreService
  /default/api/v2/services/{id}/dependency:
    get:
      operationId: ListServiceDependent
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListServiceDependencyResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
        - ROLE_CLIENT
      summary: List all dependencies which catalog got.
      tags:
      - CoreService
  /default/api/v2/services/{id}/faults:
    get:
      operationId: ListFaults
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListFaultResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all faluts which service got.
      tags:
      - CoreService
  /default/api/v2/services/{id}/features:
    get:
      operationId: ListServiceFeature
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListServiceFeatureResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all features which a service support.
      tags:
      - CoreService
  /default/api/v2/services/{id}/guestagent/upgrade:
    get:
      operationId: UpgradeGuestAgent
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: upgrade all guest agent by a given service.
      tags:
      - CoreService
  /default/api/v2/services/{id}/protect:
    get:
      operationId: ProtectService
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: protect
        schema:
          format: boolean
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Protect the given service from delete or stop.
      tags:
      - CoreService
  /default/api/v2/services/{id}/recoveries:
    get:
      operationId: ListRecoveries
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListRecoveryResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all recoveries which service got.
      tags:
      - CoreService
  /default/api/v2/services/{id}/recovery:
    get:
      operationId: ToggleAutoRecoveryAvailability
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: disable_auto_recovery
        schema:
          format: boolean
          type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Toggle auto recovery availability.
      tags:
      - CoreService
  /default/api/v2/services/{id}/reference:
    get:
      operationId: ListServiceReference
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListServiceDependencyResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all references which computing service got.
      tags:
      - CoreService
  /default/api/v2/services/{id}/restart:
    post:
      operationId: RestartService
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreRestartServiceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Restart a service.
      tags:
      - CoreService
      x-codegen-request-body-name: body
  /default/api/v2/services/{id}/scalein:
    post:
      operationId: ScaleInService
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreScaleInServiceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Scale in a given service.
      tags:
      - CoreService
      x-codegen-request-body-name: body
  /default/api/v2/services/{id}/scaleout:
    post:
      operationId: ScaleOutService
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreScaleOutServiceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Scale out a given service.
      tags:
      - CoreService
      x-codegen-request-body-name: body
  /default/api/v2/services/{id}/start:
    post:
      operationId: StartService
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreStartServiceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Start a service.
      tags:
      - CoreService
      x-codegen-request-body-name: body
  /default/api/v2/services/{id}/statemachine/info:
    get:
      operationId: ExportServiceStateMachineDetailInfo
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreExportServiceStateMachineInfoReponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List service and component state machine detail info.
      tags:
      - CoreService
  /default/api/v2/services/{id}/statemachine/reset:
    get:
      operationId: ResetStateMachine
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: reset service state machine by a given service.
      tags:
      - CoreService
  /default/api/v2/services/{id}/stop:
    post:
      operationId: StopService
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreStopServiceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Stop a service.
      tags:
      - CoreService
      x-codegen-request-body-name: body
  /default/api/v2/services/{id}/unhandledfaults:
    get:
      operationId: ListUnhandledFaults
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListUnhandledFaultResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all Unhandled faults which service got.
      tags:
      - CoreService
  /default/api/v2/services/{id}/volumes/resize:
    post:
      operationId: ResizeVolumes
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreResizeServiceVolumesRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Adjust volume size of a given service.
      tags:
      - CoreService
      x-codegen-request-body-name: body
  /default/api/v2/services/{service}/alerts:
    get:
      operationId: ListAlertRule
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/vmalertListAlertRuleResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List the alerts of a given service.
      tags:
      - CoreAlertService
    post:
      operationId: CreateAlertRule
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/vmalertCreateAlertRuleRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/vmalertDescribeAlertRuleResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Create a service alert rule.
      tags:
      - CoreAlertService
      x-codegen-request-body-name: body
  /default/api/v2/services/{service}/alerts/{alert}:
    get:
      operationId: DescribeAlertRule
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      - in: path
        name: alert
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/vmalertDescribeAlertRuleResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given alert rule.
      tags:
      - CoreAlertService
  /default/api/v2/services/{service}/buckets:
    get:
      operationId: ListBucket
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListServiceBucketResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all bucket the given service has.
      tags:
      - CoreService
  /default/api/v2/services/{service}/hdfs:
    get:
      operationId: ListHdfsConfig
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListHdfsConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List the hdfs configuration of a given service.
      tags:
      - CoreHdfsConfigService
    post:
      operationId: CreateHdfsConfig
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateHdfsConfigRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Create a service hdfs configuration.
      tags:
      - CoreHdfsConfigService
      x-codegen-request-body-name: body
  /default/api/v2/services/{service}/hdfs/{timestamp}:
    get:
      operationId: DescribeHdfsConfig
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      - in: path
        name: timestamp
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeHdfsConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given hdfs configuration.
      tags:
      - CoreHdfsConfigService
  /default/api/v2/services/{service}/hdfs/{timestamp}/activation:
    put:
      operationId: ActivateHdfsConfig
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      - in: path
        name: timestamp
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Activate a specified hdfs configuration of a service.
      tags:
      - CoreHdfsConfigService
  /default/api/v2/services/{service}/instances:
    get:
      operationId: ListServiceInstance
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      - explode: true
        in: query
        name: component
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListInstanceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all service instances.
      tags:
      - CoreService
  /default/api/v2/services/{service}/metadata:
    get:
      operationId: ListMetadata
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListServiceMetadataResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List service metadata.
      tags:
      - CoreService
  /default/api/v2/services/{service}/teams:
    get:
      operationId: ListTeamOfService
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListTeamOfServiceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all teams the given service belongs to.
      tags:
      - CoreService
  /default/api/v2/services/{service}/upgrade:
    post:
      operationId: UpgradeService
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreUpgradeServiceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Upgrade service version.
      tags:
      - CoreService
      x-codegen-request-body-name: body
  /default/api/v2/services/{service}/upgrade/inplace:
    post:
      operationId: InplaceUpgradeService
      parameters:
      - in: path
        name: service
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreInplaceUpgradeServiceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonDescribeJobResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Inplace upgrade service version.
      tags:
      - CoreService
      x-codegen-request-body-name: body
  /default/api/v2/system/maintenance/configure/thread-pool:
    post:
      operationId: ConfigThreadPool
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreConfigThreadPoolRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Configure thread pool.
      tags:
      - MaintenanceService
      x-codegen-request-body-name: body
  /default/api/v2/teams/{id}/services:
    get:
      operationId: ListServiceOfTeam
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListServiceOfTeamResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all service of a team.
      tags:
      - CoreTeamService
  /default/api/v2/teams/{team}/services:
    post:
      operationId: AddServiceToTeam
      parameters:
      - in: path
        name: team
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreAddServiceToTeamRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Add a service to a team
      tags:
      - CoreTeamService
      x-codegen-request-body-name: body
  /default/api/v2/teams/{team}/services/{service}:
    delete:
      operationId: DeleteServiceFromTeam
      parameters:
      - in: path
        name: team
        required: true
        schema:
          type: string
      - in: path
        name: service
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Remove service from a team.
      tags:
      - CoreTeamService
  /default/api/v2/vendors:
    get:
      operationId: ListVendor
      parameters:
      - in: query
        name: locale
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeVendorListResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
      summary: List all cloud vendors.
      tags:
      - CoreVendorService
  /default/api/v2/volumes/types:
    get:
      operationId: ListVolumeType
      parameters:
      - explode: true
        in: query
        name: zone
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: vendor
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: instance_type
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListVolumeTypeResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: List all volume type.
      tags:
      - CoreVolumeTypeService
    post:
      operationId: CreateVolumeType
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateVolumeTypeRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeVolumeTypeResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create a new volume type.
      tags:
      - CoreVolumeTypeService
      x-codegen-request-body-name: body
  /default/api/v2/volumes/types/{name}:
    delete:
      operationId: DeleteVolumeType
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete a volume type.
      tags:
      - CoreVolumeTypeService
    get:
      operationId: DescribeVolumeType
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeVolumeTypeResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given volume type.
      tags:
      - CoreVolumeTypeService
  /default/api/v2/vpcs:
    get:
      operationId: ListVpc
      parameters:
      - in: query
        name: zone
        schema:
          type: string
      - in: query
        name: access_key
        schema:
          type: string
      - in: query
        name: access_key_secret
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListVpcResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all available vpc.
      tags:
      - CoreVpcService
  /default/api/v2/vpcs/{vpc}:
    get:
      operationId: ListVpcSubnets
      parameters:
      - in: path
        name: vpc
        required: true
        schema:
          type: string
      - in: query
        name: zone
        schema:
          type: string
      - in: query
        name: access_key
        schema:
          type: string
      - in: query
        name: access_key_secret
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListVpcSubnetsResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List all available subnet in a given vpc.
      tags:
      - CoreVpcService
  /default/api/v2/zones:
    get:
      operationId: ListZone
      parameters:
      - explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: vendor
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: region
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: available_only
        schema:
          format: boolean
          type: boolean
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListZoneResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: List all data center zone.
      tags:
      - CoreZoneService
    post:
      operationId: CreateZone
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateZoneRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeZoneResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create a new data center zone.
      tags:
      - CoreZoneService
      x-codegen-request-body-name: body
  /default/api/v2/zones/configs:
    get:
      operationId: ListZoneConfig
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenant
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: zone
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      - explode: true
        in: query
        name: region
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreListZoneConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: List all data center zone configuration.
      tags:
      - CoreZoneConfigService
    post:
      operationId: CreateZoneConfig
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreCreateZoneConfigRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeZoneConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Create a data center zone configuration.
      tags:
      - CoreZoneConfigService
      x-codegen-request-body-name: body
  /default/api/v2/zones/configs/{id}:
    delete:
      operationId: DeleteZoneConfig
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete a data center zone configuration.
      tags:
      - CoreZoneConfigService
    get:
      operationId: DescribeZoneConfig
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeZoneConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given data center zone configuration.
      tags:
      - CoreZoneConfigService
    put:
      operationId: UpdateZoneConfig
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/coreUpdateZoneConfigRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeZoneConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Update a data center zone configuration.
      tags:
      - CoreZoneConfigService
      x-codegen-request-body-name: body
  /default/api/v2/zones/{name}:
    delete:
      operationId: DeleteZone
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Delete a data center zone.
      tags:
      - CoreZoneService
    get:
      operationId: DescribeZone
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/coreDescribeZoneResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given data center zone.
      tags:
      - CoreZoneService
  /ksyun/ccb/api/v2/configs/creation:
    post:
      operationId: CreateServiceConfig
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ksyunCreateServiceConfigRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ksyunCreateServiceConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Save service configuration for creating, expanding or shrinking action.
      tags:
      - ServiceConfigService
      x-codegen-request-body-name: body
  /ksyun/ccb/api/v2/configs/execution:
    post:
      operationId: ExecuteServiceConfig
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ksyunExecuteServiceConfigRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ksyunExecuteServiceConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Create, expand or shrink service by configuration
      tags:
      - ServiceConfigService
      x-codegen-request-body-name: body
  /ksyun/ccb/api/v2/configs/inquiration:
    post:
      operationId: DescribeServiceConfig
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ksyunDescribeServiceConfigRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ksyunDescribeServiceConfigResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Inquire result of service configuration executing
      tags:
      - ServiceConfigService
      x-codegen-request-body-name: body
  /ksyun/ccb/api/v2/tenants:
    get:
      operationId: ListResourceUsage
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ksyunListResourceUsageResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List resource usage for all tenants.
      tags:
      - ResourceUsageService
  /ksyun/ccb/api/v2/tenants/configs:
    get:
      operationId: CalculateResourceUsage
      parameters:
      - in: query
        name: confId
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ksyunCalculateResourceUsageResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Calculate resource usage for configuring cluster
      tags:
      - ResourceUsageService
  /ksyun/ccb/api/v2/tenants/regions/{region}:
    get:
      operationId: DescribeResourceUsage
      parameters:
      - in: path
        name: region
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ksyunDescribeResourceUsageResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the resource usage of a given region.
      tags:
      - ResourceUsageService
  /notification/api/v2/groups:
    get:
      operationId: ListContactGroup
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: user
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: tenant
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/notificationListContactGroupResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: List contact group.
      tags:
      - ContactGroupService
    post:
      operationId: CreateContactGroup
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/notificationCreateContactGroupRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/notificationDescribeContactGroupResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Create a contact group.
      tags:
      - ContactGroupService
      x-codegen-request-body-name: body
  /notification/api/v2/groups/{group}/contacts:
    post:
      operationId: AddContactToGroup
      parameters:
      - in: path
        name: group
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/notificationAddContactToGroupRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/notificationDescribeContactGroupResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Add contacts to group.
      tags:
      - ContactGroupService
      x-codegen-request-body-name: body
  /notification/api/v2/groups/{group}/contacts/{contact}:
    delete:
      operationId: RemoveContactFromGroup
      parameters:
      - in: path
        name: group
        required: true
        schema:
          type: string
      - in: path
        name: contact
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/notificationDescribeContactGroupResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Remove a contact from group.
      tags:
      - ContactGroupService
  /notification/api/v2/groups/{id}:
    delete:
      operationId: DeleteContactGroup
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Delete a contact group.
      tags:
      - ContactGroupService
    get:
      operationId: DescribeContactGroup
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/notificationDescribeContactGroupResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given contact group.
      tags:
      - ContactGroupService
    put:
      operationId: TestContactGroup
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_USER
        - ROLE_SUPERVISOR
      summary: Test a given contact group.
      tags:
      - ContactGroupService
  /notification/api/v2/messages:
    get:
      operationId: ListMessage
      parameters:
      - explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: category
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: start_date
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/notificationListMessageResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: List all messages.
      tags:
      - MessageService
  /notification/api/v2/messages/{id}:
    get:
      operationId: DescribeMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/notificationDescribeMessageResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: Describe the detail of a given message.
      tags:
      - MessageService
  /ops/api/v2/alertinfo/confirm/{id}:
    put:
      operationId: ConfirmAlertInfo
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: confirm a alert info.
      tags:
      - AlertInfoService
  /ops/api/v2/alertinfo/create:
    post:
      operationId: CreateAlertInfo
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/opsCreateAlertInfoResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_CLIENT
      summary: create a alert info.
      tags:
      - AlertInfoService
  /ops/api/v2/alertinfo/process/{id}:
    put:
      operationId: ProcessAlertInfo
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: processed a alert info.
      tags:
      - AlertInfoService
  /ops/api/v2/alertinfo/{id}:
    get:
      operationId: DescribeAlertInfo
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/opsDescribeAlertInfoResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: get a alert info.
      tags:
      - AlertInfoService
  /ops/api/v2/alertinfos:
    get:
      operationId: ListAlertInfo
      parameters:
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: value
        schema:
          type: string
      - in: query
        name: processor
        schema:
          type: string
      - explode: true
        in: query
        name: alert_status
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: alert_type
        schema:
          type: string
      - in: query
        name: start_at
        schema:
          type: string
      - in: query
        name: end_at
        schema:
          type: string
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/opsListAlertInfoResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: list alert infos.
      tags:
      - AlertInfoService
  /ops/api/v2/alerts:
    get:
      operationId: ListAlert
      parameters:
      - in: query
        name: active
        schema:
          format: boolean
          type: boolean
      - in: query
        name: silenced
        schema:
          format: boolean
          type: boolean
      - in: query
        name: inhibited
        schema:
          format: boolean
          type: boolean
      - in: query
        name: unprocessed
        schema:
          format: boolean
          type: boolean
      - in: query
        name: receiver
        schema:
          type: string
      - explode: true
        in: query
        name: filter
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/opsListAlertResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: list alerts of alertmanagement.
      tags:
      - AlertmanagerService
  /ops/api/v2/silence:
    delete:
      operationId: DeleteSilence
      parameters:
      - in: query
        name: id
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/opsDeleteSilenceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: delete silence of alertmanagement.
      tags:
      - AlertmanagerService
    post:
      operationId: CreateSilence
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/opsCreateSilenceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/opsCreateSilenceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: create silence of alertmanagement.
      tags:
      - AlertmanagerService
      x-codegen-request-body-name: body
    put:
      operationId: ModifySilence
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/opsModifySilenceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/opsModifySilenceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: create silence of alertmanagement.
      tags:
      - AlertmanagerService
      x-codegen-request-body-name: body
  /ops/api/v2/silence/{id}:
    get:
      operationId: DescribeSilence
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/opsDescribeSilenceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: decribe silence of alertmanagement.
      tags:
      - AlertmanagerService
  /ops/api/v2/silences:
    get:
      operationId: ListSilence
      parameters:
      - explode: true
        in: query
        name: filter
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/opsListSilenceResponse'
          description: A successful response.
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Unauthorized
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Forbidden
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/commonActionResponse'
          description: Not Found
      security:
      - oauth2:
        - ROLE_SUPERVISOR
      summary: list silence of alertmanagement.
      tags:
      - AlertmanagerService
components:
  schemas:
    accountAddUserToTeamRequest:
      properties:
        maintainer:
          format: boolean
          type: boolean
        userid:
          type: string
      type: object
    accountChangePasswordRequest:
      properties:
        new_password:
          type: string
        old_password:
          type: string
      type: object
    accountComplementExternalUserAndTenantRequest:
      properties:
        tenant:
          $ref: '#/components/schemas/accountModifyExternalTenantRequest'
        user:
          $ref: '#/components/schemas/accountModifyExternalUserRequest'
      type: object
    accountCreateClientRequest:
      properties:
        access_token_validity_seconds:
          format: int32
          type: integer
        authorized_grant_types:
          items:
            type: string
          type: array
        auto_approve_scopes:
          items:
            type: string
          type: array
        client_secret:
          type: string
        refresh_token_validity_seconds:
          format: int32
          type: integer
        registered_redirect_uris:
          items:
            type: string
          type: array
        resource_ids:
          items:
            type: string
          type: array
        scope:
          items:
            type: string
          type: array
      type: object
    accountCreateExternalTenantRequest:
      properties:
        external_id:
          type: string
        vendor:
          type: string
      type: object
    accountCreateExternalUserRequest:
      properties:
        external_id:
          type: string
        tenant:
          type: string
        vendor:
          type: string
      type: object
    accountCreateTeamRequest:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    accountCreateTenantRequest:
      properties:
        display_name:
          type: string
        domain:
          type: string
        name:
          type: string
      type: object
    accountCreateUserRequest:
      properties:
        email:
          type: string
        enabled:
          format: boolean
          type: boolean
        expired_at:
          type: string
        given_name:
          type: string
        is_admin:
          format: boolean
          type: boolean
        is_supervisor:
          format: boolean
          type: boolean
        locked:
          format: boolean
          type: boolean
        password:
          type: string
        password_expired_at:
          type: string
        surname:
          type: string
        tenant:
          type: string
        username:
          type: string
      type: object
    accountDescribeClientResponse:
      example:
        additional_information: additional_information
        registered_redirect_uris: registered_redirect_uris
        scope: scope
        destroyed_at: destroyed_at
        created_at: created_at
        authorized_grant_types: authorized_grant_types
        auto_approve_scopes: auto_approve_scopes
        id: id
        resource_ids: resource_ids
        access_token_validity_seconds: 0
        refresh_token_validity_seconds: 6
      properties:
        access_token_validity_seconds:
          format: int32
          type: integer
        additional_information:
          type: string
        authorized_grant_types:
          type: string
        auto_approve_scopes:
          type: string
        created_at:
          type: string
        destroyed_at:
          type: string
        id:
          type: string
        refresh_token_validity_seconds:
          format: int32
          type: integer
        registered_redirect_uris:
          type: string
        resource_ids:
          type: string
        scope:
          type: string
      type: object
    accountDescribeTeamOfUserResponse:
      example:
        is_maintainer: true
        destroyed_at: destroyed_at
        name: name
        created_at: created_at
        id: id
        tenant: tenant
      properties:
        created_at:
          type: string
        destroyed_at:
          type: string
        id:
          type: string
        is_maintainer:
          format: boolean
          type: boolean
        name:
          type: string
        tenant:
          type: string
      type: object
    accountDescribeTeamResponse:
      example:
        destroyed_at: destroyed_at
        name: name
        created_at: created_at
        description: description
        id: id
        tenant: tenant
      properties:
        created_at:
          type: string
        description:
          type: string
        destroyed_at:
          type: string
        id:
          type: string
        name:
          type: string
        tenant:
          type: string
      type: object
    accountDescribeTenantResponse:
      example:
        external: true
        domain: domain
        destroyed_at: destroyed_at
        name: name
        verified: true
        created_at: created_at
        external_id: external_id
        id: id
        display_name: display_name
      properties:
        created_at:
          type: string
        destroyed_at:
          type: string
        display_name:
          type: string
        domain:
          type: string
        external:
          format: boolean
          type: boolean
        external_id:
          type: string
        id:
          type: string
        name:
          type: string
        verified:
          format: boolean
          type: boolean
      type: object
    accountDescribeUserOfTeamResponse:
      example:
        userid: userid
        maintainer: true
      properties:
        maintainer:
          format: boolean
          type: boolean
        userid:
          type: string
      type: object
    accountDescribeUserResponse:
      example:
        password_expired_at: password_expired_at
        destroyed_at: destroyed_at
        admin: true
        created_at: created_at
        external_id: external_id
        expired_at: expired_at
        given_name: given_name
        enabled: true
        platform: platform
        external: true
        surname: surname
        id: id
        locked: true
        email: email
        supervisor: true
        tenant: tenant
        username: username
      properties:
        admin:
          format: boolean
          type: boolean
        created_at:
          type: string
        destroyed_at:
          type: string
        email:
          type: string
        enabled:
          format: boolean
          type: boolean
        expired_at:
          type: string
        external:
          format: boolean
          type: boolean
        external_id:
          type: string
        given_name:
          type: string
        id:
          type: string
        locked:
          format: boolean
          type: boolean
        password_expired_at:
          type: string
        platform:
          type: string
        supervisor:
          format: boolean
          type: boolean
        surname:
          type: string
        tenant:
          type: string
        username:
          type: string
      type: object
    accountListClientResponse:
      example:
        total: 5
        count: 1
        content:
        - additional_information: additional_information
          registered_redirect_uris: registered_redirect_uris
          scope: scope
          destroyed_at: destroyed_at
          created_at: created_at
          authorized_grant_types: authorized_grant_types
          auto_approve_scopes: auto_approve_scopes
          id: id
          resource_ids: resource_ids
          access_token_validity_seconds: 0
          refresh_token_validity_seconds: 6
        - additional_information: additional_information
          registered_redirect_uris: registered_redirect_uris
          scope: scope
          destroyed_at: destroyed_at
          created_at: created_at
          authorized_grant_types: authorized_grant_types
          auto_approve_scopes: auto_approve_scopes
          id: id
          resource_ids: resource_ids
          access_token_validity_seconds: 0
          refresh_token_validity_seconds: 6
      properties:
        content:
          items:
            $ref: '#/components/schemas/accountDescribeClientResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    accountListTeamOfUserResponse:
      example:
        total: 6
        count: 0
        content:
        - is_maintainer: true
          destroyed_at: destroyed_at
          name: name
          created_at: created_at
          id: id
          tenant: tenant
        - is_maintainer: true
          destroyed_at: destroyed_at
          name: name
          created_at: created_at
          id: id
          tenant: tenant
      properties:
        content:
          items:
            $ref: '#/components/schemas/accountDescribeTeamOfUserResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    accountListTeamResponse:
      example:
        total: 6
        count: 0
        content:
        - destroyed_at: destroyed_at
          name: name
          created_at: created_at
          description: description
          id: id
          tenant: tenant
        - destroyed_at: destroyed_at
          name: name
          created_at: created_at
          description: description
          id: id
          tenant: tenant
      properties:
        content:
          items:
            $ref: '#/components/schemas/accountDescribeTeamResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    accountListTenantResponse:
      example:
        total: 6
        count: 0
        content:
        - external: true
          domain: domain
          destroyed_at: destroyed_at
          name: name
          verified: true
          created_at: created_at
          external_id: external_id
          id: id
          display_name: display_name
        - external: true
          domain: domain
          destroyed_at: destroyed_at
          name: name
          verified: true
          created_at: created_at
          external_id: external_id
          id: id
          display_name: display_name
      properties:
        content:
          items:
            $ref: '#/components/schemas/accountDescribeTenantResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    accountListUserOfTeamResponse:
      example:
        total: 6
        count: 0
        content:
        - userid: userid
          maintainer: true
        - userid: userid
          maintainer: true
      properties:
        content:
          items:
            $ref: '#/components/schemas/accountDescribeUserOfTeamResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    accountListUserResponse:
      example:
        total: 6
        count: 0
        content:
        - password_expired_at: password_expired_at
          destroyed_at: destroyed_at
          admin: true
          created_at: created_at
          external_id: external_id
          expired_at: expired_at
          given_name: given_name
          enabled: true
          platform: platform
          external: true
          surname: surname
          id: id
          locked: true
          email: email
          supervisor: true
          tenant: tenant
          username: username
        - password_expired_at: password_expired_at
          destroyed_at: destroyed_at
          admin: true
          created_at: created_at
          external_id: external_id
          expired_at: expired_at
          given_name: given_name
          enabled: true
          platform: platform
          external: true
          surname: surname
          id: id
          locked: true
          email: email
          supervisor: true
          tenant: tenant
          username: username
      properties:
        content:
          items:
            $ref: '#/components/schemas/accountDescribeUserResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    accountModifyExternalTenantRequest:
      properties:
        display_name:
          type: string
        domain:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    accountModifyExternalUserRequest:
      properties:
        email:
          type: string
        given_name:
          type: string
        id:
          type: string
        password:
          type: string
        surname:
          type: string
        username:
          type: string
      type: object
    accountModifyTeamRequest:
      properties:
        name:
          type: string
      type: object
    accountModifyUserRequest:
      properties:
        email:
          type: string
        enabled:
          format: boolean
          type: boolean
        expired_at:
          type: string
        given_name:
          type: string
        is_admin:
          format: boolean
          type: boolean
        is_supervisor:
          format: boolean
          type: boolean
        locked:
          format: boolean
          type: boolean
        password_expired_at:
          type: string
        surname:
          type: string
      type: object
    cloudmgrcommonIaasResource:
      properties:
        az:
          type: string
        clusterName:
          type: string
        clusterType:
          type: string
        ip:
          type: string
        machineTypeCode:
          type: string
        machineTypeName:
          type: string
        productTypeCode:
          type: string
        projectList:
          items:
            $ref: '#/components/schemas/commonProjectInfo'
          type: array
        regionCode:
          type: string
        regionName:
          type: string
        resInfos:
          items:
            $ref: '#/components/schemas/commonResourceInfo'
          type: array
        subAccountId:
          type: string
        userId:
          type: string
      type: object
    cloudmgrcoreIaasResource:
      properties:
        count:
          format: int32
          type: integer
        elastic_nic:
          $ref: '#/components/schemas/coreCreateElasticNicRequest'
        image:
          type: string
        instance_type:
          type: string
        internet_access:
          $ref: '#/components/schemas/coreCreateInternetAccessRequest'
        volume_size:
          format: int32
          type: integer
        volume_type:
          type: string
        zone:
          type: string
      type: object
    commonActionResponse:
      example:
        error_message: error_message
        error_code: 0
      properties:
        error_code:
          format: int32
          type: integer
        error_message:
          type: string
      type: object
    commonDescribeJobResponse:
      example:
        error_message: error_message
        updated_at: updated_at
        recovery_id: recovery_id
        action: action
        created_at: created_at
        extras: extras
        error_code: 0
        id: id
        resource_ids:
        - resource_ids
        - resource_ids
        user: user
        status: status
      properties:
        action:
          type: string
        created_at:
          type: string
        error_code:
          format: int32
          type: integer
        error_message:
          type: string
        extras:
          type: string
        id:
          type: string
        recovery_id:
          type: string
        resource_ids:
          items:
            type: string
          type: array
        status:
          type: string
        updated_at:
          type: string
        user:
          type: string
      type: object
    commonIaasProperties:
      example:
        propValue: 0
        propCode: propCode
      properties:
        propCode:
          type: string
        propValue:
          format: int32
          type: integer
      type: object
    commonIaasResource:
      example:
        projectList:
        - projectName: projectName
          projectId: projectId
        - projectName: projectName
          projectId: projectId
        clusterType: clusterType
        machineTypeName: machineTypeName
        machineTypeCode: machineTypeCode
        ip: ip
        regionName: regionName
        userId: userId
        regionCode: regionCode
        subAccountId: subAccountId
        resInfos:
        - totalValue: 6
          usedValue: 1
          allocatedValue: 0
          resCode: resCode
        - totalValue: 6
          usedValue: 1
          allocatedValue: 0
          resCode: resCode
        clusterName: clusterName
        az: az
        productTypeCode: productTypeCode
      properties:
        az:
          type: string
        clusterName:
          type: string
        clusterType:
          type: string
        ip:
          type: string
        machineTypeCode:
          type: string
        machineTypeName:
          type: string
        productTypeCode:
          type: string
        projectList:
          items:
            $ref: '#/components/schemas/commonProjectInfo'
          type: array
        regionCode:
          type: string
        regionName:
          type: string
        resInfos:
          items:
            $ref: '#/components/schemas/commonResourceInfo'
          type: array
        subAccountId:
          type: string
        userId:
          type: string
      type: object
    commonPriceConfig:
      example:
        props:
        - propValue: 0
          propCode: propCode
        - propValue: 0
          propCode: propCode
      properties:
        props:
          items:
            $ref: '#/components/schemas/commonIaasProperties'
          type: array
      type: object
    commonProjectInfo:
      example:
        projectName: projectName
        projectId: projectId
      properties:
        projectId:
          type: string
        projectName:
          type: string
      type: object
    commonResourceConfig:
      example:
        priceConf:
          props:
          - propValue: 0
            propCode: propCode
          - propValue: 0
            propCode: propCode
        conf: conf
        region: region
      properties:
        conf:
          type: string
        priceConf:
          $ref: '#/components/schemas/commonPriceConfig'
        region:
          type: string
      type: object
    commonResourceInfo:
      example:
        totalValue: 6
        usedValue: 1
        allocatedValue: 0
        resCode: resCode
      properties:
        allocatedValue:
          format: int32
          type: integer
        resCode:
          type: string
        totalValue:
          format: int32
          type: integer
        usedValue:
          format: int32
          type: integer
      type: object
    coreAddInstanceToResourcePoolRequest:
      properties:
        hosts:
          items:
            type: string
          type: array
        instances:
          items:
            type: string
          type: array
        root_password:
          type: string
      type: object
    coreAddProjectTagRequest:
      properties:
        id:
          type: string
        property:
          type: string
        property_key:
          type: string
      type: object
    coreAddServiceToTeamRequest:
      properties:
        role:
          type: string
        service:
          type: string
      type: object
    coreAttachElasticIpRequest:
      properties:
        instance_id:
          type: string
      type: object
    coreAttachNetworkInterfaceRequest:
      properties:
        instance_id:
          type: string
      type: object
    coreCalculateDiskResponse:
      properties:
        disk:
          format: int32
          type: integer
      type: object
    coreCalculateResourceUsageResponse:
      properties:
        message:
          type: string
        result:
          $ref: '#/components/schemas/commonResourceConfig'
        status:
          format: int32
          type: integer
      type: object
    coreConfigThreadPoolRequest:
      properties:
        capacity:
          format: int32
          type: integer
        core_pool_size:
          format: int32
          type: integer
        max_pool_size:
          format: int32
          type: integer
        pool_type:
          type: string
      type: object
    coreCountServiceResponse:
      example:
        health: health
        sum: sum
        unhealth: unhealth
        unhealth_recovering: unhealth_recovering
      properties:
        health:
          format: int64
          type: string
        sum:
          format: int64
          type: string
        unhealth:
          format: int64
          type: string
        unhealth_recovering:
          format: int64
          type: string
      type: object
    coreCreateCatalogRequest:
      properties:
        catalog:
          $ref: '#/components/schemas/coreCreateServiceComponentRequest'
        chargeChannel:
          type: string
        chargeType:
          type: string
        description:
          type: string
        etcd:
          $ref: '#/components/schemas/coreCreateServiceComponentRequest'
        expiredAt:
          type: string
        extras:
          $ref: '#/components/schemas/coreCreateServiceIaasExtraRequest'
        fdb:
          $ref: '#/components/schemas/coreCreateServiceComponentRequest'
        metadata:
          properties: {}
          type: object
        monitor:
          $ref: '#/components/schemas/coreCreateServiceComponentRequest'
        name:
          type: string
        oss:
          $ref: '#/components/schemas/coreCreateServiceOssZoneRequest'
      type: object
    coreCreateElasticIpRequest:
      properties:
        by_bandwidth:
          format: boolean
          type: boolean
        count:
          format: int32
          type: integer
        max_band_width:
          format: int32
          type: integer
        name:
          type: string
        region:
          type: string
        tenant:
          type: string
        vendor:
          type: string
      type: object
    coreCreateElasticNicRequest:
      properties:
        nic_id:
          items:
            type: string
          type: array
      type: object
    coreCreateHdfsConfigRequest:
      properties:
        hdfs:
          type: string
        hosts:
          items:
            $ref: '#/components/schemas/coreHost'
          type: array
        keytab_base64_content:
          type: string
        krb5:
          $ref: '#/components/schemas/coreKrb5'
        reference_timestamp:
          type: string
        status:
          type: string
      type: object
    coreCreateInstanceTypeGroupRequest:
      properties:
        arches:
          items:
            type: string
          type: array
        display_name:
          type: string
        name:
          type: string
        vendor:
          type: string
      type: object
    coreCreateInstanceTypeRequest:
      properties:
        arch:
          type: string
        compatible_volume_type:
          items:
            type: string
          type: array
        cpu:
          format: int32
          type: integer
        description:
          type: string
        display_name:
          type: string
        instance_class:
          type: string
        instance_type:
          type: string
        instance_type_group:
          type: string
        memory:
          format: int32
          type: integer
        name:
          type: string
        vendor:
          type: string
        zone:
          items:
            type: string
          type: array
      type: object
    coreCreateInternetAccessRequest:
      properties:
        eip_id:
          items:
            type: string
          type: array
        max_bandwidth:
          format: int32
          type: integer
        pay_by_bandwidth:
          format: boolean
          type: boolean
      type: object
    coreCreateNetworkInterfaceRequest:
      properties:
        count:
          format: int32
          type: integer
        name:
          type: string
        region:
          type: string
        subnet:
          type: string
        tenant:
          type: string
        vendor:
          type: string
        vpc:
          type: string
        zone:
          type: string
      type: object
    coreCreateOssZoneConfigRequest:
      properties:
        access_key_id:
          type: string
        access_key_secret:
          type: string
        app_id:
          type: string
        tenant:
          type: string
        zone:
          type: string
      type: object
    coreCreateOssZoneRequest:
      properties:
        description:
          type: string
        display_name:
          type: string
        endpoint:
          type: string
        internal_region:
          type: string
        name:
          type: string
        public_region:
          type: string
        vendor:
          type: string
      type: object
    coreCreateQuotaRequest:
      properties:
        tenant:
          type: string
        zone:
          items:
            type: string
          type: array
      type: object
    coreCreateRegionConfigRequest:
      properties:
        access_key_id:
          type: string
        access_key_secret:
          type: string
        project:
          type: string
        recycling_security_group:
          type: string
        region:
          type: string
        reverse_connect:
          format: boolean
          type: boolean
        tenant:
          type: string
        vendor_tenant:
          type: string
        vpc:
          type: string
      type: object
    coreCreateRegionRequest:
      properties:
        default_oss_zone:
          type: string
        display_name:
          type: string
        endpoint:
          type: string
        name:
          type: string
        oss_connectivity:
          items:
            type: string
          type: array
        properties:
          properties: {}
          type: object
        region:
          type: string
        vendor:
          type: string
      type: object
    coreCreateResourcePoolRequest:
      properties:
        default_oss_zone:
          type: string
        description:
          type: string
        display_name:
          type: string
        oss_connectivity:
          items:
            type: string
          type: array
        tenant:
          type: string
      type: object
    coreCreateServiceComponentRequest:
      properties:
        iaas:
          $ref: '#/components/schemas/cloudmgrcoreIaasResource'
        reserved:
          $ref: '#/components/schemas/coreReservedResource'
      type: object
    coreCreateServiceFeatureRequest:
      properties:
        local_storage:
          format: boolean
          type: boolean
        mirror_standby:
          format: boolean
          type: boolean
      type: object
    coreCreateServiceIaasExtraRequest:
      properties:
        keypair:
          type: string
        password:
          type: string
        subnet:
          type: string
        vpc:
          type: string
      type: object
    coreCreateServiceOssZoneRequest:
      properties:
        name:
          type: string
      type: object
    coreCreateServiceVersionRequest:
      properties:
        arch:
          type: string
        downgrade_to:
          items:
            type: string
          type: array
        enabled:
          format: boolean
          type: boolean
        image:
          type: string
        region:
          type: string
        type:
          type: string
        upgrade_from:
          items:
            type: string
          type: array
        version:
          type: string
      type: object
    coreCreateUnmanagedServiceRequest:
      properties:
        description:
          type: string
        extra:
          $ref: '#/components/schemas/coreCreateServiceIaasExtraRequest'
        iaas:
          $ref: '#/components/schemas/cloudmgrcoreIaasResource'
        name:
          type: string
      type: object
    coreCreateVolumeTypeRequest:
      properties:
        compatible_system_volume_type:
          items:
            type: string
          type: array
        description:
          type: string
        display_name:
          type: string
        is_instance_attached:
          format: boolean
          type: boolean
        max_size:
          format: int32
          type: integer
        min_size:
          format: int32
          type: integer
        name:
          type: string
        number_of_disk:
          format: int32
          type: integer
        portable:
          format: boolean
          type: boolean
        scalable:
          format: boolean
          type: boolean
        step_size:
          format: int32
          type: integer
        system_volume:
          format: boolean
          type: boolean
        vendor:
          type: string
        volume_type:
          type: string
        zone:
          items:
            type: string
          type: array
      type: object
    coreCreateWarehouseRequest:
      properties:
        catalog:
          type: string
        chargeChannel:
          type: string
        chargeType:
          type: string
        description:
          type: string
        expiredAt:
          type: string
        extras:
          $ref: '#/components/schemas/coreCreateServiceIaasExtraRequest'
        features:
          $ref: '#/components/schemas/coreCreateServiceFeatureRequest'
        master:
          $ref: '#/components/schemas/coreCreateServiceComponentRequest'
        metadata:
          properties: {}
          type: object
        name:
          type: string
        oss:
          $ref: '#/components/schemas/coreCreateServiceOssZoneRequest'
        segment:
          $ref: '#/components/schemas/coreCreateServiceComponentRequest'
        standby:
          $ref: '#/components/schemas/coreCreateServiceComponentRequest'
      type: object
    coreCreateZoneConfigRequest:
      properties:
        tenant:
          type: string
        vxnet:
          type: string
        zone:
          type: string
      type: object
    coreCreateZoneRequest:
      properties:
        description:
          type: string
        display_name:
          type: string
        name:
          type: string
        properties:
          properties: {}
          type: object
        region:
          type: string
        tenant:
          type: string
        vendor:
          type: string
        zone:
          type: string
      type: object
    coreDescribeAlertConfigResponse:
      example:
        enableAlert: true
        maintenance: true
      properties:
        enableAlert:
          format: boolean
          type: boolean
        maintenance:
          format: boolean
          type: boolean
      type: object
    coreDescribeBucketResponse:
      example:
        public_region: public_region
        service: service
        vendor: vendor
        destroyed_at: destroyed_at
        name: name
        created_at: created_at
        id: id
        internal_region: internal_region
        tenant: tenant
        status: status
      properties:
        created_at:
          type: string
        destroyed_at:
          type: string
        id:
          type: string
        internal_region:
          type: string
        name:
          type: string
        public_region:
          type: string
        service:
          type: string
        status:
          type: string
        tenant:
          type: string
        vendor:
          type: string
      type: object
    coreDescribeComponentHealthDetailResponse:
      example:
        component_health_status: component_health_status
        hostname: hostname
        instance: instance
        ipaddresses:
        - ipaddresses
        - ipaddresses
        instance_health_status_description: instance_health_status_description
        component_health_status_description: component_health_status_description
        instance_health_status: instance_health_status
      properties:
        component_health_status:
          type: string
        component_health_status_description:
          type: string
        hostname:
          type: string
        instance:
          type: string
        instance_health_status:
          type: string
        instance_health_status_description:
          type: string
        ipaddresses:
          items:
            type: string
          type: array
      type: object
    coreDescribeComponentStateMachineStateDetailResponse:
      example:
        element_status: '{}'
        component: component
        elements:
        - instance: instance
          machine_time: machine_time
          current_state: current_state
          stable_remaining: 0
          event: event
          source_state: source_state
          timeout_remaining: 6
          transition: transition
        - instance: instance
          machine_time: machine_time
          current_state: current_state
          stable_remaining: 0
          event: event
          source_state: source_state
          timeout_remaining: 6
          transition: transition
        machine_time: machine_time
        current_state: current_state
        event: event
        source_state: source_state
        transition: transition
      properties:
        component:
          type: string
        current_state:
          type: string
        element_status:
          properties: {}
          type: object
        elements:
          items:
            $ref: '#/components/schemas/coreDescribeNodeStateMachineStateDetailResponse'
          type: array
        event:
          type: string
        machine_time:
          type: string
        source_state:
          type: string
        transition:
          type: string
      type: object
    coreDescribeElasticIpResponse:
      example:
        internet_charge_type: internet_charge_type
        public_address_ip: public_address_ip
        instance: instance
        destroyed_at: destroyed_at
        created_at: created_at
        association_id: association_id
        pool_name: pool_name
        network_id: network_id
        service: service
        vendor: vendor
        vendor_elastic_ip_id: vendor_elastic_ip_id
        name: name
        max_band_width: 0
        id: id
        region: region
        tenant: tenant
        status: status
      properties:
        association_id:
          type: string
        created_at:
          type: string
        destroyed_at:
          type: string
        id:
          type: string
        instance:
          type: string
        internet_charge_type:
          type: string
        max_band_width:
          format: int32
          type: integer
        name:
          type: string
        network_id:
          type: string
        pool_name:
          type: string
        public_address_ip:
          type: string
        region:
          type: string
        service:
          type: string
        status:
          type: string
        tenant:
          type: string
        vendor:
          type: string
        vendor_elastic_ip_id:
          type: string
      type: object
    coreDescribeElasticNicResponse:
      example:
        ipaddresses:
        - ipaddresses
        - ipaddresses
        elastic_nic_id: elastic_nic_id
      properties:
        elastic_nic_id:
          type: string
        ipaddresses:
          items:
            type: string
          type: array
      type: object
    coreDescribeFaultResponse:
      example:
        component_type: component_type
        service_type: service_type
        instance: instance
        updated_at: updated_at
        service: service
        recovery_id: recovery_id
        created_at: created_at
        failure_message: failure_message
        id: id
        message: message
        properties: '{}'
        status: status
      properties:
        component_type:
          type: string
        created_at:
          type: string
        failure_message:
          type: string
        id:
          type: string
        instance:
          type: string
        message:
          type: string
        properties:
          properties: {}
          type: object
        recovery_id:
          type: string
        service:
          type: string
        service_type:
          type: string
        status:
          type: string
        updated_at:
          type: string
      type: object
    coreDescribeHdfsConfigBriefResponse:
      example:
        service: service
        status: status
        timestamp: timestamp
      properties:
        service:
          type: string
        status:
          type: string
        timestamp:
          format: int64
          type: string
      type: object
    coreDescribeHdfsConfigResponse:
      example:
        keytab_name: keytab_name
        hosts:
        - hostname: hostname
          ip: ip
        - hostname: hostname
          ip: ip
        service: service
        krb5:
          snippets:
          - name: name
            content: content
          - name: name
            content: content
          config: config
        hdfs: hdfs
        status: status
        timestamp: timestamp
      properties:
        hdfs:
          type: string
        hosts:
          items:
            $ref: '#/components/schemas/coreHost'
          type: array
        keytab_name:
          type: string
        krb5:
          $ref: '#/components/schemas/coreKrb5'
        service:
          type: string
        status:
          type: string
        timestamp:
          format: int64
          type: string
      type: object
    coreDescribeInstanceResponse:
      example:
        image: image
        components:
        - components
        - components
        destroyed_at: destroyed_at
        created_at: created_at
        message: message
        resource_pool: resource_pool
        type: type
        hostname: hostname
        ipaddresses:
        - ipaddresses
        - ipaddresses
        elastic_nic:
          ipaddresses:
          - ipaddresses
          - ipaddresses
          elastic_nic_id: elastic_nic_id
        zone: zone
        service: service
        vendor: vendor
        name: name
        arch: arch
        health_status: health_status
        id: id
        scale_type: scale_type
        internet:
          public_ip: public_ip
          bandwidth: 0
          elastic_ip: true
          elastic_ip_id: elastic_ip_id
        tenant: tenant
        status: status
      properties:
        arch:
          type: string
        components:
          items:
            type: string
          type: array
        created_at:
          type: string
        destroyed_at:
          type: string
        elastic_nic:
          $ref: '#/components/schemas/coreDescribeElasticNicResponse'
        health_status:
          type: string
        hostname:
          type: string
        id:
          type: string
        image:
          type: string
        internet:
          $ref: '#/components/schemas/coreDescribeInternetResponse'
        ipaddresses:
          items:
            type: string
          type: array
        message:
          type: string
        name:
          type: string
        resource_pool:
          type: string
        scale_type:
          type: string
        service:
          type: string
        status:
          type: string
        tenant:
          type: string
        type:
          type: string
        vendor:
          type: string
        zone:
          type: string
      type: object
    coreDescribeInstanceTypeGroupResponse:
      example:
        vendor: vendor
        name: name
        id: id
        display_name: display_name
        arches:
        - arches
        - arches
      properties:
        arches:
          items:
            type: string
          type: array
        display_name:
          type: string
        id:
          type: string
        name:
          type: string
        vendor:
          type: string
      type: object
    coreDescribeInstanceTypeResponse:
      example:
        memory: 6
        cpu: 0
        created_at: created_at
        description: description
        display_name: display_name
        compatible_volume_type:
        - compatible_volume_type
        - compatible_volume_type
        instance_class: instance_class
        zone:
        - zone
        - zone
        vendor: vendor
        name: name
        instance_type_group: instance_type_group
        arch: arch
        id: id
        instance_type: instance_type
      properties:
        arch:
          type: string
        compatible_volume_type:
          items:
            type: string
          type: array
        cpu:
          format: int32
          type: integer
        created_at:
          type: string
        description:
          type: string
        display_name:
          type: string
        id:
          type: string
        instance_class:
          type: string
        instance_type:
          type: string
        instance_type_group:
          type: string
        memory:
          format: int32
          type: integer
        name:
          type: string
        vendor:
          type: string
        zone:
          items:
            type: string
          type: array
      type: object
    coreDescribeInternetResponse:
      example:
        public_ip: public_ip
        bandwidth: 0
        elastic_ip: true
        elastic_ip_id: elastic_ip_id
      properties:
        bandwidth:
          format: int32
          type: integer
        elastic_ip:
          format: boolean
          type: boolean
        elastic_ip_id:
          type: string
        public_ip:
          type: string
      type: object
    coreDescribeMetadataResponse:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    coreDescribeNetworkInterfaceResponse:
      example:
        subnet: subnet
        instance: instance
        destroyed_at: destroyed_at
        vendor_network_id: vendor_network_id
        vpc: vpc
        created_at: created_at
        ipaddresses:
        - ipaddresses
        - ipaddresses
        zone: zone
        service: service
        vendor: vendor
        attachment_id: attachment_id
        name: name
        id: id
        region: region
        tenant: tenant
        status: status
      properties:
        attachment_id:
          type: string
        created_at:
          type: string
        destroyed_at:
          type: string
        id:
          type: string
        instance:
          type: string
        ipaddresses:
          items:
            type: string
          type: array
        name:
          type: string
        region:
          type: string
        service:
          type: string
        status:
          type: string
        subnet:
          type: string
        tenant:
          type: string
        vendor:
          type: string
        vendor_network_id:
          type: string
        vpc:
          type: string
        zone:
          type: string
      type: object
    coreDescribeNodeStateMachineStateDetailResponse:
      example:
        instance: instance
        machine_time: machine_time
        current_state: current_state
        stable_remaining: 0
        event: event
        source_state: source_state
        timeout_remaining: 6
        transition: transition
      properties:
        current_state:
          type: string
        event:
          type: string
        instance:
          type: string
        machine_time:
          type: string
        source_state:
          type: string
        stable_remaining:
          format: int32
          type: integer
        timeout_remaining:
          format: int32
          type: integer
        transition:
          type: string
      type: object
    coreDescribeObjectResponse:
      example:
        size: size
        created_at: created_at
        last_modified: last_modified
        key: key
      properties:
        created_at:
          type: string
        key:
          type: string
        last_modified:
          type: string
        size:
          format: int64
          type: string
      type: object
    coreDescribeOssZoneConfigResponse:
      example:
        access_key_id: access_key_id
        zone: zone
        access_key_secret: access_key_secret
        id: id
        app_id: app_id
        tenant: tenant
      properties:
        access_key_id:
          type: string
        access_key_secret:
          type: string
        app_id:
          type: string
        id:
          type: string
        tenant:
          type: string
        zone:
          type: string
      type: object
    coreDescribeOssZoneResponse:
      example:
        endpoint: endpoint
        public_region: public_region
        vendor: vendor
        name: name
        description: description
        display_name: display_name
        internal_region: internal_region
      properties:
        description:
          type: string
        display_name:
          type: string
        endpoint:
          type: string
        internal_region:
          type: string
        name:
          type: string
        public_region:
          type: string
        vendor:
          type: string
      type: object
    coreDescribeQuotaResponse:
      example:
        zone: zone
        quota: 0
        usage: usage
        type: type
        tenant: tenant
      properties:
        quota:
          format: int32
          type: integer
        tenant:
          type: string
        type:
          type: string
        usage:
          format: int64
          type: string
        zone:
          type: string
      type: object
    coreDescribeRecoveryResponse:
      example:
        recoveryPolicyName: recoveryPolicyName
        updated_at: updated_at
        service: service
        jobs:
        - jobs
        - jobs
        policies:
        - policies
        - policies
        created_at: created_at
        id: id
        message: message
        properties: '{}'
        status: status
      properties:
        created_at:
          type: string
        id:
          type: string
        jobs:
          items:
            type: string
          type: array
        message:
          type: string
        policies:
          items:
            type: string
          type: array
        properties:
          properties: {}
          type: object
        recoveryPolicyName:
          type: string
        service:
          type: string
        status:
          type: string
        updated_at:
          type: string
      type: object
    coreDescribeRegionConfigResponse:
      example:
        access_key_id: access_key_id
        vendor: vendor
        vendor_tenant: vendor_tenant
        reverse_connect: true
        access_key_secret: access_key_secret
        vpc: vpc
        created_at: created_at
        project: project
        recycling_security_group: recycling_security_group
        id: id
        region: region
        tenant: tenant
      properties:
        access_key_id:
          type: string
        access_key_secret:
          type: string
        created_at:
          type: string
        id:
          type: string
        project:
          type: string
        recycling_security_group:
          type: string
        region:
          type: string
        reverse_connect:
          format: boolean
          type: boolean
        tenant:
          type: string
        vendor:
          type: string
        vendor_tenant:
          type: string
        vpc:
          type: string
      type: object
    coreDescribeRegionResponse:
      example:
        default_oss_zone: default_oss_zone
        endpoint: endpoint
        oss_connectivity:
        - oss_connectivity
        - oss_connectivity
        vendor: vendor
        name: name
        created_at: created_at
        id: id
        display_name: display_name
        region: region
        properties: '{}'
      properties:
        created_at:
          type: string
        default_oss_zone:
          type: string
        display_name:
          type: string
        endpoint:
          type: string
        id:
          type: string
        name:
          type: string
        oss_connectivity:
          items:
            type: string
          type: array
        properties:
          properties: {}
          type: object
        region:
          type: string
        vendor:
          type: string
      type: object
    coreDescribeResourcePoolResponse:
      example:
        default_oss_zone: default_oss_zone
        oss_connectivity:
        - oss_connectivity
        - oss_connectivity
        created_at: created_at
        description: description
        id: id
        display_name: display_name
        tenant: tenant
      properties:
        created_at:
          type: string
        default_oss_zone:
          type: string
        description:
          type: string
        display_name:
          type: string
        id:
          type: string
        oss_connectivity:
          items:
            type: string
          type: array
        tenant:
          type: string
      type: object
    coreDescribeResourceUsageResponse:
      properties:
        message:
          type: string
        result:
          items:
            $ref: '#/components/schemas/cloudmgrcommonIaasResource'
          type: array
        status:
          format: int32
          type: integer
      type: object
    coreDescribeRoleResponse:
      example:
        name: name
        description: description
        display_name: display_name
        actions:
        - actions
        - actions
      properties:
        actions:
          items:
            type: string
          type: array
        description:
          type: string
        display_name:
          type: string
        name:
          type: string
      type: object
    coreDescribeServiceComponentResponse:
      example:
        max_memory_mb: 5
        min_volume_size: 7
        max_volume_size: 2
        max_instance: 5
        min_bandwidth: 7
        min_cpu_count: 9
        min_initial_instance: 3
        require_portable_volume: true
        min_memory_mb: 4
        max_bandwidth: 0
        max_cpu_count: 6
        name: name
        min_instance: 2
        require_data_volume: true
        max_initial_instance: 1
      properties:
        max_bandwidth:
          format: int32
          type: integer
        max_cpu_count:
          format: int32
          type: integer
        max_initial_instance:
          format: int32
          type: integer
        max_instance:
          format: int32
          type: integer
        max_memory_mb:
          format: int32
          type: integer
        max_volume_size:
          format: int32
          type: integer
        min_bandwidth:
          format: int32
          type: integer
        min_cpu_count:
          format: int32
          type: integer
        min_initial_instance:
          format: int32
          type: integer
        min_instance:
          format: int32
          type: integer
        min_memory_mb:
          format: int32
          type: integer
        min_volume_size:
          format: int32
          type: integer
        name:
          type: string
        require_data_volume:
          format: boolean
          type: boolean
        require_portable_volume:
          format: boolean
          type: boolean
      type: object
    coreDescribeServiceDependencyResponse:
      example:
        reference: reference
        dependent: dependent
      properties:
        dependent:
          type: string
        reference:
          type: string
      type: object
    coreDescribeServiceOfTeamResponse:
      example:
        role: role
        service: service
      properties:
        role:
          type: string
        service:
          type: string
      type: object
    coreDescribeServiceResponse:
      example:
        charge_type: charge_type
        recovering: true
        created_at: created_at
        description: description
        expired_at: expired_at
        resource_pool: resource_pool
        type: type
        expired: true
        zone: zone
        vendor: vendor
        health_status: health_status
        id: id
        tenant: tenant
        volume_type: volume_type
        destroyed_at: destroyed_at
        enable_internal_charge: true
        version: version
        charge_channel: charge_channel
        name: name
        enable_alert: true
        region: region
        disable_auto_recovery: true
        instance_type: instance_type
        protected_mode: true
        properties: '{}'
        status: status
      properties:
        charge_channel:
          type: string
        charge_type:
          type: string
        created_at:
          type: string
        description:
          type: string
        destroyed_at:
          type: string
        disable_auto_recovery:
          format: boolean
          type: boolean
        enable_alert:
          format: boolean
          type: boolean
        enable_internal_charge:
          format: boolean
          type: boolean
        expired:
          format: boolean
          type: boolean
        expired_at:
          type: string
        health_status:
          type: string
        id:
          type: string
        instance_type:
          type: string
        name:
          type: string
        properties:
          properties: {}
          type: object
        protected_mode:
          format: boolean
          type: boolean
        recovering:
          format: boolean
          type: boolean
        region:
          type: string
        resource_pool:
          type: string
        status:
          type: string
        tenant:
          type: string
        type:
          type: string
        vendor:
          type: string
        version:
          type: string
        volume_type:
          type: string
        zone:
          type: string
      type: object
    coreDescribeServiceStateMachineStateDetailResponse:
      example:
        element_status: '{}'
        service: service
        elements:
        - element_status: '{}'
          component: component
          elements:
          - instance: instance
            machine_time: machine_time
            current_state: current_state
            stable_remaining: 0
            event: event
            source_state: source_state
            timeout_remaining: 6
            transition: transition
          - instance: instance
            machine_time: machine_time
            current_state: current_state
            stable_remaining: 0
            event: event
            source_state: source_state
            timeout_remaining: 6
            transition: transition
          machine_time: machine_time
          current_state: current_state
          event: event
          source_state: source_state
          transition: transition
        - element_status: '{}'
          component: component
          elements:
          - instance: instance
            machine_time: machine_time
            current_state: current_state
            stable_remaining: 0
            event: event
            source_state: source_state
            timeout_remaining: 6
            transition: transition
          - instance: instance
            machine_time: machine_time
            current_state: current_state
            stable_remaining: 0
            event: event
            source_state: source_state
            timeout_remaining: 6
            transition: transition
          machine_time: machine_time
          current_state: current_state
          event: event
          source_state: source_state
          transition: transition
        machine_time: machine_time
        current_state: current_state
        event: event
        source_state: source_state
        transition: transition
      properties:
        current_state:
          type: string
        element_status:
          properties: {}
          type: object
        elements:
          items:
            $ref: '#/components/schemas/coreDescribeComponentStateMachineStateDetailResponse'
          type: array
        event:
          type: string
        machine_time:
          type: string
        service:
          type: string
        source_state:
          type: string
        transition:
          type: string
      type: object
    coreDescribeServiceTypeResponse:
      example:
        component:
        - max_memory_mb: 5
          min_volume_size: 7
          max_volume_size: 2
          max_instance: 5
          min_bandwidth: 7
          min_cpu_count: 9
          min_initial_instance: 3
          require_portable_volume: true
          min_memory_mb: 4
          max_bandwidth: 0
          max_cpu_count: 6
          name: name
          min_instance: 2
          require_data_volume: true
          max_initial_instance: 1
        - max_memory_mb: 5
          min_volume_size: 7
          max_volume_size: 2
          max_instance: 5
          min_bandwidth: 7
          min_cpu_count: 9
          min_initial_instance: 3
          require_portable_volume: true
          min_memory_mb: 4
          max_bandwidth: 0
          max_cpu_count: 6
          name: name
          min_instance: 2
          require_data_volume: true
          max_initial_instance: 1
        name: name
        enabled: true
        properties: '{}'
      properties:
        component:
          items:
            $ref: '#/components/schemas/coreDescribeServiceComponentResponse'
          type: array
        enabled:
          format: boolean
          type: boolean
        name:
          type: string
        properties:
          properties: {}
          type: object
      type: object
    coreDescribeServiceVersionResponse:
      example:
        image: image
        vendor: vendor
        upgrade_from:
        - upgrade_from
        - upgrade_from
        destroyed_at: destroyed_at
        created_at: created_at
        downgrade_to:
        - downgrade_to
        - downgrade_to
        arch: arch
        id: id
        region: region
        type: type
        version: version
        enabled: true
      properties:
        arch:
          type: string
        created_at:
          type: string
        destroyed_at:
          type: string
        downgrade_to:
          items:
            type: string
          type: array
        enabled:
          format: boolean
          type: boolean
        id:
          type: string
        image:
          type: string
        region:
          type: string
        type:
          type: string
        upgrade_from:
          items:
            type: string
          type: array
        vendor:
          type: string
        version:
          type: string
      type: object
    coreDescribeSubnetResponse:
      example:
        cidr_v4: cidr_v4
        cidr_v6: cidr_v6
        name: name
        vpc: vpc
        description: description
        id: id
      properties:
        cidr_v4:
          type: string
        cidr_v6:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        vpc:
          type: string
      type: object
    coreDescribeTeamOfServiceResponse:
      example:
        role:
          name: name
          description: description
          display_name: display_name
          actions:
          - actions
          - actions
        service: service
        created_at: created_at
        team: team
        tenant: tenant
      properties:
        created_at:
          type: string
        role:
          $ref: '#/components/schemas/coreDescribeRoleResponse'
        service:
          type: string
        team:
          type: string
        tenant:
          type: string
      type: object
    coreDescribeTunnelInfoResponse:
      example:
        service_name: service_name
        reverse_connect: true
        private_key: private_key
        delegate_host: delegate_host
        delegate_ip: delegate_ip
      properties:
        delegate_host:
          type: string
        delegate_ip:
          type: string
        private_key:
          type: string
        reverse_connect:
          format: boolean
          type: boolean
        service_name:
          type: string
      type: object
    coreDescribeUnhandledFaultResponse:
      example:
        component_type: component_type
        service_type: service_type
        instance: instance
        service: service
        failure_type: failure_type
        created_at: created_at
        comment: comment
        failure_message: failure_message
        properties: '{}'
      properties:
        comment:
          type: string
        component_type:
          type: string
        created_at:
          type: string
        failure_message:
          type: string
        failure_type:
          type: string
        instance:
          type: string
        properties:
          properties: {}
          type: object
        service:
          type: string
        service_type:
          type: string
      type: object
    coreDescribeVendorListResponse:
      example:
        content:
        - available: true
          name: name
          display_name: display_name
        - available: true
          name: name
          display_name: display_name
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeVendorResponse'
          type: array
      type: object
    coreDescribeVendorResponse:
      example:
        available: true
        name: name
        display_name: display_name
      properties:
        available:
          format: boolean
          type: boolean
        display_name:
          type: string
        name:
          type: string
      type: object
    coreDescribeVolumeResponse:
      example:
        device_name: device_name
        instance: instance
        size: 0
        mount_point: mount_point
        destroyed_at: destroyed_at
        name: name
        created_at: created_at
        id: id
      properties:
        created_at:
          type: string
        destroyed_at:
          type: string
        device_name:
          type: string
        id:
          type: string
        instance:
          type: string
        mount_point:
          type: string
        name:
          type: string
        size:
          format: int32
          type: integer
      type: object
    coreDescribeVolumeTypeResponse:
      example:
        scalable: true
        number_of_disk: 1
        volume_type: volume_type
        compatible_system_volume_type:
        - compatible_system_volume_type
        - compatible_system_volume_type
        is_instance_attached: true
        created_at: created_at
        description: description
        portable: true
        display_name: display_name
        max_size: 0
        zone:
        - zone
        - zone
        vendor: vendor
        name: name
        min_size: 6
        id: id
        system_volume: true
        step_size: 5
      properties:
        compatible_system_volume_type:
          items:
            type: string
          type: array
        created_at:
          type: string
        description:
          type: string
        display_name:
          type: string
        id:
          type: string
        is_instance_attached:
          format: boolean
          type: boolean
        max_size:
          format: int32
          type: integer
        min_size:
          format: int32
          type: integer
        name:
          type: string
        number_of_disk:
          format: int32
          type: integer
        portable:
          format: boolean
          type: boolean
        scalable:
          format: boolean
          type: boolean
        step_size:
          format: int32
          type: integer
        system_volume:
          format: boolean
          type: boolean
        vendor:
          type: string
        volume_type:
          type: string
        zone:
          items:
            type: string
          type: array
      type: object
    coreDescribeVpcDomainMappingResponse:
      properties:
        created_at:
          type: string
        domain:
          type: string
        id:
          type: string
        ipaddress:
          type: string
        vendor:
          type: string
        vpc:
          type: string
      type: object
    coreDescribeVpcResponse:
      example:
        cidr_v4: cidr_v4
        cidr_v6: cidr_v6
        name: name
        description: description
        id: id
      properties:
        cidr_v4:
          type: string
        cidr_v6:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    coreDescribeWorkloadDetailResponse:
      properties:
        command_id:
          format: int32
          type: integer
        epoch_id:
          format: int32
          type: integer
        id:
          type: string
        query_state:
          type: string
        query_text:
          type: string
        query_type:
          type: string
        segment_id:
          format: int32
          type: integer
        sender_id:
          format: int32
          type: integer
        service:
          type: string
        session_id:
          format: int32
          type: integer
        slice_id:
          format: int32
          type: integer
        timestamp:
          type: string
      type: object
    coreDescribeZoneConfigResponse:
      example:
        zone: zone
        vendor: vendor
        created_at: created_at
        id: id
        vxnet: vxnet
        tenant: tenant
      properties:
        created_at:
          type: string
        id:
          type: string
        tenant:
          type: string
        vendor:
          type: string
        vxnet:
          type: string
        zone:
          type: string
      type: object
    coreDescribeZoneResponse:
      example:
        zone: zone
        vendor: vendor
        name: name
        created_at: created_at
        description: description
        display_name: display_name
        region: region
        properties: '{}'
        tenant: tenant
      properties:
        created_at:
          type: string
        description:
          type: string
        display_name:
          type: string
        name:
          type: string
        properties:
          properties: {}
          type: object
        region:
          type: string
        tenant:
          type: string
        vendor:
          type: string
        zone:
          type: string
      type: object
    coreEnableInternalChargeRequest:
      properties:
        service:
          type: string
        tenant:
          type: string
      type: object
    coreExportServiceStateMachineInfoReponse:
      example:
        detail:
          element_status: '{}'
          service: service
          elements:
          - element_status: '{}'
            component: component
            elements:
            - instance: instance
              machine_time: machine_time
              current_state: current_state
              stable_remaining: 0
              event: event
              source_state: source_state
              timeout_remaining: 6
              transition: transition
            - instance: instance
              machine_time: machine_time
              current_state: current_state
              stable_remaining: 0
              event: event
              source_state: source_state
              timeout_remaining: 6
              transition: transition
            machine_time: machine_time
            current_state: current_state
            event: event
            source_state: source_state
            transition: transition
          - element_status: '{}'
            component: component
            elements:
            - instance: instance
              machine_time: machine_time
              current_state: current_state
              stable_remaining: 0
              event: event
              source_state: source_state
              timeout_remaining: 6
              transition: transition
            - instance: instance
              machine_time: machine_time
              current_state: current_state
              stable_remaining: 0
              event: event
              source_state: source_state
              timeout_remaining: 6
              transition: transition
            machine_time: machine_time
            current_state: current_state
            event: event
            source_state: source_state
            transition: transition
          machine_time: machine_time
          current_state: current_state
          event: event
          source_state: source_state
          transition: transition
      properties:
        detail:
          $ref: '#/components/schemas/coreDescribeServiceStateMachineStateDetailResponse'
      type: object
    coreHost:
      example:
        hostname: hostname
        ip: ip
      properties:
        hostname:
          type: string
        ip:
          type: string
      type: object
    coreInitializeTenantRequest:
      properties:
        tenant:
          type: string
        vendor:
          type: string
      type: object
    coreInitializeTenantResponse:
      type: object
    coreInplaceUpgradeServiceRequest:
      properties:
        image:
          type: string
        url:
          type: string
        version:
          type: string
      type: object
    coreJobLogResponse:
      example:
        id: id
        content: content
      properties:
        content:
          type: string
        id:
          type: string
      type: object
    coreKrb5:
      example:
        snippets:
        - name: name
          content: content
        - name: name
          content: content
        config: config
      properties:
        config:
          type: string
        snippets:
          items:
            $ref: '#/components/schemas/coreKrb5Snippet'
          type: array
      type: object
    coreKrb5Snippet:
      example:
        name: name
        content: content
      properties:
        content:
          type: string
        name:
          type: string
      type: object
    coreListElasticIpResponse:
      example:
        total: 1
        count: 6
        content:
        - internet_charge_type: internet_charge_type
          public_address_ip: public_address_ip
          instance: instance
          destroyed_at: destroyed_at
          created_at: created_at
          association_id: association_id
          pool_name: pool_name
          network_id: network_id
          service: service
          vendor: vendor
          vendor_elastic_ip_id: vendor_elastic_ip_id
          name: name
          max_band_width: 0
          id: id
          region: region
          tenant: tenant
          status: status
        - internet_charge_type: internet_charge_type
          public_address_ip: public_address_ip
          instance: instance
          destroyed_at: destroyed_at
          created_at: created_at
          association_id: association_id
          pool_name: pool_name
          network_id: network_id
          service: service
          vendor: vendor
          vendor_elastic_ip_id: vendor_elastic_ip_id
          name: name
          max_band_width: 0
          id: id
          region: region
          tenant: tenant
          status: status
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeElasticIpResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListFaultResponse:
      example:
        total: 6
        count: 0
        content:
        - component_type: component_type
          service_type: service_type
          instance: instance
          updated_at: updated_at
          service: service
          recovery_id: recovery_id
          created_at: created_at
          failure_message: failure_message
          id: id
          message: message
          properties: '{}'
          status: status
        - component_type: component_type
          service_type: service_type
          instance: instance
          updated_at: updated_at
          service: service
          recovery_id: recovery_id
          created_at: created_at
          failure_message: failure_message
          id: id
          message: message
          properties: '{}'
          status: status
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeFaultResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListHdfsConfigResponse:
      example:
        total: 6
        count: 0
        content:
        - service: service
          status: status
          timestamp: timestamp
        - service: service
          status: status
          timestamp: timestamp
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeHdfsConfigBriefResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListInstanceResponse:
      example:
        total: 1
        count: 6
        content:
        - image: image
          components:
          - components
          - components
          destroyed_at: destroyed_at
          created_at: created_at
          message: message
          resource_pool: resource_pool
          type: type
          hostname: hostname
          ipaddresses:
          - ipaddresses
          - ipaddresses
          elastic_nic:
            ipaddresses:
            - ipaddresses
            - ipaddresses
            elastic_nic_id: elastic_nic_id
          zone: zone
          service: service
          vendor: vendor
          name: name
          arch: arch
          health_status: health_status
          id: id
          scale_type: scale_type
          internet:
            public_ip: public_ip
            bandwidth: 0
            elastic_ip: true
            elastic_ip_id: elastic_ip_id
          tenant: tenant
          status: status
        - image: image
          components:
          - components
          - components
          destroyed_at: destroyed_at
          created_at: created_at
          message: message
          resource_pool: resource_pool
          type: type
          hostname: hostname
          ipaddresses:
          - ipaddresses
          - ipaddresses
          elastic_nic:
            ipaddresses:
            - ipaddresses
            - ipaddresses
            elastic_nic_id: elastic_nic_id
          zone: zone
          service: service
          vendor: vendor
          name: name
          arch: arch
          health_status: health_status
          id: id
          scale_type: scale_type
          internet:
            public_ip: public_ip
            bandwidth: 0
            elastic_ip: true
            elastic_ip_id: elastic_ip_id
          tenant: tenant
          status: status
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeInstanceResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListInstanceTypeGroupResponse:
      example:
        total: 6
        count: 0
        content:
        - vendor: vendor
          name: name
          id: id
          display_name: display_name
          arches:
          - arches
          - arches
        - vendor: vendor
          name: name
          id: id
          display_name: display_name
          arches:
          - arches
          - arches
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeInstanceTypeGroupResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListInstanceTypeResponse:
      example:
        total: 5
        count: 1
        content:
        - memory: 6
          cpu: 0
          created_at: created_at
          description: description
          display_name: display_name
          compatible_volume_type:
          - compatible_volume_type
          - compatible_volume_type
          instance_class: instance_class
          zone:
          - zone
          - zone
          vendor: vendor
          name: name
          instance_type_group: instance_type_group
          arch: arch
          id: id
          instance_type: instance_type
        - memory: 6
          cpu: 0
          created_at: created_at
          description: description
          display_name: display_name
          compatible_volume_type:
          - compatible_volume_type
          - compatible_volume_type
          instance_class: instance_class
          zone:
          - zone
          - zone
          vendor: vendor
          name: name
          instance_type_group: instance_type_group
          arch: arch
          id: id
          instance_type: instance_type
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeInstanceTypeResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListJobResponse:
      example:
        total: 1
        count: 6
        content:
        - error_message: error_message
          updated_at: updated_at
          recovery_id: recovery_id
          action: action
          created_at: created_at
          extras: extras
          error_code: 0
          id: id
          resource_ids:
          - resource_ids
          - resource_ids
          user: user
          status: status
        - error_message: error_message
          updated_at: updated_at
          recovery_id: recovery_id
          action: action
          created_at: created_at
          extras: extras
          error_code: 0
          id: id
          resource_ids:
          - resource_ids
          - resource_ids
          user: user
          status: status
      properties:
        content:
          items:
            $ref: '#/components/schemas/commonDescribeJobResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListMonitorServiceResponse:
      example:
        total: 6
        count: 0
        content:
        - charge_type: charge_type
          recovering: true
          created_at: created_at
          description: description
          expired_at: expired_at
          resource_pool: resource_pool
          type: type
          expired: true
          zone: zone
          vendor: vendor
          health_status: health_status
          id: id
          tenant: tenant
          volume_type: volume_type
          destroyed_at: destroyed_at
          enable_internal_charge: true
          version: version
          charge_channel: charge_channel
          name: name
          enable_alert: true
          region: region
          disable_auto_recovery: true
          instance_type: instance_type
          protected_mode: true
          properties: '{}'
          status: status
        - charge_type: charge_type
          recovering: true
          created_at: created_at
          description: description
          expired_at: expired_at
          resource_pool: resource_pool
          type: type
          expired: true
          zone: zone
          vendor: vendor
          health_status: health_status
          id: id
          tenant: tenant
          volume_type: volume_type
          destroyed_at: destroyed_at
          enable_internal_charge: true
          version: version
          charge_channel: charge_channel
          name: name
          enable_alert: true
          region: region
          disable_auto_recovery: true
          instance_type: instance_type
          protected_mode: true
          properties: '{}'
          status: status
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeServiceResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListNetworkInterfaceResponse:
      example:
        total: 6
        count: 0
        content:
        - subnet: subnet
          instance: instance
          destroyed_at: destroyed_at
          vendor_network_id: vendor_network_id
          vpc: vpc
          created_at: created_at
          ipaddresses:
          - ipaddresses
          - ipaddresses
          zone: zone
          service: service
          vendor: vendor
          attachment_id: attachment_id
          name: name
          id: id
          region: region
          tenant: tenant
          status: status
        - subnet: subnet
          instance: instance
          destroyed_at: destroyed_at
          vendor_network_id: vendor_network_id
          vpc: vpc
          created_at: created_at
          ipaddresses:
          - ipaddresses
          - ipaddresses
          zone: zone
          service: service
          vendor: vendor
          attachment_id: attachment_id
          name: name
          id: id
          region: region
          tenant: tenant
          status: status
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeNetworkInterfaceResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListObjectResponse:
      example:
        next_marker: next_marker
        marker: marker
        prefix: prefix
        objects:
        - size: size
          created_at: created_at
          last_modified: last_modified
          key: key
        - size: size
          created_at: created_at
          last_modified: last_modified
          key: key
      properties:
        marker:
          type: string
        next_marker:
          type: string
        objects:
          items:
            $ref: '#/components/schemas/coreDescribeObjectResponse'
          type: array
        prefix:
          type: string
      type: object
    coreListOssZoneConfigResponse:
      example:
        total: 6
        count: 0
        content:
        - access_key_id: access_key_id
          zone: zone
          access_key_secret: access_key_secret
          id: id
          app_id: app_id
          tenant: tenant
        - access_key_id: access_key_id
          zone: zone
          access_key_secret: access_key_secret
          id: id
          app_id: app_id
          tenant: tenant
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeOssZoneConfigResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListOssZoneResponse:
      example:
        total: 6
        count: 0
        content:
        - endpoint: endpoint
          public_region: public_region
          vendor: vendor
          name: name
          description: description
          display_name: display_name
          internal_region: internal_region
        - endpoint: endpoint
          public_region: public_region
          vendor: vendor
          name: name
          description: description
          display_name: display_name
          internal_region: internal_region
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeOssZoneResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListQuotaResponse:
      example:
        total: 1
        count: 6
        content:
        - zone: zone
          quota: 0
          usage: usage
          type: type
          tenant: tenant
        - zone: zone
          quota: 0
          usage: usage
          type: type
          tenant: tenant
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeQuotaResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListRecoveryResponse:
      example:
        total: 6
        count: 0
        content:
        - recoveryPolicyName: recoveryPolicyName
          updated_at: updated_at
          service: service
          jobs:
          - jobs
          - jobs
          policies:
          - policies
          - policies
          created_at: created_at
          id: id
          message: message
          properties: '{}'
          status: status
        - recoveryPolicyName: recoveryPolicyName
          updated_at: updated_at
          service: service
          jobs:
          - jobs
          - jobs
          policies:
          - policies
          - policies
          created_at: created_at
          id: id
          message: message
          properties: '{}'
          status: status
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeRecoveryResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListRegionConfigResponse:
      example:
        total: 6
        count: 0
        content:
        - access_key_id: access_key_id
          vendor: vendor
          vendor_tenant: vendor_tenant
          reverse_connect: true
          access_key_secret: access_key_secret
          vpc: vpc
          created_at: created_at
          project: project
          recycling_security_group: recycling_security_group
          id: id
          region: region
          tenant: tenant
        - access_key_id: access_key_id
          vendor: vendor
          vendor_tenant: vendor_tenant
          reverse_connect: true
          access_key_secret: access_key_secret
          vpc: vpc
          created_at: created_at
          project: project
          recycling_security_group: recycling_security_group
          id: id
          region: region
          tenant: tenant
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeRegionConfigResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListRegionResponse:
      example:
        total: 6
        count: 0
        content:
        - default_oss_zone: default_oss_zone
          endpoint: endpoint
          oss_connectivity:
          - oss_connectivity
          - oss_connectivity
          vendor: vendor
          name: name
          created_at: created_at
          id: id
          display_name: display_name
          region: region
          properties: '{}'
        - default_oss_zone: default_oss_zone
          endpoint: endpoint
          oss_connectivity:
          - oss_connectivity
          - oss_connectivity
          vendor: vendor
          name: name
          created_at: created_at
          id: id
          display_name: display_name
          region: region
          properties: '{}'
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeRegionResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListResourcePoolResponse:
      example:
        total: 6
        count: 0
        content:
        - default_oss_zone: default_oss_zone
          oss_connectivity:
          - oss_connectivity
          - oss_connectivity
          created_at: created_at
          description: description
          id: id
          display_name: display_name
          tenant: tenant
        - default_oss_zone: default_oss_zone
          oss_connectivity:
          - oss_connectivity
          - oss_connectivity
          created_at: created_at
          description: description
          id: id
          display_name: display_name
          tenant: tenant
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeResourcePoolResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListResourceUsageResponse:
      properties:
        message:
          type: string
        result:
          items:
            $ref: '#/components/schemas/cloudmgrcommonIaasResource'
          type: array
        status:
          format: int32
          type: integer
      type: object
    coreListRoleResponse:
      example:
        total: 6
        count: 0
        content:
        - name: name
          description: description
          display_name: display_name
          actions:
          - actions
          - actions
        - name: name
          description: description
          display_name: display_name
          actions:
          - actions
          - actions
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeRoleResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListServiceBucketResponse:
      example:
        total: 6
        count: 0
        content:
        - public_region: public_region
          service: service
          vendor: vendor
          destroyed_at: destroyed_at
          name: name
          created_at: created_at
          id: id
          internal_region: internal_region
          tenant: tenant
          status: status
        - public_region: public_region
          service: service
          vendor: vendor
          destroyed_at: destroyed_at
          name: name
          created_at: created_at
          id: id
          internal_region: internal_region
          tenant: tenant
          status: status
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeBucketResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListServiceComponentHealthResponse:
      example:
        component_health_status: component_health_status
        component_type: component_type
        total: 6
        count: 0
        health_status_description: health_status_description
        health_status: health_status
        id: id
        content:
        - component_health_status: component_health_status
          hostname: hostname
          instance: instance
          ipaddresses:
          - ipaddresses
          - ipaddresses
          instance_health_status_description: instance_health_status_description
          component_health_status_description: component_health_status_description
          instance_health_status: instance_health_status
        - component_health_status: component_health_status
          hostname: hostname
          instance: instance
          ipaddresses:
          - ipaddresses
          - ipaddresses
          instance_health_status_description: instance_health_status_description
          component_health_status_description: component_health_status_description
          instance_health_status: instance_health_status
        component_health_status_description: component_health_status_description
      properties:
        component_health_status:
          type: string
        component_health_status_description:
          type: string
        component_type:
          type: string
        content:
          items:
            $ref: '#/components/schemas/coreDescribeComponentHealthDetailResponse'
          type: array
        count:
          format: int32
          type: integer
        health_status:
          type: string
        health_status_description:
          type: string
        id:
          type: string
        total:
          format: int32
          type: integer
      type: object
    coreListServiceDependencyResponse:
      example:
        total: 6
        count: 0
        content:
        - reference: reference
          dependent: dependent
        - reference: reference
          dependent: dependent
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeServiceDependencyResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListServiceFeatureResponse:
      example:
        enable_service_shrink: true
        enable_instance_resize: true
        stop_service_before_expand_service: true
        stop_service_before_resize_volume: true
        stop_service_before_resize_instance: true
        enable_bind_public_ip: true
        enable_service_expand: true
        enable_service_monitor: true
        enable_service_upgrade: true
        enable_volume_scaleout: true
        enable_bind_network_card: true
        enable_service_alert: true
        stop_service_before_shrink_service: true
      properties:
        enable_bind_network_card:
          format: boolean
          type: boolean
        enable_bind_public_ip:
          format: boolean
          type: boolean
        enable_instance_resize:
          format: boolean
          type: boolean
        enable_service_alert:
          format: boolean
          type: boolean
        enable_service_expand:
          format: boolean
          type: boolean
        enable_service_monitor:
          format: boolean
          type: boolean
        enable_service_shrink:
          format: boolean
          type: boolean
        enable_service_upgrade:
          format: boolean
          type: boolean
        enable_volume_scaleout:
          format: boolean
          type: boolean
        stop_service_before_expand_service:
          format: boolean
          type: boolean
        stop_service_before_resize_instance:
          format: boolean
          type: boolean
        stop_service_before_resize_volume:
          format: boolean
          type: boolean
        stop_service_before_shrink_service:
          format: boolean
          type: boolean
      type: object
    coreListServiceMetadataResponse:
      example:
        total: 6
        count: 0
        content:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeMetadataResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListServiceOfTeamResponse:
      example:
        total: 6
        count: 0
        content:
        - role: role
          service: service
        - role: role
          service: service
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeServiceOfTeamResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListServiceRecoveryDetailResponse:
      example:
        updated_at: updated_at
        service: service
        jobs:
        - error_message: error_message
          updated_at: updated_at
          recovery_id: recovery_id
          action: action
          created_at: created_at
          extras: extras
          error_code: 0
          id: id
          resource_ids:
          - resource_ids
          - resource_ids
          user: user
          status: status
        - error_message: error_message
          updated_at: updated_at
          recovery_id: recovery_id
          action: action
          created_at: created_at
          extras: extras
          error_code: 0
          id: id
          resource_ids:
          - resource_ids
          - resource_ids
          user: user
          status: status
        recovery_policy_name: recovery_policy_name
        policies:
        - policies
        - policies
        created_at: created_at
        last_recovery_policy: last_recovery_policy
        id: id
        message: message
        recover_sequence: recover_sequence
        properties: '{}'
        status: status
      properties:
        created_at:
          type: string
        id:
          type: string
        jobs:
          items:
            $ref: '#/components/schemas/commonDescribeJobResponse'
          type: array
        last_recovery_policy:
          type: string
        message:
          type: string
        policies:
          items:
            type: string
          type: array
        properties:
          properties: {}
          type: object
        recover_sequence:
          type: string
        recovery_policy_name:
          type: string
        service:
          type: string
        status:
          type: string
        updated_at:
          type: string
      type: object
    coreListServiceResponse:
      example:
        total: 6
        count: 0
        content:
        - charge_type: charge_type
          recovering: true
          created_at: created_at
          description: description
          expired_at: expired_at
          resource_pool: resource_pool
          type: type
          expired: true
          zone: zone
          vendor: vendor
          health_status: health_status
          id: id
          tenant: tenant
          volume_type: volume_type
          destroyed_at: destroyed_at
          enable_internal_charge: true
          version: version
          charge_channel: charge_channel
          name: name
          enable_alert: true
          region: region
          disable_auto_recovery: true
          instance_type: instance_type
          protected_mode: true
          properties: '{}'
          status: status
        - charge_type: charge_type
          recovering: true
          created_at: created_at
          description: description
          expired_at: expired_at
          resource_pool: resource_pool
          type: type
          expired: true
          zone: zone
          vendor: vendor
          health_status: health_status
          id: id
          tenant: tenant
          volume_type: volume_type
          destroyed_at: destroyed_at
          enable_internal_charge: true
          version: version
          charge_channel: charge_channel
          name: name
          enable_alert: true
          region: region
          disable_auto_recovery: true
          instance_type: instance_type
          protected_mode: true
          properties: '{}'
          status: status
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeServiceResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListServiceStatusesResponse:
      example:
        statuses:
        - statuses
        - statuses
      properties:
        statuses:
          items:
            type: string
          type: array
      type: object
    coreListServiceTypeResponse:
      example:
        type:
        - component:
          - max_memory_mb: 5
            min_volume_size: 7
            max_volume_size: 2
            max_instance: 5
            min_bandwidth: 7
            min_cpu_count: 9
            min_initial_instance: 3
            require_portable_volume: true
            min_memory_mb: 4
            max_bandwidth: 0
            max_cpu_count: 6
            name: name
            min_instance: 2
            require_data_volume: true
            max_initial_instance: 1
          - max_memory_mb: 5
            min_volume_size: 7
            max_volume_size: 2
            max_instance: 5
            min_bandwidth: 7
            min_cpu_count: 9
            min_initial_instance: 3
            require_portable_volume: true
            min_memory_mb: 4
            max_bandwidth: 0
            max_cpu_count: 6
            name: name
            min_instance: 2
            require_data_volume: true
            max_initial_instance: 1
          name: name
          enabled: true
          properties: '{}'
        - component:
          - max_memory_mb: 5
            min_volume_size: 7
            max_volume_size: 2
            max_instance: 5
            min_bandwidth: 7
            min_cpu_count: 9
            min_initial_instance: 3
            require_portable_volume: true
            min_memory_mb: 4
            max_bandwidth: 0
            max_cpu_count: 6
            name: name
            min_instance: 2
            require_data_volume: true
            max_initial_instance: 1
          - max_memory_mb: 5
            min_volume_size: 7
            max_volume_size: 2
            max_instance: 5
            min_bandwidth: 7
            min_cpu_count: 9
            min_initial_instance: 3
            require_portable_volume: true
            min_memory_mb: 4
            max_bandwidth: 0
            max_cpu_count: 6
            name: name
            min_instance: 2
            require_data_volume: true
            max_initial_instance: 1
          name: name
          enabled: true
          properties: '{}'
      properties:
        type:
          items:
            $ref: '#/components/schemas/coreDescribeServiceTypeResponse'
          type: array
      type: object
    coreListServiceVersionResponse:
      example:
        total: 6
        count: 0
        content:
        - image: image
          vendor: vendor
          upgrade_from:
          - upgrade_from
          - upgrade_from
          destroyed_at: destroyed_at
          created_at: created_at
          downgrade_to:
          - downgrade_to
          - downgrade_to
          arch: arch
          id: id
          region: region
          type: type
          version: version
          enabled: true
        - image: image
          vendor: vendor
          upgrade_from:
          - upgrade_from
          - upgrade_from
          destroyed_at: destroyed_at
          created_at: created_at
          downgrade_to:
          - downgrade_to
          - downgrade_to
          arch: arch
          id: id
          region: region
          type: type
          version: version
          enabled: true
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeServiceVersionResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListTeamOfServiceResponse:
      example:
        total: 6
        count: 0
        content:
        - role:
            name: name
            description: description
            display_name: display_name
            actions:
            - actions
            - actions
          service: service
          created_at: created_at
          team: team
          tenant: tenant
        - role:
            name: name
            description: description
            display_name: display_name
            actions:
            - actions
            - actions
          service: service
          created_at: created_at
          team: team
          tenant: tenant
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeTeamOfServiceResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListUnhandledFaultResponse:
      example:
        total: 6
        count: 0
        content:
        - component_type: component_type
          service_type: service_type
          instance: instance
          service: service
          failure_type: failure_type
          created_at: created_at
          comment: comment
          failure_message: failure_message
          properties: '{}'
        - component_type: component_type
          service_type: service_type
          instance: instance
          service: service
          failure_type: failure_type
          created_at: created_at
          comment: comment
          failure_message: failure_message
          properties: '{}'
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeUnhandledFaultResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListVolumeResponse:
      example:
        total: 1
        count: 6
        content:
        - device_name: device_name
          instance: instance
          size: 0
          mount_point: mount_point
          destroyed_at: destroyed_at
          name: name
          created_at: created_at
          id: id
        - device_name: device_name
          instance: instance
          size: 0
          mount_point: mount_point
          destroyed_at: destroyed_at
          name: name
          created_at: created_at
          id: id
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeVolumeResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListVolumeTypeResponse:
      example:
        total: 2
        count: 5
        content:
        - scalable: true
          number_of_disk: 1
          volume_type: volume_type
          compatible_system_volume_type:
          - compatible_system_volume_type
          - compatible_system_volume_type
          is_instance_attached: true
          created_at: created_at
          description: description
          portable: true
          display_name: display_name
          max_size: 0
          zone:
          - zone
          - zone
          vendor: vendor
          name: name
          min_size: 6
          id: id
          system_volume: true
          step_size: 5
        - scalable: true
          number_of_disk: 1
          volume_type: volume_type
          compatible_system_volume_type:
          - compatible_system_volume_type
          - compatible_system_volume_type
          is_instance_attached: true
          created_at: created_at
          description: description
          portable: true
          display_name: display_name
          max_size: 0
          zone:
          - zone
          - zone
          vendor: vendor
          name: name
          min_size: 6
          id: id
          system_volume: true
          step_size: 5
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeVolumeTypeResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListVpcDomainMappingResponse:
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeVpcDomainMappingResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListVpcResponse:
      example:
        vpc:
        - cidr_v4: cidr_v4
          cidr_v6: cidr_v6
          name: name
          description: description
          id: id
        - cidr_v4: cidr_v4
          cidr_v6: cidr_v6
          name: name
          description: description
          id: id
      properties:
        vpc:
          items:
            $ref: '#/components/schemas/coreDescribeVpcResponse'
          type: array
      type: object
    coreListVpcSubnetsResponse:
      example:
        subnet:
        - cidr_v4: cidr_v4
          cidr_v6: cidr_v6
          name: name
          vpc: vpc
          description: description
          id: id
        - cidr_v4: cidr_v4
          cidr_v6: cidr_v6
          name: name
          vpc: vpc
          description: description
          id: id
      properties:
        subnet:
          items:
            $ref: '#/components/schemas/coreDescribeSubnetResponse'
          type: array
      type: object
    coreListWorkloadDetailResponse:
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeWorkloadDetailResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListZoneConfigResponse:
      example:
        total: 6
        count: 0
        content:
        - zone: zone
          vendor: vendor
          created_at: created_at
          id: id
          vxnet: vxnet
          tenant: tenant
        - zone: zone
          vendor: vendor
          created_at: created_at
          id: id
          vxnet: vxnet
          tenant: tenant
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeZoneConfigResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreListZoneResponse:
      example:
        total: 6
        count: 0
        content:
        - zone: zone
          vendor: vendor
          name: name
          created_at: created_at
          description: description
          display_name: display_name
          region: region
          properties: '{}'
          tenant: tenant
        - zone: zone
          vendor: vendor
          name: name
          created_at: created_at
          description: description
          display_name: display_name
          region: region
          properties: '{}'
          tenant: tenant
      properties:
        content:
          items:
            $ref: '#/components/schemas/coreDescribeZoneResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    coreModifyChargeInfoRequest:
      properties:
        charge_channel:
          type: string
        charge_type:
          type: string
        enable_internal_charge:
          format: boolean
          type: boolean
        expired:
          format: boolean
          type: boolean
        expired_at:
          type: string
      type: object
    coreModifyElasticIpMaxBandWidthRequest:
      properties:
        max_band_width:
          format: int32
          type: integer
      type: object
    coreModifyServiceRequest:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    coreReservedResource:
      properties:
        instances:
          items:
            type: string
          type: array
        resource_pool:
          type: string
      type: object
    coreResizeServiceVolumesRequest:
      properties:
        target_volume_size:
          properties: {}
          type: object
      type: object
    coreRestartServiceRequest:
      type: object
    coreScaleInServiceComponentRequest:
      properties:
        instances:
          items:
            type: string
          type: array
      type: object
    coreScaleInServiceRequest:
      properties:
        component:
          properties: {}
          type: object
      type: object
    coreScaleOutIaasResource:
      properties:
        count:
          format: int32
          type: integer
      type: object
    coreScaleOutReservedResource:
      properties:
        instances:
          items:
            type: string
          type: array
      type: object
    coreScaleOutServiceComponentRequest:
      properties:
        iaas:
          $ref: '#/components/schemas/coreScaleOutIaasResource'
        reserved:
          $ref: '#/components/schemas/coreScaleOutReservedResource'
      type: object
    coreScaleOutServiceRequest:
      properties:
        component:
          properties: {}
          type: object
      type: object
    coreStartMeteringRequest:
      type: object
    coreStartServiceRequest:
      properties:
        stop_at:
          type: string
      type: object
    coreStopServiceRequest:
      properties:
        force:
          format: boolean
          type: boolean
      type: object
    coreUpdateInstanceTypeGroupRequest:
      properties:
        arches:
          items:
            type: string
          type: array
        display_name:
          type: string
        vendor:
          type: string
      type: object
    coreUpdateInstanceTypeRequest:
      properties:
        arch:
          type: string
        compatible_volume_type:
          items:
            type: string
          type: array
        cpu:
          format: int32
          type: integer
        description:
          type: string
        display_name:
          type: string
        instance_class:
          type: string
        instance_type:
          type: string
        instance_type_group:
          type: string
        memory:
          format: int32
          type: integer
        zone:
          items:
            type: string
          type: array
      type: object
    coreUpdateOssZoneConfigRequest:
      properties:
        access_key_id:
          type: string
        access_key_secret:
          type: string
      type: object
    coreUpdateQuotaRequest:
      properties:
        quota:
          format: int32
          type: integer
        tenant:
          type: string
        type:
          type: string
        zone:
          type: string
      type: object
    coreUpdateRegionConfigRequest:
      properties:
        access_key_id:
          type: string
        access_key_secret:
          type: string
        project:
          type: string
        recycling_security_group:
          type: string
        reverse_connect:
          format: boolean
          type: boolean
        vpc:
          type: string
      type: object
    coreUpdateServiceVersionRequest:
      properties:
        arch:
          type: string
        downgrade_to:
          $ref: '#/components/schemas/coreUpdateVersionDetailRequest'
        enabled:
          format: boolean
          type: boolean
        image:
          type: string
        upgrade_from:
          $ref: '#/components/schemas/coreUpdateVersionDetailRequest'
      type: object
    coreUpdateVersionDetailRequest:
      properties:
        versions:
          items:
            type: string
          type: array
      type: object
    coreUpdateZoneConfigRequest:
      properties:
        vxnet:
          type: string
      type: object
    coreUpgradeServiceRequest:
      properties:
        version:
          type: string
      type: object
    coreWorkloadTagResponse:
      properties:
        id:
          type: string
        tags:
          properties: {}
          type: object
      type: object
    coreWorkloadTextResponse:
      properties:
        id:
          type: string
        texts:
          properties: {}
          type: object
      type: object
    ksyunCalculateResourceUsageResponse:
      example:
        result:
          priceConf:
            props:
            - propValue: 0
              propCode: propCode
            - propValue: 0
              propCode: propCode
          conf: conf
          region: region
        message: message
        status: 6
      properties:
        message:
          type: string
        result:
          $ref: '#/components/schemas/commonResourceConfig'
        status:
          format: int32
          type: integer
      type: object
    ksyunCreateServiceConfigRequest:
      properties:
        action:
          type: string
        config:
          type: string
        service_id:
          type: string
        service_type:
          type: string
      type: object
    ksyunCreateServiceConfigResponse:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    ksyunDescribeResourceUsageResponse:
      example:
        result:
        - projectList:
          - projectName: projectName
            projectId: projectId
          - projectName: projectName
            projectId: projectId
          clusterType: clusterType
          machineTypeName: machineTypeName
          machineTypeCode: machineTypeCode
          ip: ip
          regionName: regionName
          userId: userId
          regionCode: regionCode
          subAccountId: subAccountId
          resInfos:
          - totalValue: 6
            usedValue: 1
            allocatedValue: 0
            resCode: resCode
          - totalValue: 6
            usedValue: 1
            allocatedValue: 0
            resCode: resCode
          clusterName: clusterName
          az: az
          productTypeCode: productTypeCode
        - projectList:
          - projectName: projectName
            projectId: projectId
          - projectName: projectName
            projectId: projectId
          clusterType: clusterType
          machineTypeName: machineTypeName
          machineTypeCode: machineTypeCode
          ip: ip
          regionName: regionName
          userId: userId
          regionCode: regionCode
          subAccountId: subAccountId
          resInfos:
          - totalValue: 6
            usedValue: 1
            allocatedValue: 0
            resCode: resCode
          - totalValue: 6
            usedValue: 1
            allocatedValue: 0
            resCode: resCode
          clusterName: clusterName
          az: az
          productTypeCode: productTypeCode
        message: message
        status: 0
      properties:
        message:
          type: string
        result:
          items:
            $ref: '#/components/schemas/commonIaasResource'
          type: array
        status:
          format: int32
          type: integer
      type: object
    ksyunDescribeServiceConfigRequest:
      properties:
        conf:
          type: string
        confId:
          type: string
        userId:
          type: string
      type: object
    ksyunDescribeServiceConfigResponse:
      example:
        result: result
        message: message
        status: 0
      properties:
        message:
          type: string
        result:
          type: string
        status:
          format: int32
          type: integer
      type: object
    ksyunExecuteServiceConfigRequest:
      properties:
        conf:
          type: string
        confId:
          type: string
        userId:
          type: string
      type: object
    ksyunExecuteServiceConfigResponse:
      example:
        message: message
        status: 0
      properties:
        message:
          type: string
        status:
          format: int32
          type: integer
      type: object
    ksyunListResourceUsageResponse:
      example:
        result:
        - projectList:
          - projectName: projectName
            projectId: projectId
          - projectName: projectName
            projectId: projectId
          clusterType: clusterType
          machineTypeName: machineTypeName
          machineTypeCode: machineTypeCode
          ip: ip
          regionName: regionName
          userId: userId
          regionCode: regionCode
          subAccountId: subAccountId
          resInfos:
          - totalValue: 6
            usedValue: 1
            allocatedValue: 0
            resCode: resCode
          - totalValue: 6
            usedValue: 1
            allocatedValue: 0
            resCode: resCode
          clusterName: clusterName
          az: az
          productTypeCode: productTypeCode
        - projectList:
          - projectName: projectName
            projectId: projectId
          - projectName: projectName
            projectId: projectId
          clusterType: clusterType
          machineTypeName: machineTypeName
          machineTypeCode: machineTypeCode
          ip: ip
          regionName: regionName
          userId: userId
          regionCode: regionCode
          subAccountId: subAccountId
          resInfos:
          - totalValue: 6
            usedValue: 1
            allocatedValue: 0
            resCode: resCode
          - totalValue: 6
            usedValue: 1
            allocatedValue: 0
            resCode: resCode
          clusterName: clusterName
          az: az
          productTypeCode: productTypeCode
        message: message
        status: 5
      properties:
        message:
          type: string
        result:
          items:
            $ref: '#/components/schemas/commonIaasResource'
          type: array
        status:
          format: int32
          type: integer
      type: object
    notificationAddContactToGroupRequest:
      properties:
        contacts:
          items:
            $ref: '#/components/schemas/notificationDescribeContactResponse'
          type: array
      type: object
    notificationCreateContactGroupRequest:
      properties:
        contacts:
          items:
            $ref: '#/components/schemas/notificationDescribeContactResponse'
          type: array
        name:
          type: string
      type: object
    notificationDescribeContactGroupResponse:
      example:
        name: name
        id: id
        user: user
        contacts:
        - phone: phone
          name: name
          id: id
          type: type
          email: email
        - phone: phone
          name: name
          id: id
          type: type
          email: email
        tenant: tenant
      properties:
        contacts:
          items:
            $ref: '#/components/schemas/notificationDescribeContactResponse'
          type: array
        id:
          type: string
        name:
          type: string
        tenant:
          type: string
        user:
          type: string
      type: object
    notificationDescribeContactResponse:
      example:
        phone: phone
        name: name
        id: id
        type: type
        email: email
      properties:
        email:
          type: string
        id:
          type: string
        name:
          type: string
        phone:
          type: string
        type:
          type: string
      type: object
    notificationDescribeMessageResponse:
      example:
        error_message: error_message
        subject: subject
        created_at: created_at
        send_at: send_at
        id: id
        category: category
        contacts:
        - phone: phone
          name: name
          id: id
          type: type
          email: email
        - phone: phone
          name: name
          id: id
          type: type
          email: email
        content: content
        status: status
      properties:
        category:
          type: string
        contacts:
          items:
            $ref: '#/components/schemas/notificationDescribeContactResponse'
          type: array
        content:
          type: string
        created_at:
          type: string
        error_message:
          type: string
        id:
          type: string
        send_at:
          type: string
        status:
          type: string
        subject:
          type: string
      type: object
    notificationListContactGroupResponse:
      example:
        total: 6
        count: 0
        content:
        - name: name
          id: id
          user: user
          contacts:
          - phone: phone
            name: name
            id: id
            type: type
            email: email
          - phone: phone
            name: name
            id: id
            type: type
            email: email
          tenant: tenant
        - name: name
          id: id
          user: user
          contacts:
          - phone: phone
            name: name
            id: id
            type: type
            email: email
          - phone: phone
            name: name
            id: id
            type: type
            email: email
          tenant: tenant
      properties:
        content:
          items:
            $ref: '#/components/schemas/notificationDescribeContactGroupResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    notificationListMessageResponse:
      example:
        total: 6
        count: 0
        content:
        - error_message: error_message
          subject: subject
          created_at: created_at
          send_at: send_at
          id: id
          category: category
          contacts:
          - phone: phone
            name: name
            id: id
            type: type
            email: email
          - phone: phone
            name: name
            id: id
            type: type
            email: email
          content: content
          status: status
        - error_message: error_message
          subject: subject
          created_at: created_at
          send_at: send_at
          id: id
          category: category
          contacts:
          - phone: phone
            name: name
            id: id
            type: type
            email: email
          - phone: phone
            name: name
            id: id
            type: type
            email: email
          content: content
          status: status
      properties:
        content:
          items:
            $ref: '#/components/schemas/notificationDescribeMessageResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    opsAddCommentResponse:
      properties:
        content:
          type: string
        id:
          type: string
        sender:
          type: string
        ticket:
          type: string
      type: object
    opsCallbackResponse:
      properties:
        result:
          type: string
      type: object
    opsCountCloudmgrComponentResponse:
      properties:
        health:
          format: int32
          type: integer
        sum:
          format: int32
          type: integer
        unhealth:
          format: int32
          type: integer
      type: object
    opsCreateAlertInfoResponse:
      type: object
    opsCreateBalanceAccountResponse:
      properties:
        id:
          type: string
      type: object
    opsCreateSilenceRequest:
      properties:
        comment:
          type: string
        end_at:
          type: string
        matcher:
          items:
            $ref: '#/components/schemas/opsMatcher'
          type: array
        start_at:
          type: string
      type: object
    opsCreateSilenceResponse:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    opsCreateTicketResponse:
      properties:
        id:
          type: string
      type: object
    opsCreateTransactionResponse:
      properties:
        amount:
          type: string
        id:
          type: string
        order_num:
          type: string
        qr_code:
          type: string
      type: object
    opsDeleteSilenceResponse:
      type: object
    opsDescribeAggregateBillingResponse:
      properties:
        agg_dimension:
          type: string
        fee:
          format: double
          type: number
        iaas_resource_type:
          type: string
        resource_id:
          type: string
        resource_name:
          type: string
        service:
          type: string
        start_at:
          type: string
        vendor:
          type: string
        zone:
          type: string
      type: object
    opsDescribeAlertInfoResponse:
      example:
        alert_status: alert_status
        confirm_at: confirm_at
        process_at: process_at
        id: id
        create_at: create_at
        processor: processor
        alert_type: alert_type
        info: info
      properties:
        alert_status:
          type: string
        alert_type:
          type: string
        confirm_at:
          type: string
        create_at:
          type: string
        id:
          type: string
        info:
          type: string
        process_at:
          type: string
        processor:
          type: string
      type: object
    opsDescribeAlertResponse:
      example:
        starts_at: starts_at
        generator_url: generator_url
        updated_at: updated_at
        receivers:
        - receivers
        - receivers
        fingerprint: fingerprint
        annotations: '{}'
        ends_at: ends_at
        labels: '{}'
        status: status
      properties:
        annotations:
          properties: {}
          type: object
        ends_at:
          type: string
        fingerprint:
          type: string
        generator_url:
          type: string
        labels:
          properties: {}
          type: object
        receivers:
          items:
            type: string
          type: array
        starts_at:
          type: string
        status:
          type: string
        updated_at:
          type: string
      type: object
    opsDescribeBalanceAccountResponse:
      properties:
        balance:
          type: string
        id:
          type: string
        tenant:
          type: string
        tenant_name:
          type: string
      type: object
    opsDescribeBucketInfoResponse:
      properties:
        access_key_id:
          type: string
        bucket_names:
          items:
            type: string
          type: array
        endpoint:
          type: string
        https:
          format: boolean
          type: boolean
        provider:
          type: string
        region:
          type: string
        secret_access_key:
          type: string
        service:
          type: string
      type: object
    opsDescribeCloudmgrComponentResponse:
      properties:
        component:
          type: string
        instance:
          type: string
        status:
          type: string
      type: object
    opsDescribeCommentResponse:
      properties:
        content:
          type: string
        createdAt:
          type: string
        id:
          type: string
        sender_id:
          type: string
        sender_name:
          type: string
      type: object
    opsDescribeMaintenanceUserResponse:
      properties:
        admin:
          format: boolean
          type: boolean
        created_at:
          type: string
        destroyed_at:
          type: string
        email:
          type: string
        enabled:
          format: boolean
          type: boolean
        expired_at:
          type: string
        external:
          format: boolean
          type: boolean
        given_name:
          type: string
        id:
          type: string
        locked:
          format: boolean
          type: boolean
        password_expired_at:
          type: string
        supervisor:
          format: boolean
          type: boolean
        surname:
          type: string
        username:
          type: string
      type: object
    opsDescribeOpeningBankResponse:
      properties:
        account_name:
          type: string
        account_number:
          type: string
        bank_swift_code:
          type: string
        opening_bank:
          type: string
      type: object
    opsDescribeResourcePriceResponse:
      properties:
        activated_price:
          format: double
          type: number
        createAt:
          type: string
        deactivated_price:
          format: double
          type: number
        iaas_charge_type:
          type: string
        iaas_resource_type:
          type: string
        id:
          type: string
        resource_config_name:
          type: string
        unit:
          type: string
        valid:
          format: boolean
          type: boolean
        vendor:
          type: string
        zone:
          type: string
      type: object
    opsDescribeSilenceResponse:
      example:
        create_by: create_by
        end_at: end_at
        comment: comment
        id: id
        matcher:
        - equal: true
          regex: true
          name: name
          value: value
        - equal: true
          regex: true
          name: name
          value: value
        start_at: start_at
        status: status
      properties:
        comment:
          type: string
        create_by:
          type: string
        end_at:
          type: string
        id:
          type: string
        matcher:
          items:
            $ref: '#/components/schemas/opsMatcher'
          type: array
        start_at:
          type: string
        status:
          type: string
      type: object
    opsDescribeTicketDetailResponse:
      properties:
        attachments:
          items:
            type: string
          type: array
        createdAt:
          type: string
        creator_id:
          type: string
        creator_name:
          type: string
        description:
          type: string
        id:
          type: string
        resource:
          items:
            type: string
          type: array
        state:
          type: string
        tenant:
          type: string
        title:
          type: string
      type: object
    opsDescribeTicketResponse:
      properties:
        createdAt:
          type: string
        creator_name:
          type: string
        description:
          type: string
        id:
          type: string
        state:
          type: string
        tenant:
          type: string
        title:
          type: string
      type: object
    opsDescribeTransactionResponse:
      properties:
        amount:
          type: string
        id:
          type: string
        order_num:
          type: string
        qr_code:
          type: string
        status:
          type: string
        tenant:
          type: string
        tenant_name:
          type: string
        transaction_channel:
          type: string
        transaction_date:
          type: string
        transaction_source:
          type: string
        transaction_type:
          type: string
      type: object
    opsListAggregateBillingResponse:
      properties:
        content:
          items:
            $ref: '#/components/schemas/opsDescribeAggregateBillingResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    opsListAlertInfoResponse:
      example:
        total: 6
        count: 0
        content:
        - alert_status: alert_status
          confirm_at: confirm_at
          process_at: process_at
          id: id
          create_at: create_at
          processor: processor
          alert_type: alert_type
          info: info
        - alert_status: alert_status
          confirm_at: confirm_at
          process_at: process_at
          id: id
          create_at: create_at
          processor: processor
          alert_type: alert_type
          info: info
      properties:
        content:
          items:
            $ref: '#/components/schemas/opsDescribeAlertInfoResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    opsListAlertResponse:
      example:
        result:
        - starts_at: starts_at
          generator_url: generator_url
          updated_at: updated_at
          receivers:
          - receivers
          - receivers
          fingerprint: fingerprint
          annotations: '{}'
          ends_at: ends_at
          labels: '{}'
          status: status
        - starts_at: starts_at
          generator_url: generator_url
          updated_at: updated_at
          receivers:
          - receivers
          - receivers
          fingerprint: fingerprint
          annotations: '{}'
          ends_at: ends_at
          labels: '{}'
          status: status
      properties:
        result:
          items:
            $ref: '#/components/schemas/opsDescribeAlertResponse'
          type: array
      type: object
    opsListBucketInfoResponse:
      properties:
        bucket_info:
          items:
            $ref: '#/components/schemas/opsDescribeBucketInfoResponse'
          type: array
      type: object
    opsListCloudmgrComponentResponse:
      properties:
        content:
          items:
            $ref: '#/components/schemas/opsDescribeCloudmgrComponentResponse'
          type: array
      type: object
    opsListCommentResponse:
      properties:
        content:
          items:
            $ref: '#/components/schemas/opsDescribeCommentResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    opsListMaintenanceUserResponse:
      properties:
        content:
          items:
            $ref: '#/components/schemas/opsDescribeMaintenanceUserResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    opsListOpeningBankResponse:
      properties:
        content:
          items:
            $ref: '#/components/schemas/opsDescribeOpeningBankResponse'
          type: array
      type: object
    opsListResourcePriceResponse:
      properties:
        content:
          items:
            $ref: '#/components/schemas/opsDescribeResourcePriceResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    opsListSilenceResponse:
      example:
        content:
        - create_by: create_by
          end_at: end_at
          comment: comment
          id: id
          matcher:
          - equal: true
            regex: true
            name: name
            value: value
          - equal: true
            regex: true
            name: name
            value: value
          start_at: start_at
          status: status
        - create_by: create_by
          end_at: end_at
          comment: comment
          id: id
          matcher:
          - equal: true
            regex: true
            name: name
            value: value
          - equal: true
            regex: true
            name: name
            value: value
          start_at: start_at
          status: status
      properties:
        content:
          items:
            $ref: '#/components/schemas/opsDescribeSilenceResponse'
          type: array
      type: object
    opsListTicketResponse:
      properties:
        content:
          items:
            $ref: '#/components/schemas/opsDescribeTicketResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    opsListTransactionResponse:
      properties:
        content:
          items:
            $ref: '#/components/schemas/opsDescribeTransactionResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    opsMatcher:
      example:
        equal: true
        regex: true
        name: name
        value: value
      properties:
        equal:
          format: boolean
          type: boolean
        name:
          type: string
        regex:
          format: boolean
          type: boolean
        value:
          type: string
      type: object
    opsMeteringResource:
      properties:
        id:
          type: string
        region:
          type: string
        resource_config_name:
          type: string
        resource_name:
          type: string
        resource_type:
          type: string
        size:
          format: int32
          type: integer
        status:
          type: string
        zone:
          type: string
      type: object
    opsModifySilenceRequest:
      properties:
        comment:
          type: string
        end_at:
          type: string
        id:
          type: string
        matcher:
          items:
            $ref: '#/components/schemas/opsMatcher'
          type: array
        start_at:
          type: string
      type: object
    opsModifySilenceResponse:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    opsMonitorResponse:
      type: object
    opsStartMeteringResponse:
      type: object
    opsStopMeteringResponse:
      type: object
    opsSumBillingResponse:
      properties:
        sum_fee:
          type: string
      type: object
    vmalertCreateAlertRuleRequest:
      properties:
        contact_groups:
          items:
            type: string
          type: array
        duration:
          format: int32
          type: integer
        exceed:
          format: boolean
          type: boolean
        metrics:
          type: string
        value:
          format: double
          type: number
      type: object
    vmalertDescribeAlertRuleResponse:
      example:
        duration: 0
        updated_at: updated_at
        service: service
        exceed: true
        contact_groups:
        - contact_groups
        - contact_groups
        id: id
        metrics: metrics
        value: 6.027456183070403
      properties:
        contact_groups:
          items:
            type: string
          type: array
        duration:
          format: int32
          type: integer
        exceed:
          format: boolean
          type: boolean
        id:
          type: string
        metrics:
          type: string
        service:
          type: string
        updated_at:
          type: string
        value:
          format: double
          type: number
      type: object
    vmalertListAlertRuleResponse:
      example:
        total: 5
        count: 1
        content:
        - duration: 0
          updated_at: updated_at
          service: service
          exceed: true
          contact_groups:
          - contact_groups
          - contact_groups
          id: id
          metrics: metrics
          value: 6.027456183070403
        - duration: 0
          updated_at: updated_at
          service: service
          exceed: true
          contact_groups:
          - contact_groups
          - contact_groups
          id: id
          metrics: metrics
          value: 6.027456183070403
      properties:
        content:
          items:
            $ref: '#/components/schemas/vmalertDescribeAlertRuleResponse'
          type: array
        count:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
  securitySchemes:
    oauth2:
      flows:
        password:
          scopes:
            ROLE_SUPERVISOR: login as supervisor
            ROLE_USER: login as user
          tokenUrl: http://localhost:8000/account/oauth/token
      type: oauth2
x-original-swagger-version: "2.0"
