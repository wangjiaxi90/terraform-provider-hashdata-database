/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreListServiceStatusesResponse struct for CoreListServiceStatusesResponse
type CoreListServiceStatusesResponse struct {
	Statuses *[]string `json:"statuses,omitempty"`
}

// NewCoreListServiceStatusesResponse instantiates a new CoreListServiceStatusesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreListServiceStatusesResponse() *CoreListServiceStatusesResponse {
	this := CoreListServiceStatusesResponse{}
	return &this
}

// NewCoreListServiceStatusesResponseWithDefaults instantiates a new CoreListServiceStatusesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreListServiceStatusesResponseWithDefaults() *CoreListServiceStatusesResponse {
	this := CoreListServiceStatusesResponse{}
	return &this
}

// GetStatuses returns the Statuses field value if set, zero value otherwise.
func (o *CoreListServiceStatusesResponse) GetStatuses() []string {
	if o == nil || o.Statuses == nil {
		var ret []string
		return ret
	}
	return *o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreListServiceStatusesResponse) GetStatusesOk() (*[]string, bool) {
	if o == nil || o.Statuses == nil {
		return nil, false
	}
	return o.Statuses, true
}

// HasStatuses returns a boolean if a field has been set.
func (o *CoreListServiceStatusesResponse) HasStatuses() bool {
	if o != nil && o.Statuses != nil {
		return true
	}

	return false
}

// SetStatuses gets a reference to the given []string and assigns it to the Statuses field.
func (o *CoreListServiceStatusesResponse) SetStatuses(v []string) {
	o.Statuses = &v
}

func (o CoreListServiceStatusesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Statuses != nil {
		toSerialize["statuses"] = o.Statuses
	}
	return json.Marshal(toSerialize)
}

type NullableCoreListServiceStatusesResponse struct {
	value *CoreListServiceStatusesResponse
	isSet bool
}

func (v NullableCoreListServiceStatusesResponse) Get() *CoreListServiceStatusesResponse {
	return v.value
}

func (v *NullableCoreListServiceStatusesResponse) Set(val *CoreListServiceStatusesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreListServiceStatusesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreListServiceStatusesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreListServiceStatusesResponse(val *CoreListServiceStatusesResponse) *NullableCoreListServiceStatusesResponse {
	return &NullableCoreListServiceStatusesResponse{value: val, isSet: true}
}

func (v NullableCoreListServiceStatusesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreListServiceStatusesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


