/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// OpsDescribeAlertResponse struct for OpsDescribeAlertResponse
type OpsDescribeAlertResponse struct {
	Annotations *map[string]interface{} `json:"annotations,omitempty"`
	EndsAt *string `json:"ends_at,omitempty"`
	Fingerprint *string `json:"fingerprint,omitempty"`
	GeneratorUrl *string `json:"generator_url,omitempty"`
	Labels *map[string]interface{} `json:"labels,omitempty"`
	Receivers *[]string `json:"receivers,omitempty"`
	StartsAt *string `json:"starts_at,omitempty"`
	Status *string `json:"status,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewOpsDescribeAlertResponse instantiates a new OpsDescribeAlertResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsDescribeAlertResponse() *OpsDescribeAlertResponse {
	this := OpsDescribeAlertResponse{}
	return &this
}

// NewOpsDescribeAlertResponseWithDefaults instantiates a new OpsDescribeAlertResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsDescribeAlertResponseWithDefaults() *OpsDescribeAlertResponse {
	this := OpsDescribeAlertResponse{}
	return &this
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *OpsDescribeAlertResponse) GetAnnotations() map[string]interface{} {
	if o == nil || o.Annotations == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeAlertResponse) GetAnnotationsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Annotations == nil {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *OpsDescribeAlertResponse) HasAnnotations() bool {
	if o != nil && o.Annotations != nil {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given map[string]interface{} and assigns it to the Annotations field.
func (o *OpsDescribeAlertResponse) SetAnnotations(v map[string]interface{}) {
	o.Annotations = &v
}

// GetEndsAt returns the EndsAt field value if set, zero value otherwise.
func (o *OpsDescribeAlertResponse) GetEndsAt() string {
	if o == nil || o.EndsAt == nil {
		var ret string
		return ret
	}
	return *o.EndsAt
}

// GetEndsAtOk returns a tuple with the EndsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeAlertResponse) GetEndsAtOk() (*string, bool) {
	if o == nil || o.EndsAt == nil {
		return nil, false
	}
	return o.EndsAt, true
}

// HasEndsAt returns a boolean if a field has been set.
func (o *OpsDescribeAlertResponse) HasEndsAt() bool {
	if o != nil && o.EndsAt != nil {
		return true
	}

	return false
}

// SetEndsAt gets a reference to the given string and assigns it to the EndsAt field.
func (o *OpsDescribeAlertResponse) SetEndsAt(v string) {
	o.EndsAt = &v
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *OpsDescribeAlertResponse) GetFingerprint() string {
	if o == nil || o.Fingerprint == nil {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeAlertResponse) GetFingerprintOk() (*string, bool) {
	if o == nil || o.Fingerprint == nil {
		return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *OpsDescribeAlertResponse) HasFingerprint() bool {
	if o != nil && o.Fingerprint != nil {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *OpsDescribeAlertResponse) SetFingerprint(v string) {
	o.Fingerprint = &v
}

// GetGeneratorUrl returns the GeneratorUrl field value if set, zero value otherwise.
func (o *OpsDescribeAlertResponse) GetGeneratorUrl() string {
	if o == nil || o.GeneratorUrl == nil {
		var ret string
		return ret
	}
	return *o.GeneratorUrl
}

// GetGeneratorUrlOk returns a tuple with the GeneratorUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeAlertResponse) GetGeneratorUrlOk() (*string, bool) {
	if o == nil || o.GeneratorUrl == nil {
		return nil, false
	}
	return o.GeneratorUrl, true
}

// HasGeneratorUrl returns a boolean if a field has been set.
func (o *OpsDescribeAlertResponse) HasGeneratorUrl() bool {
	if o != nil && o.GeneratorUrl != nil {
		return true
	}

	return false
}

// SetGeneratorUrl gets a reference to the given string and assigns it to the GeneratorUrl field.
func (o *OpsDescribeAlertResponse) SetGeneratorUrl(v string) {
	o.GeneratorUrl = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *OpsDescribeAlertResponse) GetLabels() map[string]interface{} {
	if o == nil || o.Labels == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeAlertResponse) GetLabelsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *OpsDescribeAlertResponse) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *OpsDescribeAlertResponse) SetLabels(v map[string]interface{}) {
	o.Labels = &v
}

// GetReceivers returns the Receivers field value if set, zero value otherwise.
func (o *OpsDescribeAlertResponse) GetReceivers() []string {
	if o == nil || o.Receivers == nil {
		var ret []string
		return ret
	}
	return *o.Receivers
}

// GetReceiversOk returns a tuple with the Receivers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeAlertResponse) GetReceiversOk() (*[]string, bool) {
	if o == nil || o.Receivers == nil {
		return nil, false
	}
	return o.Receivers, true
}

// HasReceivers returns a boolean if a field has been set.
func (o *OpsDescribeAlertResponse) HasReceivers() bool {
	if o != nil && o.Receivers != nil {
		return true
	}

	return false
}

// SetReceivers gets a reference to the given []string and assigns it to the Receivers field.
func (o *OpsDescribeAlertResponse) SetReceivers(v []string) {
	o.Receivers = &v
}

// GetStartsAt returns the StartsAt field value if set, zero value otherwise.
func (o *OpsDescribeAlertResponse) GetStartsAt() string {
	if o == nil || o.StartsAt == nil {
		var ret string
		return ret
	}
	return *o.StartsAt
}

// GetStartsAtOk returns a tuple with the StartsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeAlertResponse) GetStartsAtOk() (*string, bool) {
	if o == nil || o.StartsAt == nil {
		return nil, false
	}
	return o.StartsAt, true
}

// HasStartsAt returns a boolean if a field has been set.
func (o *OpsDescribeAlertResponse) HasStartsAt() bool {
	if o != nil && o.StartsAt != nil {
		return true
	}

	return false
}

// SetStartsAt gets a reference to the given string and assigns it to the StartsAt field.
func (o *OpsDescribeAlertResponse) SetStartsAt(v string) {
	o.StartsAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OpsDescribeAlertResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeAlertResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OpsDescribeAlertResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OpsDescribeAlertResponse) SetStatus(v string) {
	o.Status = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OpsDescribeAlertResponse) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsDescribeAlertResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OpsDescribeAlertResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *OpsDescribeAlertResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o OpsDescribeAlertResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Annotations != nil {
		toSerialize["annotations"] = o.Annotations
	}
	if o.EndsAt != nil {
		toSerialize["ends_at"] = o.EndsAt
	}
	if o.Fingerprint != nil {
		toSerialize["fingerprint"] = o.Fingerprint
	}
	if o.GeneratorUrl != nil {
		toSerialize["generator_url"] = o.GeneratorUrl
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Receivers != nil {
		toSerialize["receivers"] = o.Receivers
	}
	if o.StartsAt != nil {
		toSerialize["starts_at"] = o.StartsAt
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableOpsDescribeAlertResponse struct {
	value *OpsDescribeAlertResponse
	isSet bool
}

func (v NullableOpsDescribeAlertResponse) Get() *OpsDescribeAlertResponse {
	return v.value
}

func (v *NullableOpsDescribeAlertResponse) Set(val *OpsDescribeAlertResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsDescribeAlertResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsDescribeAlertResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsDescribeAlertResponse(val *OpsDescribeAlertResponse) *NullableOpsDescribeAlertResponse {
	return &NullableOpsDescribeAlertResponse{value: val, isSet: true}
}

func (v NullableOpsDescribeAlertResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsDescribeAlertResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


