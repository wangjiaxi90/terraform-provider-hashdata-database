/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreDescribeInstanceTypeResponse struct for CoreDescribeInstanceTypeResponse
type CoreDescribeInstanceTypeResponse struct {
	Arch *string `json:"arch,omitempty"`
	CompatibleVolumeType *[]string `json:"compatible_volume_type,omitempty"`
	Cpu *int32 `json:"cpu,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	Id *string `json:"id,omitempty"`
	InstanceClass *string `json:"instance_class,omitempty"`
	InstanceType *string `json:"instance_type,omitempty"`
	InstanceTypeGroup *string `json:"instance_type_group,omitempty"`
	Memory *int32 `json:"memory,omitempty"`
	Name *string `json:"name,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	Zone *[]string `json:"zone,omitempty"`
}

// NewCoreDescribeInstanceTypeResponse instantiates a new CoreDescribeInstanceTypeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreDescribeInstanceTypeResponse() *CoreDescribeInstanceTypeResponse {
	this := CoreDescribeInstanceTypeResponse{}
	return &this
}

// NewCoreDescribeInstanceTypeResponseWithDefaults instantiates a new CoreDescribeInstanceTypeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreDescribeInstanceTypeResponseWithDefaults() *CoreDescribeInstanceTypeResponse {
	this := CoreDescribeInstanceTypeResponse{}
	return &this
}

// GetArch returns the Arch field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetArch() string {
	if o == nil || o.Arch == nil {
		var ret string
		return ret
	}
	return *o.Arch
}

// GetArchOk returns a tuple with the Arch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetArchOk() (*string, bool) {
	if o == nil || o.Arch == nil {
		return nil, false
	}
	return o.Arch, true
}

// HasArch returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasArch() bool {
	if o != nil && o.Arch != nil {
		return true
	}

	return false
}

// SetArch gets a reference to the given string and assigns it to the Arch field.
func (o *CoreDescribeInstanceTypeResponse) SetArch(v string) {
	o.Arch = &v
}

// GetCompatibleVolumeType returns the CompatibleVolumeType field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetCompatibleVolumeType() []string {
	if o == nil || o.CompatibleVolumeType == nil {
		var ret []string
		return ret
	}
	return *o.CompatibleVolumeType
}

// GetCompatibleVolumeTypeOk returns a tuple with the CompatibleVolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetCompatibleVolumeTypeOk() (*[]string, bool) {
	if o == nil || o.CompatibleVolumeType == nil {
		return nil, false
	}
	return o.CompatibleVolumeType, true
}

// HasCompatibleVolumeType returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasCompatibleVolumeType() bool {
	if o != nil && o.CompatibleVolumeType != nil {
		return true
	}

	return false
}

// SetCompatibleVolumeType gets a reference to the given []string and assigns it to the CompatibleVolumeType field.
func (o *CoreDescribeInstanceTypeResponse) SetCompatibleVolumeType(v []string) {
	o.CompatibleVolumeType = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetCpu() int32 {
	if o == nil || o.Cpu == nil {
		var ret int32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetCpuOk() (*int32, bool) {
	if o == nil || o.Cpu == nil {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasCpu() bool {
	if o != nil && o.Cpu != nil {
		return true
	}

	return false
}

// SetCpu gets a reference to the given int32 and assigns it to the Cpu field.
func (o *CoreDescribeInstanceTypeResponse) SetCpu(v int32) {
	o.Cpu = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CoreDescribeInstanceTypeResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CoreDescribeInstanceTypeResponse) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CoreDescribeInstanceTypeResponse) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CoreDescribeInstanceTypeResponse) SetId(v string) {
	o.Id = &v
}

// GetInstanceClass returns the InstanceClass field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetInstanceClass() string {
	if o == nil || o.InstanceClass == nil {
		var ret string
		return ret
	}
	return *o.InstanceClass
}

// GetInstanceClassOk returns a tuple with the InstanceClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetInstanceClassOk() (*string, bool) {
	if o == nil || o.InstanceClass == nil {
		return nil, false
	}
	return o.InstanceClass, true
}

// HasInstanceClass returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasInstanceClass() bool {
	if o != nil && o.InstanceClass != nil {
		return true
	}

	return false
}

// SetInstanceClass gets a reference to the given string and assigns it to the InstanceClass field.
func (o *CoreDescribeInstanceTypeResponse) SetInstanceClass(v string) {
	o.InstanceClass = &v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetInstanceType() string {
	if o == nil || o.InstanceType == nil {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetInstanceTypeOk() (*string, bool) {
	if o == nil || o.InstanceType == nil {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasInstanceType() bool {
	if o != nil && o.InstanceType != nil {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *CoreDescribeInstanceTypeResponse) SetInstanceType(v string) {
	o.InstanceType = &v
}

// GetInstanceTypeGroup returns the InstanceTypeGroup field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetInstanceTypeGroup() string {
	if o == nil || o.InstanceTypeGroup == nil {
		var ret string
		return ret
	}
	return *o.InstanceTypeGroup
}

// GetInstanceTypeGroupOk returns a tuple with the InstanceTypeGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetInstanceTypeGroupOk() (*string, bool) {
	if o == nil || o.InstanceTypeGroup == nil {
		return nil, false
	}
	return o.InstanceTypeGroup, true
}

// HasInstanceTypeGroup returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasInstanceTypeGroup() bool {
	if o != nil && o.InstanceTypeGroup != nil {
		return true
	}

	return false
}

// SetInstanceTypeGroup gets a reference to the given string and assigns it to the InstanceTypeGroup field.
func (o *CoreDescribeInstanceTypeResponse) SetInstanceTypeGroup(v string) {
	o.InstanceTypeGroup = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetMemory() int32 {
	if o == nil || o.Memory == nil {
		var ret int32
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetMemoryOk() (*int32, bool) {
	if o == nil || o.Memory == nil {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasMemory() bool {
	if o != nil && o.Memory != nil {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int32 and assigns it to the Memory field.
func (o *CoreDescribeInstanceTypeResponse) SetMemory(v int32) {
	o.Memory = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreDescribeInstanceTypeResponse) SetName(v string) {
	o.Name = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *CoreDescribeInstanceTypeResponse) SetVendor(v string) {
	o.Vendor = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *CoreDescribeInstanceTypeResponse) GetZone() []string {
	if o == nil || o.Zone == nil {
		var ret []string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeInstanceTypeResponse) GetZoneOk() (*[]string, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *CoreDescribeInstanceTypeResponse) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given []string and assigns it to the Zone field.
func (o *CoreDescribeInstanceTypeResponse) SetZone(v []string) {
	o.Zone = &v
}

func (o CoreDescribeInstanceTypeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Arch != nil {
		toSerialize["arch"] = o.Arch
	}
	if o.CompatibleVolumeType != nil {
		toSerialize["compatible_volume_type"] = o.CompatibleVolumeType
	}
	if o.Cpu != nil {
		toSerialize["cpu"] = o.Cpu
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InstanceClass != nil {
		toSerialize["instance_class"] = o.InstanceClass
	}
	if o.InstanceType != nil {
		toSerialize["instance_type"] = o.InstanceType
	}
	if o.InstanceTypeGroup != nil {
		toSerialize["instance_type_group"] = o.InstanceTypeGroup
	}
	if o.Memory != nil {
		toSerialize["memory"] = o.Memory
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Vendor != nil {
		toSerialize["vendor"] = o.Vendor
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	return json.Marshal(toSerialize)
}

type NullableCoreDescribeInstanceTypeResponse struct {
	value *CoreDescribeInstanceTypeResponse
	isSet bool
}

func (v NullableCoreDescribeInstanceTypeResponse) Get() *CoreDescribeInstanceTypeResponse {
	return v.value
}

func (v *NullableCoreDescribeInstanceTypeResponse) Set(val *CoreDescribeInstanceTypeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreDescribeInstanceTypeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreDescribeInstanceTypeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreDescribeInstanceTypeResponse(val *CoreDescribeInstanceTypeResponse) *NullableCoreDescribeInstanceTypeResponse {
	return &NullableCoreDescribeInstanceTypeResponse{value: val, isSet: true}
}

func (v NullableCoreDescribeInstanceTypeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreDescribeInstanceTypeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


