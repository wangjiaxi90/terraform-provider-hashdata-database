/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreCreateElasticIpRequest struct for CoreCreateElasticIpRequest
type CoreCreateElasticIpRequest struct {
	ByBandwidth *bool `json:"by_bandwidth,omitempty"`
	Count *int32 `json:"count,omitempty"`
	MaxBandWidth *int32 `json:"max_band_width,omitempty"`
	Name *string `json:"name,omitempty"`
	Region *string `json:"region,omitempty"`
	Tenant *string `json:"tenant,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
}

// NewCoreCreateElasticIpRequest instantiates a new CoreCreateElasticIpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCreateElasticIpRequest() *CoreCreateElasticIpRequest {
	this := CoreCreateElasticIpRequest{}
	return &this
}

// NewCoreCreateElasticIpRequestWithDefaults instantiates a new CoreCreateElasticIpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCreateElasticIpRequestWithDefaults() *CoreCreateElasticIpRequest {
	this := CoreCreateElasticIpRequest{}
	return &this
}

// GetByBandwidth returns the ByBandwidth field value if set, zero value otherwise.
func (o *CoreCreateElasticIpRequest) GetByBandwidth() bool {
	if o == nil || o.ByBandwidth == nil {
		var ret bool
		return ret
	}
	return *o.ByBandwidth
}

// GetByBandwidthOk returns a tuple with the ByBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateElasticIpRequest) GetByBandwidthOk() (*bool, bool) {
	if o == nil || o.ByBandwidth == nil {
		return nil, false
	}
	return o.ByBandwidth, true
}

// HasByBandwidth returns a boolean if a field has been set.
func (o *CoreCreateElasticIpRequest) HasByBandwidth() bool {
	if o != nil && o.ByBandwidth != nil {
		return true
	}

	return false
}

// SetByBandwidth gets a reference to the given bool and assigns it to the ByBandwidth field.
func (o *CoreCreateElasticIpRequest) SetByBandwidth(v bool) {
	o.ByBandwidth = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *CoreCreateElasticIpRequest) GetCount() int32 {
	if o == nil || o.Count == nil {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateElasticIpRequest) GetCountOk() (*int32, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *CoreCreateElasticIpRequest) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *CoreCreateElasticIpRequest) SetCount(v int32) {
	o.Count = &v
}

// GetMaxBandWidth returns the MaxBandWidth field value if set, zero value otherwise.
func (o *CoreCreateElasticIpRequest) GetMaxBandWidth() int32 {
	if o == nil || o.MaxBandWidth == nil {
		var ret int32
		return ret
	}
	return *o.MaxBandWidth
}

// GetMaxBandWidthOk returns a tuple with the MaxBandWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateElasticIpRequest) GetMaxBandWidthOk() (*int32, bool) {
	if o == nil || o.MaxBandWidth == nil {
		return nil, false
	}
	return o.MaxBandWidth, true
}

// HasMaxBandWidth returns a boolean if a field has been set.
func (o *CoreCreateElasticIpRequest) HasMaxBandWidth() bool {
	if o != nil && o.MaxBandWidth != nil {
		return true
	}

	return false
}

// SetMaxBandWidth gets a reference to the given int32 and assigns it to the MaxBandWidth field.
func (o *CoreCreateElasticIpRequest) SetMaxBandWidth(v int32) {
	o.MaxBandWidth = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreCreateElasticIpRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateElasticIpRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreCreateElasticIpRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreCreateElasticIpRequest) SetName(v string) {
	o.Name = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *CoreCreateElasticIpRequest) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateElasticIpRequest) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *CoreCreateElasticIpRequest) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *CoreCreateElasticIpRequest) SetRegion(v string) {
	o.Region = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *CoreCreateElasticIpRequest) GetTenant() string {
	if o == nil || o.Tenant == nil {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateElasticIpRequest) GetTenantOk() (*string, bool) {
	if o == nil || o.Tenant == nil {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *CoreCreateElasticIpRequest) HasTenant() bool {
	if o != nil && o.Tenant != nil {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *CoreCreateElasticIpRequest) SetTenant(v string) {
	o.Tenant = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *CoreCreateElasticIpRequest) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateElasticIpRequest) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *CoreCreateElasticIpRequest) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *CoreCreateElasticIpRequest) SetVendor(v string) {
	o.Vendor = &v
}

func (o CoreCreateElasticIpRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ByBandwidth != nil {
		toSerialize["by_bandwidth"] = o.ByBandwidth
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.MaxBandWidth != nil {
		toSerialize["max_band_width"] = o.MaxBandWidth
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.Tenant != nil {
		toSerialize["tenant"] = o.Tenant
	}
	if o.Vendor != nil {
		toSerialize["vendor"] = o.Vendor
	}
	return json.Marshal(toSerialize)
}

type NullableCoreCreateElasticIpRequest struct {
	value *CoreCreateElasticIpRequest
	isSet bool
}

func (v NullableCoreCreateElasticIpRequest) Get() *CoreCreateElasticIpRequest {
	return v.value
}

func (v *NullableCoreCreateElasticIpRequest) Set(val *CoreCreateElasticIpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCreateElasticIpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCreateElasticIpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCreateElasticIpRequest(val *CoreCreateElasticIpRequest) *NullableCoreCreateElasticIpRequest {
	return &NullableCoreCreateElasticIpRequest{value: val, isSet: true}
}

func (v NullableCoreCreateElasticIpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCreateElasticIpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


