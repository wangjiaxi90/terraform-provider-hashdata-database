/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreUpdateOssZoneConfigRequest struct for CoreUpdateOssZoneConfigRequest
type CoreUpdateOssZoneConfigRequest struct {
	AccessKeyId *string `json:"access_key_id,omitempty"`
	AccessKeySecret *string `json:"access_key_secret,omitempty"`
}

// NewCoreUpdateOssZoneConfigRequest instantiates a new CoreUpdateOssZoneConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreUpdateOssZoneConfigRequest() *CoreUpdateOssZoneConfigRequest {
	this := CoreUpdateOssZoneConfigRequest{}
	return &this
}

// NewCoreUpdateOssZoneConfigRequestWithDefaults instantiates a new CoreUpdateOssZoneConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreUpdateOssZoneConfigRequestWithDefaults() *CoreUpdateOssZoneConfigRequest {
	this := CoreUpdateOssZoneConfigRequest{}
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *CoreUpdateOssZoneConfigRequest) GetAccessKeyId() string {
	if o == nil || o.AccessKeyId == nil {
		var ret string
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateOssZoneConfigRequest) GetAccessKeyIdOk() (*string, bool) {
	if o == nil || o.AccessKeyId == nil {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *CoreUpdateOssZoneConfigRequest) HasAccessKeyId() bool {
	if o != nil && o.AccessKeyId != nil {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given string and assigns it to the AccessKeyId field.
func (o *CoreUpdateOssZoneConfigRequest) SetAccessKeyId(v string) {
	o.AccessKeyId = &v
}

// GetAccessKeySecret returns the AccessKeySecret field value if set, zero value otherwise.
func (o *CoreUpdateOssZoneConfigRequest) GetAccessKeySecret() string {
	if o == nil || o.AccessKeySecret == nil {
		var ret string
		return ret
	}
	return *o.AccessKeySecret
}

// GetAccessKeySecretOk returns a tuple with the AccessKeySecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateOssZoneConfigRequest) GetAccessKeySecretOk() (*string, bool) {
	if o == nil || o.AccessKeySecret == nil {
		return nil, false
	}
	return o.AccessKeySecret, true
}

// HasAccessKeySecret returns a boolean if a field has been set.
func (o *CoreUpdateOssZoneConfigRequest) HasAccessKeySecret() bool {
	if o != nil && o.AccessKeySecret != nil {
		return true
	}

	return false
}

// SetAccessKeySecret gets a reference to the given string and assigns it to the AccessKeySecret field.
func (o *CoreUpdateOssZoneConfigRequest) SetAccessKeySecret(v string) {
	o.AccessKeySecret = &v
}

func (o CoreUpdateOssZoneConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKeyId != nil {
		toSerialize["access_key_id"] = o.AccessKeyId
	}
	if o.AccessKeySecret != nil {
		toSerialize["access_key_secret"] = o.AccessKeySecret
	}
	return json.Marshal(toSerialize)
}

type NullableCoreUpdateOssZoneConfigRequest struct {
	value *CoreUpdateOssZoneConfigRequest
	isSet bool
}

func (v NullableCoreUpdateOssZoneConfigRequest) Get() *CoreUpdateOssZoneConfigRequest {
	return v.value
}

func (v *NullableCoreUpdateOssZoneConfigRequest) Set(val *CoreUpdateOssZoneConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreUpdateOssZoneConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreUpdateOssZoneConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreUpdateOssZoneConfigRequest(val *CoreUpdateOssZoneConfigRequest) *NullableCoreUpdateOssZoneConfigRequest {
	return &NullableCoreUpdateOssZoneConfigRequest{value: val, isSet: true}
}

func (v NullableCoreUpdateOssZoneConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreUpdateOssZoneConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


