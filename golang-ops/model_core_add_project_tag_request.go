/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreAddProjectTagRequest struct for CoreAddProjectTagRequest
type CoreAddProjectTagRequest struct {
	Id *string `json:"id,omitempty"`
	Property *string `json:"property,omitempty"`
	PropertyKey *string `json:"property_key,omitempty"`
}

// NewCoreAddProjectTagRequest instantiates a new CoreAddProjectTagRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreAddProjectTagRequest() *CoreAddProjectTagRequest {
	this := CoreAddProjectTagRequest{}
	return &this
}

// NewCoreAddProjectTagRequestWithDefaults instantiates a new CoreAddProjectTagRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreAddProjectTagRequestWithDefaults() *CoreAddProjectTagRequest {
	this := CoreAddProjectTagRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreAddProjectTagRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreAddProjectTagRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreAddProjectTagRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CoreAddProjectTagRequest) SetId(v string) {
	o.Id = &v
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *CoreAddProjectTagRequest) GetProperty() string {
	if o == nil || o.Property == nil {
		var ret string
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreAddProjectTagRequest) GetPropertyOk() (*string, bool) {
	if o == nil || o.Property == nil {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *CoreAddProjectTagRequest) HasProperty() bool {
	if o != nil && o.Property != nil {
		return true
	}

	return false
}

// SetProperty gets a reference to the given string and assigns it to the Property field.
func (o *CoreAddProjectTagRequest) SetProperty(v string) {
	o.Property = &v
}

// GetPropertyKey returns the PropertyKey field value if set, zero value otherwise.
func (o *CoreAddProjectTagRequest) GetPropertyKey() string {
	if o == nil || o.PropertyKey == nil {
		var ret string
		return ret
	}
	return *o.PropertyKey
}

// GetPropertyKeyOk returns a tuple with the PropertyKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreAddProjectTagRequest) GetPropertyKeyOk() (*string, bool) {
	if o == nil || o.PropertyKey == nil {
		return nil, false
	}
	return o.PropertyKey, true
}

// HasPropertyKey returns a boolean if a field has been set.
func (o *CoreAddProjectTagRequest) HasPropertyKey() bool {
	if o != nil && o.PropertyKey != nil {
		return true
	}

	return false
}

// SetPropertyKey gets a reference to the given string and assigns it to the PropertyKey field.
func (o *CoreAddProjectTagRequest) SetPropertyKey(v string) {
	o.PropertyKey = &v
}

func (o CoreAddProjectTagRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Property != nil {
		toSerialize["property"] = o.Property
	}
	if o.PropertyKey != nil {
		toSerialize["property_key"] = o.PropertyKey
	}
	return json.Marshal(toSerialize)
}

type NullableCoreAddProjectTagRequest struct {
	value *CoreAddProjectTagRequest
	isSet bool
}

func (v NullableCoreAddProjectTagRequest) Get() *CoreAddProjectTagRequest {
	return v.value
}

func (v *NullableCoreAddProjectTagRequest) Set(val *CoreAddProjectTagRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreAddProjectTagRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreAddProjectTagRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreAddProjectTagRequest(val *CoreAddProjectTagRequest) *NullableCoreAddProjectTagRequest {
	return &NullableCoreAddProjectTagRequest{value: val, isSet: true}
}

func (v NullableCoreAddProjectTagRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreAddProjectTagRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


