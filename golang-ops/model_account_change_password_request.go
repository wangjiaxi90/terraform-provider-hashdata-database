/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// AccountChangePasswordRequest struct for AccountChangePasswordRequest
type AccountChangePasswordRequest struct {
	NewPassword *string `json:"new_password,omitempty"`
	OldPassword *string `json:"old_password,omitempty"`
}

// NewAccountChangePasswordRequest instantiates a new AccountChangePasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountChangePasswordRequest() *AccountChangePasswordRequest {
	this := AccountChangePasswordRequest{}
	return &this
}

// NewAccountChangePasswordRequestWithDefaults instantiates a new AccountChangePasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountChangePasswordRequestWithDefaults() *AccountChangePasswordRequest {
	this := AccountChangePasswordRequest{}
	return &this
}

// GetNewPassword returns the NewPassword field value if set, zero value otherwise.
func (o *AccountChangePasswordRequest) GetNewPassword() string {
	if o == nil || o.NewPassword == nil {
		var ret string
		return ret
	}
	return *o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountChangePasswordRequest) GetNewPasswordOk() (*string, bool) {
	if o == nil || o.NewPassword == nil {
		return nil, false
	}
	return o.NewPassword, true
}

// HasNewPassword returns a boolean if a field has been set.
func (o *AccountChangePasswordRequest) HasNewPassword() bool {
	if o != nil && o.NewPassword != nil {
		return true
	}

	return false
}

// SetNewPassword gets a reference to the given string and assigns it to the NewPassword field.
func (o *AccountChangePasswordRequest) SetNewPassword(v string) {
	o.NewPassword = &v
}

// GetOldPassword returns the OldPassword field value if set, zero value otherwise.
func (o *AccountChangePasswordRequest) GetOldPassword() string {
	if o == nil || o.OldPassword == nil {
		var ret string
		return ret
	}
	return *o.OldPassword
}

// GetOldPasswordOk returns a tuple with the OldPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountChangePasswordRequest) GetOldPasswordOk() (*string, bool) {
	if o == nil || o.OldPassword == nil {
		return nil, false
	}
	return o.OldPassword, true
}

// HasOldPassword returns a boolean if a field has been set.
func (o *AccountChangePasswordRequest) HasOldPassword() bool {
	if o != nil && o.OldPassword != nil {
		return true
	}

	return false
}

// SetOldPassword gets a reference to the given string and assigns it to the OldPassword field.
func (o *AccountChangePasswordRequest) SetOldPassword(v string) {
	o.OldPassword = &v
}

func (o AccountChangePasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NewPassword != nil {
		toSerialize["new_password"] = o.NewPassword
	}
	if o.OldPassword != nil {
		toSerialize["old_password"] = o.OldPassword
	}
	return json.Marshal(toSerialize)
}

type NullableAccountChangePasswordRequest struct {
	value *AccountChangePasswordRequest
	isSet bool
}

func (v NullableAccountChangePasswordRequest) Get() *AccountChangePasswordRequest {
	return v.value
}

func (v *NullableAccountChangePasswordRequest) Set(val *AccountChangePasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountChangePasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountChangePasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountChangePasswordRequest(val *AccountChangePasswordRequest) *NullableAccountChangePasswordRequest {
	return &NullableAccountChangePasswordRequest{value: val, isSet: true}
}

func (v NullableAccountChangePasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountChangePasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


