/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// AccountModifyUserRequest struct for AccountModifyUserRequest
type AccountModifyUserRequest struct {
	Email *string `json:"email,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	ExpiredAt *string `json:"expired_at,omitempty"`
	GivenName *string `json:"given_name,omitempty"`
	IsAdmin *bool `json:"is_admin,omitempty"`
	IsSupervisor *bool `json:"is_supervisor,omitempty"`
	Locked *bool `json:"locked,omitempty"`
	PasswordExpiredAt *string `json:"password_expired_at,omitempty"`
	Surname *string `json:"surname,omitempty"`
}

// NewAccountModifyUserRequest instantiates a new AccountModifyUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountModifyUserRequest() *AccountModifyUserRequest {
	this := AccountModifyUserRequest{}
	return &this
}

// NewAccountModifyUserRequestWithDefaults instantiates a new AccountModifyUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountModifyUserRequestWithDefaults() *AccountModifyUserRequest {
	this := AccountModifyUserRequest{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AccountModifyUserRequest) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountModifyUserRequest) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AccountModifyUserRequest) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AccountModifyUserRequest) SetEmail(v string) {
	o.Email = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AccountModifyUserRequest) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountModifyUserRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *AccountModifyUserRequest) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AccountModifyUserRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise.
func (o *AccountModifyUserRequest) GetExpiredAt() string {
	if o == nil || o.ExpiredAt == nil {
		var ret string
		return ret
	}
	return *o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountModifyUserRequest) GetExpiredAtOk() (*string, bool) {
	if o == nil || o.ExpiredAt == nil {
		return nil, false
	}
	return o.ExpiredAt, true
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *AccountModifyUserRequest) HasExpiredAt() bool {
	if o != nil && o.ExpiredAt != nil {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given string and assigns it to the ExpiredAt field.
func (o *AccountModifyUserRequest) SetExpiredAt(v string) {
	o.ExpiredAt = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *AccountModifyUserRequest) GetGivenName() string {
	if o == nil || o.GivenName == nil {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountModifyUserRequest) GetGivenNameOk() (*string, bool) {
	if o == nil || o.GivenName == nil {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *AccountModifyUserRequest) HasGivenName() bool {
	if o != nil && o.GivenName != nil {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *AccountModifyUserRequest) SetGivenName(v string) {
	o.GivenName = &v
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *AccountModifyUserRequest) GetIsAdmin() bool {
	if o == nil || o.IsAdmin == nil {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountModifyUserRequest) GetIsAdminOk() (*bool, bool) {
	if o == nil || o.IsAdmin == nil {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *AccountModifyUserRequest) HasIsAdmin() bool {
	if o != nil && o.IsAdmin != nil {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *AccountModifyUserRequest) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

// GetIsSupervisor returns the IsSupervisor field value if set, zero value otherwise.
func (o *AccountModifyUserRequest) GetIsSupervisor() bool {
	if o == nil || o.IsSupervisor == nil {
		var ret bool
		return ret
	}
	return *o.IsSupervisor
}

// GetIsSupervisorOk returns a tuple with the IsSupervisor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountModifyUserRequest) GetIsSupervisorOk() (*bool, bool) {
	if o == nil || o.IsSupervisor == nil {
		return nil, false
	}
	return o.IsSupervisor, true
}

// HasIsSupervisor returns a boolean if a field has been set.
func (o *AccountModifyUserRequest) HasIsSupervisor() bool {
	if o != nil && o.IsSupervisor != nil {
		return true
	}

	return false
}

// SetIsSupervisor gets a reference to the given bool and assigns it to the IsSupervisor field.
func (o *AccountModifyUserRequest) SetIsSupervisor(v bool) {
	o.IsSupervisor = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *AccountModifyUserRequest) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountModifyUserRequest) GetLockedOk() (*bool, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *AccountModifyUserRequest) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *AccountModifyUserRequest) SetLocked(v bool) {
	o.Locked = &v
}

// GetPasswordExpiredAt returns the PasswordExpiredAt field value if set, zero value otherwise.
func (o *AccountModifyUserRequest) GetPasswordExpiredAt() string {
	if o == nil || o.PasswordExpiredAt == nil {
		var ret string
		return ret
	}
	return *o.PasswordExpiredAt
}

// GetPasswordExpiredAtOk returns a tuple with the PasswordExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountModifyUserRequest) GetPasswordExpiredAtOk() (*string, bool) {
	if o == nil || o.PasswordExpiredAt == nil {
		return nil, false
	}
	return o.PasswordExpiredAt, true
}

// HasPasswordExpiredAt returns a boolean if a field has been set.
func (o *AccountModifyUserRequest) HasPasswordExpiredAt() bool {
	if o != nil && o.PasswordExpiredAt != nil {
		return true
	}

	return false
}

// SetPasswordExpiredAt gets a reference to the given string and assigns it to the PasswordExpiredAt field.
func (o *AccountModifyUserRequest) SetPasswordExpiredAt(v string) {
	o.PasswordExpiredAt = &v
}

// GetSurname returns the Surname field value if set, zero value otherwise.
func (o *AccountModifyUserRequest) GetSurname() string {
	if o == nil || o.Surname == nil {
		var ret string
		return ret
	}
	return *o.Surname
}

// GetSurnameOk returns a tuple with the Surname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountModifyUserRequest) GetSurnameOk() (*string, bool) {
	if o == nil || o.Surname == nil {
		return nil, false
	}
	return o.Surname, true
}

// HasSurname returns a boolean if a field has been set.
func (o *AccountModifyUserRequest) HasSurname() bool {
	if o != nil && o.Surname != nil {
		return true
	}

	return false
}

// SetSurname gets a reference to the given string and assigns it to the Surname field.
func (o *AccountModifyUserRequest) SetSurname(v string) {
	o.Surname = &v
}

func (o AccountModifyUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.ExpiredAt != nil {
		toSerialize["expired_at"] = o.ExpiredAt
	}
	if o.GivenName != nil {
		toSerialize["given_name"] = o.GivenName
	}
	if o.IsAdmin != nil {
		toSerialize["is_admin"] = o.IsAdmin
	}
	if o.IsSupervisor != nil {
		toSerialize["is_supervisor"] = o.IsSupervisor
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.PasswordExpiredAt != nil {
		toSerialize["password_expired_at"] = o.PasswordExpiredAt
	}
	if o.Surname != nil {
		toSerialize["surname"] = o.Surname
	}
	return json.Marshal(toSerialize)
}

type NullableAccountModifyUserRequest struct {
	value *AccountModifyUserRequest
	isSet bool
}

func (v NullableAccountModifyUserRequest) Get() *AccountModifyUserRequest {
	return v.value
}

func (v *NullableAccountModifyUserRequest) Set(val *AccountModifyUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountModifyUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountModifyUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountModifyUserRequest(val *AccountModifyUserRequest) *NullableAccountModifyUserRequest {
	return &NullableAccountModifyUserRequest{value: val, isSet: true}
}

func (v NullableAccountModifyUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountModifyUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


