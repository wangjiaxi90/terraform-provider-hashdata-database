/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreAttachElasticIpRequest struct for CoreAttachElasticIpRequest
type CoreAttachElasticIpRequest struct {
	InstanceId *string `json:"instance_id,omitempty"`
}

// NewCoreAttachElasticIpRequest instantiates a new CoreAttachElasticIpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreAttachElasticIpRequest() *CoreAttachElasticIpRequest {
	this := CoreAttachElasticIpRequest{}
	return &this
}

// NewCoreAttachElasticIpRequestWithDefaults instantiates a new CoreAttachElasticIpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreAttachElasticIpRequestWithDefaults() *CoreAttachElasticIpRequest {
	this := CoreAttachElasticIpRequest{}
	return &this
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *CoreAttachElasticIpRequest) GetInstanceId() string {
	if o == nil || o.InstanceId == nil {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreAttachElasticIpRequest) GetInstanceIdOk() (*string, bool) {
	if o == nil || o.InstanceId == nil {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *CoreAttachElasticIpRequest) HasInstanceId() bool {
	if o != nil && o.InstanceId != nil {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *CoreAttachElasticIpRequest) SetInstanceId(v string) {
	o.InstanceId = &v
}

func (o CoreAttachElasticIpRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InstanceId != nil {
		toSerialize["instance_id"] = o.InstanceId
	}
	return json.Marshal(toSerialize)
}

type NullableCoreAttachElasticIpRequest struct {
	value *CoreAttachElasticIpRequest
	isSet bool
}

func (v NullableCoreAttachElasticIpRequest) Get() *CoreAttachElasticIpRequest {
	return v.value
}

func (v *NullableCoreAttachElasticIpRequest) Set(val *CoreAttachElasticIpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreAttachElasticIpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreAttachElasticIpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreAttachElasticIpRequest(val *CoreAttachElasticIpRequest) *NullableCoreAttachElasticIpRequest {
	return &NullableCoreAttachElasticIpRequest{value: val, isSet: true}
}

func (v NullableCoreAttachElasticIpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreAttachElasticIpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


