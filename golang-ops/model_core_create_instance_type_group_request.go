/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreCreateInstanceTypeGroupRequest struct for CoreCreateInstanceTypeGroupRequest
type CoreCreateInstanceTypeGroupRequest struct {
	Arches *[]string `json:"arches,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	Name *string `json:"name,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
}

// NewCoreCreateInstanceTypeGroupRequest instantiates a new CoreCreateInstanceTypeGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCreateInstanceTypeGroupRequest() *CoreCreateInstanceTypeGroupRequest {
	this := CoreCreateInstanceTypeGroupRequest{}
	return &this
}

// NewCoreCreateInstanceTypeGroupRequestWithDefaults instantiates a new CoreCreateInstanceTypeGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCreateInstanceTypeGroupRequestWithDefaults() *CoreCreateInstanceTypeGroupRequest {
	this := CoreCreateInstanceTypeGroupRequest{}
	return &this
}

// GetArches returns the Arches field value if set, zero value otherwise.
func (o *CoreCreateInstanceTypeGroupRequest) GetArches() []string {
	if o == nil || o.Arches == nil {
		var ret []string
		return ret
	}
	return *o.Arches
}

// GetArchesOk returns a tuple with the Arches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateInstanceTypeGroupRequest) GetArchesOk() (*[]string, bool) {
	if o == nil || o.Arches == nil {
		return nil, false
	}
	return o.Arches, true
}

// HasArches returns a boolean if a field has been set.
func (o *CoreCreateInstanceTypeGroupRequest) HasArches() bool {
	if o != nil && o.Arches != nil {
		return true
	}

	return false
}

// SetArches gets a reference to the given []string and assigns it to the Arches field.
func (o *CoreCreateInstanceTypeGroupRequest) SetArches(v []string) {
	o.Arches = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CoreCreateInstanceTypeGroupRequest) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateInstanceTypeGroupRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CoreCreateInstanceTypeGroupRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CoreCreateInstanceTypeGroupRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreCreateInstanceTypeGroupRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateInstanceTypeGroupRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreCreateInstanceTypeGroupRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreCreateInstanceTypeGroupRequest) SetName(v string) {
	o.Name = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *CoreCreateInstanceTypeGroupRequest) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateInstanceTypeGroupRequest) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *CoreCreateInstanceTypeGroupRequest) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *CoreCreateInstanceTypeGroupRequest) SetVendor(v string) {
	o.Vendor = &v
}

func (o CoreCreateInstanceTypeGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Arches != nil {
		toSerialize["arches"] = o.Arches
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Vendor != nil {
		toSerialize["vendor"] = o.Vendor
	}
	return json.Marshal(toSerialize)
}

type NullableCoreCreateInstanceTypeGroupRequest struct {
	value *CoreCreateInstanceTypeGroupRequest
	isSet bool
}

func (v NullableCoreCreateInstanceTypeGroupRequest) Get() *CoreCreateInstanceTypeGroupRequest {
	return v.value
}

func (v *NullableCoreCreateInstanceTypeGroupRequest) Set(val *CoreCreateInstanceTypeGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCreateInstanceTypeGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCreateInstanceTypeGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCreateInstanceTypeGroupRequest(val *CoreCreateInstanceTypeGroupRequest) *NullableCoreCreateInstanceTypeGroupRequest {
	return &NullableCoreCreateInstanceTypeGroupRequest{value: val, isSet: true}
}

func (v NullableCoreCreateInstanceTypeGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCreateInstanceTypeGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


