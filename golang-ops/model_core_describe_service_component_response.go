/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreDescribeServiceComponentResponse struct for CoreDescribeServiceComponentResponse
type CoreDescribeServiceComponentResponse struct {
	MaxBandwidth *int32 `json:"max_bandwidth,omitempty"`
	MaxCpuCount *int32 `json:"max_cpu_count,omitempty"`
	MaxInitialInstance *int32 `json:"max_initial_instance,omitempty"`
	MaxInstance *int32 `json:"max_instance,omitempty"`
	MaxMemoryMb *int32 `json:"max_memory_mb,omitempty"`
	MaxVolumeSize *int32 `json:"max_volume_size,omitempty"`
	MinBandwidth *int32 `json:"min_bandwidth,omitempty"`
	MinCpuCount *int32 `json:"min_cpu_count,omitempty"`
	MinInitialInstance *int32 `json:"min_initial_instance,omitempty"`
	MinInstance *int32 `json:"min_instance,omitempty"`
	MinMemoryMb *int32 `json:"min_memory_mb,omitempty"`
	MinVolumeSize *int32 `json:"min_volume_size,omitempty"`
	Name *string `json:"name,omitempty"`
	RequireDataVolume *bool `json:"require_data_volume,omitempty"`
	RequirePortableVolume *bool `json:"require_portable_volume,omitempty"`
}

// NewCoreDescribeServiceComponentResponse instantiates a new CoreDescribeServiceComponentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreDescribeServiceComponentResponse() *CoreDescribeServiceComponentResponse {
	this := CoreDescribeServiceComponentResponse{}
	return &this
}

// NewCoreDescribeServiceComponentResponseWithDefaults instantiates a new CoreDescribeServiceComponentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreDescribeServiceComponentResponseWithDefaults() *CoreDescribeServiceComponentResponse {
	this := CoreDescribeServiceComponentResponse{}
	return &this
}

// GetMaxBandwidth returns the MaxBandwidth field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetMaxBandwidth() int32 {
	if o == nil || o.MaxBandwidth == nil {
		var ret int32
		return ret
	}
	return *o.MaxBandwidth
}

// GetMaxBandwidthOk returns a tuple with the MaxBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetMaxBandwidthOk() (*int32, bool) {
	if o == nil || o.MaxBandwidth == nil {
		return nil, false
	}
	return o.MaxBandwidth, true
}

// HasMaxBandwidth returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasMaxBandwidth() bool {
	if o != nil && o.MaxBandwidth != nil {
		return true
	}

	return false
}

// SetMaxBandwidth gets a reference to the given int32 and assigns it to the MaxBandwidth field.
func (o *CoreDescribeServiceComponentResponse) SetMaxBandwidth(v int32) {
	o.MaxBandwidth = &v
}

// GetMaxCpuCount returns the MaxCpuCount field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetMaxCpuCount() int32 {
	if o == nil || o.MaxCpuCount == nil {
		var ret int32
		return ret
	}
	return *o.MaxCpuCount
}

// GetMaxCpuCountOk returns a tuple with the MaxCpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetMaxCpuCountOk() (*int32, bool) {
	if o == nil || o.MaxCpuCount == nil {
		return nil, false
	}
	return o.MaxCpuCount, true
}

// HasMaxCpuCount returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasMaxCpuCount() bool {
	if o != nil && o.MaxCpuCount != nil {
		return true
	}

	return false
}

// SetMaxCpuCount gets a reference to the given int32 and assigns it to the MaxCpuCount field.
func (o *CoreDescribeServiceComponentResponse) SetMaxCpuCount(v int32) {
	o.MaxCpuCount = &v
}

// GetMaxInitialInstance returns the MaxInitialInstance field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetMaxInitialInstance() int32 {
	if o == nil || o.MaxInitialInstance == nil {
		var ret int32
		return ret
	}
	return *o.MaxInitialInstance
}

// GetMaxInitialInstanceOk returns a tuple with the MaxInitialInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetMaxInitialInstanceOk() (*int32, bool) {
	if o == nil || o.MaxInitialInstance == nil {
		return nil, false
	}
	return o.MaxInitialInstance, true
}

// HasMaxInitialInstance returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasMaxInitialInstance() bool {
	if o != nil && o.MaxInitialInstance != nil {
		return true
	}

	return false
}

// SetMaxInitialInstance gets a reference to the given int32 and assigns it to the MaxInitialInstance field.
func (o *CoreDescribeServiceComponentResponse) SetMaxInitialInstance(v int32) {
	o.MaxInitialInstance = &v
}

// GetMaxInstance returns the MaxInstance field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetMaxInstance() int32 {
	if o == nil || o.MaxInstance == nil {
		var ret int32
		return ret
	}
	return *o.MaxInstance
}

// GetMaxInstanceOk returns a tuple with the MaxInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetMaxInstanceOk() (*int32, bool) {
	if o == nil || o.MaxInstance == nil {
		return nil, false
	}
	return o.MaxInstance, true
}

// HasMaxInstance returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasMaxInstance() bool {
	if o != nil && o.MaxInstance != nil {
		return true
	}

	return false
}

// SetMaxInstance gets a reference to the given int32 and assigns it to the MaxInstance field.
func (o *CoreDescribeServiceComponentResponse) SetMaxInstance(v int32) {
	o.MaxInstance = &v
}

// GetMaxMemoryMb returns the MaxMemoryMb field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetMaxMemoryMb() int32 {
	if o == nil || o.MaxMemoryMb == nil {
		var ret int32
		return ret
	}
	return *o.MaxMemoryMb
}

// GetMaxMemoryMbOk returns a tuple with the MaxMemoryMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetMaxMemoryMbOk() (*int32, bool) {
	if o == nil || o.MaxMemoryMb == nil {
		return nil, false
	}
	return o.MaxMemoryMb, true
}

// HasMaxMemoryMb returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasMaxMemoryMb() bool {
	if o != nil && o.MaxMemoryMb != nil {
		return true
	}

	return false
}

// SetMaxMemoryMb gets a reference to the given int32 and assigns it to the MaxMemoryMb field.
func (o *CoreDescribeServiceComponentResponse) SetMaxMemoryMb(v int32) {
	o.MaxMemoryMb = &v
}

// GetMaxVolumeSize returns the MaxVolumeSize field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetMaxVolumeSize() int32 {
	if o == nil || o.MaxVolumeSize == nil {
		var ret int32
		return ret
	}
	return *o.MaxVolumeSize
}

// GetMaxVolumeSizeOk returns a tuple with the MaxVolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetMaxVolumeSizeOk() (*int32, bool) {
	if o == nil || o.MaxVolumeSize == nil {
		return nil, false
	}
	return o.MaxVolumeSize, true
}

// HasMaxVolumeSize returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasMaxVolumeSize() bool {
	if o != nil && o.MaxVolumeSize != nil {
		return true
	}

	return false
}

// SetMaxVolumeSize gets a reference to the given int32 and assigns it to the MaxVolumeSize field.
func (o *CoreDescribeServiceComponentResponse) SetMaxVolumeSize(v int32) {
	o.MaxVolumeSize = &v
}

// GetMinBandwidth returns the MinBandwidth field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetMinBandwidth() int32 {
	if o == nil || o.MinBandwidth == nil {
		var ret int32
		return ret
	}
	return *o.MinBandwidth
}

// GetMinBandwidthOk returns a tuple with the MinBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetMinBandwidthOk() (*int32, bool) {
	if o == nil || o.MinBandwidth == nil {
		return nil, false
	}
	return o.MinBandwidth, true
}

// HasMinBandwidth returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasMinBandwidth() bool {
	if o != nil && o.MinBandwidth != nil {
		return true
	}

	return false
}

// SetMinBandwidth gets a reference to the given int32 and assigns it to the MinBandwidth field.
func (o *CoreDescribeServiceComponentResponse) SetMinBandwidth(v int32) {
	o.MinBandwidth = &v
}

// GetMinCpuCount returns the MinCpuCount field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetMinCpuCount() int32 {
	if o == nil || o.MinCpuCount == nil {
		var ret int32
		return ret
	}
	return *o.MinCpuCount
}

// GetMinCpuCountOk returns a tuple with the MinCpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetMinCpuCountOk() (*int32, bool) {
	if o == nil || o.MinCpuCount == nil {
		return nil, false
	}
	return o.MinCpuCount, true
}

// HasMinCpuCount returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasMinCpuCount() bool {
	if o != nil && o.MinCpuCount != nil {
		return true
	}

	return false
}

// SetMinCpuCount gets a reference to the given int32 and assigns it to the MinCpuCount field.
func (o *CoreDescribeServiceComponentResponse) SetMinCpuCount(v int32) {
	o.MinCpuCount = &v
}

// GetMinInitialInstance returns the MinInitialInstance field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetMinInitialInstance() int32 {
	if o == nil || o.MinInitialInstance == nil {
		var ret int32
		return ret
	}
	return *o.MinInitialInstance
}

// GetMinInitialInstanceOk returns a tuple with the MinInitialInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetMinInitialInstanceOk() (*int32, bool) {
	if o == nil || o.MinInitialInstance == nil {
		return nil, false
	}
	return o.MinInitialInstance, true
}

// HasMinInitialInstance returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasMinInitialInstance() bool {
	if o != nil && o.MinInitialInstance != nil {
		return true
	}

	return false
}

// SetMinInitialInstance gets a reference to the given int32 and assigns it to the MinInitialInstance field.
func (o *CoreDescribeServiceComponentResponse) SetMinInitialInstance(v int32) {
	o.MinInitialInstance = &v
}

// GetMinInstance returns the MinInstance field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetMinInstance() int32 {
	if o == nil || o.MinInstance == nil {
		var ret int32
		return ret
	}
	return *o.MinInstance
}

// GetMinInstanceOk returns a tuple with the MinInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetMinInstanceOk() (*int32, bool) {
	if o == nil || o.MinInstance == nil {
		return nil, false
	}
	return o.MinInstance, true
}

// HasMinInstance returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasMinInstance() bool {
	if o != nil && o.MinInstance != nil {
		return true
	}

	return false
}

// SetMinInstance gets a reference to the given int32 and assigns it to the MinInstance field.
func (o *CoreDescribeServiceComponentResponse) SetMinInstance(v int32) {
	o.MinInstance = &v
}

// GetMinMemoryMb returns the MinMemoryMb field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetMinMemoryMb() int32 {
	if o == nil || o.MinMemoryMb == nil {
		var ret int32
		return ret
	}
	return *o.MinMemoryMb
}

// GetMinMemoryMbOk returns a tuple with the MinMemoryMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetMinMemoryMbOk() (*int32, bool) {
	if o == nil || o.MinMemoryMb == nil {
		return nil, false
	}
	return o.MinMemoryMb, true
}

// HasMinMemoryMb returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasMinMemoryMb() bool {
	if o != nil && o.MinMemoryMb != nil {
		return true
	}

	return false
}

// SetMinMemoryMb gets a reference to the given int32 and assigns it to the MinMemoryMb field.
func (o *CoreDescribeServiceComponentResponse) SetMinMemoryMb(v int32) {
	o.MinMemoryMb = &v
}

// GetMinVolumeSize returns the MinVolumeSize field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetMinVolumeSize() int32 {
	if o == nil || o.MinVolumeSize == nil {
		var ret int32
		return ret
	}
	return *o.MinVolumeSize
}

// GetMinVolumeSizeOk returns a tuple with the MinVolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetMinVolumeSizeOk() (*int32, bool) {
	if o == nil || o.MinVolumeSize == nil {
		return nil, false
	}
	return o.MinVolumeSize, true
}

// HasMinVolumeSize returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasMinVolumeSize() bool {
	if o != nil && o.MinVolumeSize != nil {
		return true
	}

	return false
}

// SetMinVolumeSize gets a reference to the given int32 and assigns it to the MinVolumeSize field.
func (o *CoreDescribeServiceComponentResponse) SetMinVolumeSize(v int32) {
	o.MinVolumeSize = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreDescribeServiceComponentResponse) SetName(v string) {
	o.Name = &v
}

// GetRequireDataVolume returns the RequireDataVolume field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetRequireDataVolume() bool {
	if o == nil || o.RequireDataVolume == nil {
		var ret bool
		return ret
	}
	return *o.RequireDataVolume
}

// GetRequireDataVolumeOk returns a tuple with the RequireDataVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetRequireDataVolumeOk() (*bool, bool) {
	if o == nil || o.RequireDataVolume == nil {
		return nil, false
	}
	return o.RequireDataVolume, true
}

// HasRequireDataVolume returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasRequireDataVolume() bool {
	if o != nil && o.RequireDataVolume != nil {
		return true
	}

	return false
}

// SetRequireDataVolume gets a reference to the given bool and assigns it to the RequireDataVolume field.
func (o *CoreDescribeServiceComponentResponse) SetRequireDataVolume(v bool) {
	o.RequireDataVolume = &v
}

// GetRequirePortableVolume returns the RequirePortableVolume field value if set, zero value otherwise.
func (o *CoreDescribeServiceComponentResponse) GetRequirePortableVolume() bool {
	if o == nil || o.RequirePortableVolume == nil {
		var ret bool
		return ret
	}
	return *o.RequirePortableVolume
}

// GetRequirePortableVolumeOk returns a tuple with the RequirePortableVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeServiceComponentResponse) GetRequirePortableVolumeOk() (*bool, bool) {
	if o == nil || o.RequirePortableVolume == nil {
		return nil, false
	}
	return o.RequirePortableVolume, true
}

// HasRequirePortableVolume returns a boolean if a field has been set.
func (o *CoreDescribeServiceComponentResponse) HasRequirePortableVolume() bool {
	if o != nil && o.RequirePortableVolume != nil {
		return true
	}

	return false
}

// SetRequirePortableVolume gets a reference to the given bool and assigns it to the RequirePortableVolume field.
func (o *CoreDescribeServiceComponentResponse) SetRequirePortableVolume(v bool) {
	o.RequirePortableVolume = &v
}

func (o CoreDescribeServiceComponentResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxBandwidth != nil {
		toSerialize["max_bandwidth"] = o.MaxBandwidth
	}
	if o.MaxCpuCount != nil {
		toSerialize["max_cpu_count"] = o.MaxCpuCount
	}
	if o.MaxInitialInstance != nil {
		toSerialize["max_initial_instance"] = o.MaxInitialInstance
	}
	if o.MaxInstance != nil {
		toSerialize["max_instance"] = o.MaxInstance
	}
	if o.MaxMemoryMb != nil {
		toSerialize["max_memory_mb"] = o.MaxMemoryMb
	}
	if o.MaxVolumeSize != nil {
		toSerialize["max_volume_size"] = o.MaxVolumeSize
	}
	if o.MinBandwidth != nil {
		toSerialize["min_bandwidth"] = o.MinBandwidth
	}
	if o.MinCpuCount != nil {
		toSerialize["min_cpu_count"] = o.MinCpuCount
	}
	if o.MinInitialInstance != nil {
		toSerialize["min_initial_instance"] = o.MinInitialInstance
	}
	if o.MinInstance != nil {
		toSerialize["min_instance"] = o.MinInstance
	}
	if o.MinMemoryMb != nil {
		toSerialize["min_memory_mb"] = o.MinMemoryMb
	}
	if o.MinVolumeSize != nil {
		toSerialize["min_volume_size"] = o.MinVolumeSize
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.RequireDataVolume != nil {
		toSerialize["require_data_volume"] = o.RequireDataVolume
	}
	if o.RequirePortableVolume != nil {
		toSerialize["require_portable_volume"] = o.RequirePortableVolume
	}
	return json.Marshal(toSerialize)
}

type NullableCoreDescribeServiceComponentResponse struct {
	value *CoreDescribeServiceComponentResponse
	isSet bool
}

func (v NullableCoreDescribeServiceComponentResponse) Get() *CoreDescribeServiceComponentResponse {
	return v.value
}

func (v *NullableCoreDescribeServiceComponentResponse) Set(val *CoreDescribeServiceComponentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreDescribeServiceComponentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreDescribeServiceComponentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreDescribeServiceComponentResponse(val *CoreDescribeServiceComponentResponse) *NullableCoreDescribeServiceComponentResponse {
	return &NullableCoreDescribeServiceComponentResponse{value: val, isSet: true}
}

func (v NullableCoreDescribeServiceComponentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreDescribeServiceComponentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


