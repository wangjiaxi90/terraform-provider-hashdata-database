/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreDescribeNodeStateMachineStateDetailResponse struct for CoreDescribeNodeStateMachineStateDetailResponse
type CoreDescribeNodeStateMachineStateDetailResponse struct {
	CurrentState *string `json:"current_state,omitempty"`
	Event *string `json:"event,omitempty"`
	Instance *string `json:"instance,omitempty"`
	MachineTime *string `json:"machine_time,omitempty"`
	SourceState *string `json:"source_state,omitempty"`
	StableRemaining *int32 `json:"stable_remaining,omitempty"`
	TimeoutRemaining *int32 `json:"timeout_remaining,omitempty"`
	Transition *string `json:"transition,omitempty"`
}

// NewCoreDescribeNodeStateMachineStateDetailResponse instantiates a new CoreDescribeNodeStateMachineStateDetailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreDescribeNodeStateMachineStateDetailResponse() *CoreDescribeNodeStateMachineStateDetailResponse {
	this := CoreDescribeNodeStateMachineStateDetailResponse{}
	return &this
}

// NewCoreDescribeNodeStateMachineStateDetailResponseWithDefaults instantiates a new CoreDescribeNodeStateMachineStateDetailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreDescribeNodeStateMachineStateDetailResponseWithDefaults() *CoreDescribeNodeStateMachineStateDetailResponse {
	this := CoreDescribeNodeStateMachineStateDetailResponse{}
	return &this
}

// GetCurrentState returns the CurrentState field value if set, zero value otherwise.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetCurrentState() string {
	if o == nil || o.CurrentState == nil {
		var ret string
		return ret
	}
	return *o.CurrentState
}

// GetCurrentStateOk returns a tuple with the CurrentState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetCurrentStateOk() (*string, bool) {
	if o == nil || o.CurrentState == nil {
		return nil, false
	}
	return o.CurrentState, true
}

// HasCurrentState returns a boolean if a field has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) HasCurrentState() bool {
	if o != nil && o.CurrentState != nil {
		return true
	}

	return false
}

// SetCurrentState gets a reference to the given string and assigns it to the CurrentState field.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) SetCurrentState(v string) {
	o.CurrentState = &v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetEvent() string {
	if o == nil || o.Event == nil {
		var ret string
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetEventOk() (*string, bool) {
	if o == nil || o.Event == nil {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) HasEvent() bool {
	if o != nil && o.Event != nil {
		return true
	}

	return false
}

// SetEvent gets a reference to the given string and assigns it to the Event field.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) SetEvent(v string) {
	o.Event = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetInstance() string {
	if o == nil || o.Instance == nil {
		var ret string
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetInstanceOk() (*string, bool) {
	if o == nil || o.Instance == nil {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) HasInstance() bool {
	if o != nil && o.Instance != nil {
		return true
	}

	return false
}

// SetInstance gets a reference to the given string and assigns it to the Instance field.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) SetInstance(v string) {
	o.Instance = &v
}

// GetMachineTime returns the MachineTime field value if set, zero value otherwise.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetMachineTime() string {
	if o == nil || o.MachineTime == nil {
		var ret string
		return ret
	}
	return *o.MachineTime
}

// GetMachineTimeOk returns a tuple with the MachineTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetMachineTimeOk() (*string, bool) {
	if o == nil || o.MachineTime == nil {
		return nil, false
	}
	return o.MachineTime, true
}

// HasMachineTime returns a boolean if a field has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) HasMachineTime() bool {
	if o != nil && o.MachineTime != nil {
		return true
	}

	return false
}

// SetMachineTime gets a reference to the given string and assigns it to the MachineTime field.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) SetMachineTime(v string) {
	o.MachineTime = &v
}

// GetSourceState returns the SourceState field value if set, zero value otherwise.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetSourceState() string {
	if o == nil || o.SourceState == nil {
		var ret string
		return ret
	}
	return *o.SourceState
}

// GetSourceStateOk returns a tuple with the SourceState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetSourceStateOk() (*string, bool) {
	if o == nil || o.SourceState == nil {
		return nil, false
	}
	return o.SourceState, true
}

// HasSourceState returns a boolean if a field has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) HasSourceState() bool {
	if o != nil && o.SourceState != nil {
		return true
	}

	return false
}

// SetSourceState gets a reference to the given string and assigns it to the SourceState field.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) SetSourceState(v string) {
	o.SourceState = &v
}

// GetStableRemaining returns the StableRemaining field value if set, zero value otherwise.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetStableRemaining() int32 {
	if o == nil || o.StableRemaining == nil {
		var ret int32
		return ret
	}
	return *o.StableRemaining
}

// GetStableRemainingOk returns a tuple with the StableRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetStableRemainingOk() (*int32, bool) {
	if o == nil || o.StableRemaining == nil {
		return nil, false
	}
	return o.StableRemaining, true
}

// HasStableRemaining returns a boolean if a field has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) HasStableRemaining() bool {
	if o != nil && o.StableRemaining != nil {
		return true
	}

	return false
}

// SetStableRemaining gets a reference to the given int32 and assigns it to the StableRemaining field.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) SetStableRemaining(v int32) {
	o.StableRemaining = &v
}

// GetTimeoutRemaining returns the TimeoutRemaining field value if set, zero value otherwise.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetTimeoutRemaining() int32 {
	if o == nil || o.TimeoutRemaining == nil {
		var ret int32
		return ret
	}
	return *o.TimeoutRemaining
}

// GetTimeoutRemainingOk returns a tuple with the TimeoutRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetTimeoutRemainingOk() (*int32, bool) {
	if o == nil || o.TimeoutRemaining == nil {
		return nil, false
	}
	return o.TimeoutRemaining, true
}

// HasTimeoutRemaining returns a boolean if a field has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) HasTimeoutRemaining() bool {
	if o != nil && o.TimeoutRemaining != nil {
		return true
	}

	return false
}

// SetTimeoutRemaining gets a reference to the given int32 and assigns it to the TimeoutRemaining field.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) SetTimeoutRemaining(v int32) {
	o.TimeoutRemaining = &v
}

// GetTransition returns the Transition field value if set, zero value otherwise.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetTransition() string {
	if o == nil || o.Transition == nil {
		var ret string
		return ret
	}
	return *o.Transition
}

// GetTransitionOk returns a tuple with the Transition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) GetTransitionOk() (*string, bool) {
	if o == nil || o.Transition == nil {
		return nil, false
	}
	return o.Transition, true
}

// HasTransition returns a boolean if a field has been set.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) HasTransition() bool {
	if o != nil && o.Transition != nil {
		return true
	}

	return false
}

// SetTransition gets a reference to the given string and assigns it to the Transition field.
func (o *CoreDescribeNodeStateMachineStateDetailResponse) SetTransition(v string) {
	o.Transition = &v
}

func (o CoreDescribeNodeStateMachineStateDetailResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CurrentState != nil {
		toSerialize["current_state"] = o.CurrentState
	}
	if o.Event != nil {
		toSerialize["event"] = o.Event
	}
	if o.Instance != nil {
		toSerialize["instance"] = o.Instance
	}
	if o.MachineTime != nil {
		toSerialize["machine_time"] = o.MachineTime
	}
	if o.SourceState != nil {
		toSerialize["source_state"] = o.SourceState
	}
	if o.StableRemaining != nil {
		toSerialize["stable_remaining"] = o.StableRemaining
	}
	if o.TimeoutRemaining != nil {
		toSerialize["timeout_remaining"] = o.TimeoutRemaining
	}
	if o.Transition != nil {
		toSerialize["transition"] = o.Transition
	}
	return json.Marshal(toSerialize)
}

type NullableCoreDescribeNodeStateMachineStateDetailResponse struct {
	value *CoreDescribeNodeStateMachineStateDetailResponse
	isSet bool
}

func (v NullableCoreDescribeNodeStateMachineStateDetailResponse) Get() *CoreDescribeNodeStateMachineStateDetailResponse {
	return v.value
}

func (v *NullableCoreDescribeNodeStateMachineStateDetailResponse) Set(val *CoreDescribeNodeStateMachineStateDetailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreDescribeNodeStateMachineStateDetailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreDescribeNodeStateMachineStateDetailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreDescribeNodeStateMachineStateDetailResponse(val *CoreDescribeNodeStateMachineStateDetailResponse) *NullableCoreDescribeNodeStateMachineStateDetailResponse {
	return &NullableCoreDescribeNodeStateMachineStateDetailResponse{value: val, isSet: true}
}

func (v NullableCoreDescribeNodeStateMachineStateDetailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreDescribeNodeStateMachineStateDetailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


