/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreListObjectResponse struct for CoreListObjectResponse
type CoreListObjectResponse struct {
	Marker *string `json:"marker,omitempty"`
	NextMarker *string `json:"next_marker,omitempty"`
	Objects *[]CoreDescribeObjectResponse `json:"objects,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
}

// NewCoreListObjectResponse instantiates a new CoreListObjectResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreListObjectResponse() *CoreListObjectResponse {
	this := CoreListObjectResponse{}
	return &this
}

// NewCoreListObjectResponseWithDefaults instantiates a new CoreListObjectResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreListObjectResponseWithDefaults() *CoreListObjectResponse {
	this := CoreListObjectResponse{}
	return &this
}

// GetMarker returns the Marker field value if set, zero value otherwise.
func (o *CoreListObjectResponse) GetMarker() string {
	if o == nil || o.Marker == nil {
		var ret string
		return ret
	}
	return *o.Marker
}

// GetMarkerOk returns a tuple with the Marker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreListObjectResponse) GetMarkerOk() (*string, bool) {
	if o == nil || o.Marker == nil {
		return nil, false
	}
	return o.Marker, true
}

// HasMarker returns a boolean if a field has been set.
func (o *CoreListObjectResponse) HasMarker() bool {
	if o != nil && o.Marker != nil {
		return true
	}

	return false
}

// SetMarker gets a reference to the given string and assigns it to the Marker field.
func (o *CoreListObjectResponse) SetMarker(v string) {
	o.Marker = &v
}

// GetNextMarker returns the NextMarker field value if set, zero value otherwise.
func (o *CoreListObjectResponse) GetNextMarker() string {
	if o == nil || o.NextMarker == nil {
		var ret string
		return ret
	}
	return *o.NextMarker
}

// GetNextMarkerOk returns a tuple with the NextMarker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreListObjectResponse) GetNextMarkerOk() (*string, bool) {
	if o == nil || o.NextMarker == nil {
		return nil, false
	}
	return o.NextMarker, true
}

// HasNextMarker returns a boolean if a field has been set.
func (o *CoreListObjectResponse) HasNextMarker() bool {
	if o != nil && o.NextMarker != nil {
		return true
	}

	return false
}

// SetNextMarker gets a reference to the given string and assigns it to the NextMarker field.
func (o *CoreListObjectResponse) SetNextMarker(v string) {
	o.NextMarker = &v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *CoreListObjectResponse) GetObjects() []CoreDescribeObjectResponse {
	if o == nil || o.Objects == nil {
		var ret []CoreDescribeObjectResponse
		return ret
	}
	return *o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreListObjectResponse) GetObjectsOk() (*[]CoreDescribeObjectResponse, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *CoreListObjectResponse) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []CoreDescribeObjectResponse and assigns it to the Objects field.
func (o *CoreListObjectResponse) SetObjects(v []CoreDescribeObjectResponse) {
	o.Objects = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *CoreListObjectResponse) GetPrefix() string {
	if o == nil || o.Prefix == nil {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreListObjectResponse) GetPrefixOk() (*string, bool) {
	if o == nil || o.Prefix == nil {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *CoreListObjectResponse) HasPrefix() bool {
	if o != nil && o.Prefix != nil {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *CoreListObjectResponse) SetPrefix(v string) {
	o.Prefix = &v
}

func (o CoreListObjectResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Marker != nil {
		toSerialize["marker"] = o.Marker
	}
	if o.NextMarker != nil {
		toSerialize["next_marker"] = o.NextMarker
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.Prefix != nil {
		toSerialize["prefix"] = o.Prefix
	}
	return json.Marshal(toSerialize)
}

type NullableCoreListObjectResponse struct {
	value *CoreListObjectResponse
	isSet bool
}

func (v NullableCoreListObjectResponse) Get() *CoreListObjectResponse {
	return v.value
}

func (v *NullableCoreListObjectResponse) Set(val *CoreListObjectResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreListObjectResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreListObjectResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreListObjectResponse(val *CoreListObjectResponse) *NullableCoreListObjectResponse {
	return &NullableCoreListObjectResponse{value: val, isSet: true}
}

func (v NullableCoreListObjectResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreListObjectResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


