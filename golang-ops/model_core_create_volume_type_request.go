/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreCreateVolumeTypeRequest struct for CoreCreateVolumeTypeRequest
type CoreCreateVolumeTypeRequest struct {
	CompatibleSystemVolumeType *[]string `json:"compatible_system_volume_type,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	IsInstanceAttached *bool `json:"is_instance_attached,omitempty"`
	MaxSize *int32 `json:"max_size,omitempty"`
	MinSize *int32 `json:"min_size,omitempty"`
	Name *string `json:"name,omitempty"`
	NumberOfDisk *int32 `json:"number_of_disk,omitempty"`
	Portable *bool `json:"portable,omitempty"`
	Scalable *bool `json:"scalable,omitempty"`
	StepSize *int32 `json:"step_size,omitempty"`
	SystemVolume *bool `json:"system_volume,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	VolumeType *string `json:"volume_type,omitempty"`
	Zone *[]string `json:"zone,omitempty"`
}

// NewCoreCreateVolumeTypeRequest instantiates a new CoreCreateVolumeTypeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreCreateVolumeTypeRequest() *CoreCreateVolumeTypeRequest {
	this := CoreCreateVolumeTypeRequest{}
	return &this
}

// NewCoreCreateVolumeTypeRequestWithDefaults instantiates a new CoreCreateVolumeTypeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreCreateVolumeTypeRequestWithDefaults() *CoreCreateVolumeTypeRequest {
	this := CoreCreateVolumeTypeRequest{}
	return &this
}

// GetCompatibleSystemVolumeType returns the CompatibleSystemVolumeType field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetCompatibleSystemVolumeType() []string {
	if o == nil || o.CompatibleSystemVolumeType == nil {
		var ret []string
		return ret
	}
	return *o.CompatibleSystemVolumeType
}

// GetCompatibleSystemVolumeTypeOk returns a tuple with the CompatibleSystemVolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetCompatibleSystemVolumeTypeOk() (*[]string, bool) {
	if o == nil || o.CompatibleSystemVolumeType == nil {
		return nil, false
	}
	return o.CompatibleSystemVolumeType, true
}

// HasCompatibleSystemVolumeType returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasCompatibleSystemVolumeType() bool {
	if o != nil && o.CompatibleSystemVolumeType != nil {
		return true
	}

	return false
}

// SetCompatibleSystemVolumeType gets a reference to the given []string and assigns it to the CompatibleSystemVolumeType field.
func (o *CoreCreateVolumeTypeRequest) SetCompatibleSystemVolumeType(v []string) {
	o.CompatibleSystemVolumeType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CoreCreateVolumeTypeRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CoreCreateVolumeTypeRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetIsInstanceAttached returns the IsInstanceAttached field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetIsInstanceAttached() bool {
	if o == nil || o.IsInstanceAttached == nil {
		var ret bool
		return ret
	}
	return *o.IsInstanceAttached
}

// GetIsInstanceAttachedOk returns a tuple with the IsInstanceAttached field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetIsInstanceAttachedOk() (*bool, bool) {
	if o == nil || o.IsInstanceAttached == nil {
		return nil, false
	}
	return o.IsInstanceAttached, true
}

// HasIsInstanceAttached returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasIsInstanceAttached() bool {
	if o != nil && o.IsInstanceAttached != nil {
		return true
	}

	return false
}

// SetIsInstanceAttached gets a reference to the given bool and assigns it to the IsInstanceAttached field.
func (o *CoreCreateVolumeTypeRequest) SetIsInstanceAttached(v bool) {
	o.IsInstanceAttached = &v
}

// GetMaxSize returns the MaxSize field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetMaxSize() int32 {
	if o == nil || o.MaxSize == nil {
		var ret int32
		return ret
	}
	return *o.MaxSize
}

// GetMaxSizeOk returns a tuple with the MaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetMaxSizeOk() (*int32, bool) {
	if o == nil || o.MaxSize == nil {
		return nil, false
	}
	return o.MaxSize, true
}

// HasMaxSize returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasMaxSize() bool {
	if o != nil && o.MaxSize != nil {
		return true
	}

	return false
}

// SetMaxSize gets a reference to the given int32 and assigns it to the MaxSize field.
func (o *CoreCreateVolumeTypeRequest) SetMaxSize(v int32) {
	o.MaxSize = &v
}

// GetMinSize returns the MinSize field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetMinSize() int32 {
	if o == nil || o.MinSize == nil {
		var ret int32
		return ret
	}
	return *o.MinSize
}

// GetMinSizeOk returns a tuple with the MinSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetMinSizeOk() (*int32, bool) {
	if o == nil || o.MinSize == nil {
		return nil, false
	}
	return o.MinSize, true
}

// HasMinSize returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasMinSize() bool {
	if o != nil && o.MinSize != nil {
		return true
	}

	return false
}

// SetMinSize gets a reference to the given int32 and assigns it to the MinSize field.
func (o *CoreCreateVolumeTypeRequest) SetMinSize(v int32) {
	o.MinSize = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreCreateVolumeTypeRequest) SetName(v string) {
	o.Name = &v
}

// GetNumberOfDisk returns the NumberOfDisk field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetNumberOfDisk() int32 {
	if o == nil || o.NumberOfDisk == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfDisk
}

// GetNumberOfDiskOk returns a tuple with the NumberOfDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetNumberOfDiskOk() (*int32, bool) {
	if o == nil || o.NumberOfDisk == nil {
		return nil, false
	}
	return o.NumberOfDisk, true
}

// HasNumberOfDisk returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasNumberOfDisk() bool {
	if o != nil && o.NumberOfDisk != nil {
		return true
	}

	return false
}

// SetNumberOfDisk gets a reference to the given int32 and assigns it to the NumberOfDisk field.
func (o *CoreCreateVolumeTypeRequest) SetNumberOfDisk(v int32) {
	o.NumberOfDisk = &v
}

// GetPortable returns the Portable field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetPortable() bool {
	if o == nil || o.Portable == nil {
		var ret bool
		return ret
	}
	return *o.Portable
}

// GetPortableOk returns a tuple with the Portable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetPortableOk() (*bool, bool) {
	if o == nil || o.Portable == nil {
		return nil, false
	}
	return o.Portable, true
}

// HasPortable returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasPortable() bool {
	if o != nil && o.Portable != nil {
		return true
	}

	return false
}

// SetPortable gets a reference to the given bool and assigns it to the Portable field.
func (o *CoreCreateVolumeTypeRequest) SetPortable(v bool) {
	o.Portable = &v
}

// GetScalable returns the Scalable field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetScalable() bool {
	if o == nil || o.Scalable == nil {
		var ret bool
		return ret
	}
	return *o.Scalable
}

// GetScalableOk returns a tuple with the Scalable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetScalableOk() (*bool, bool) {
	if o == nil || o.Scalable == nil {
		return nil, false
	}
	return o.Scalable, true
}

// HasScalable returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasScalable() bool {
	if o != nil && o.Scalable != nil {
		return true
	}

	return false
}

// SetScalable gets a reference to the given bool and assigns it to the Scalable field.
func (o *CoreCreateVolumeTypeRequest) SetScalable(v bool) {
	o.Scalable = &v
}

// GetStepSize returns the StepSize field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetStepSize() int32 {
	if o == nil || o.StepSize == nil {
		var ret int32
		return ret
	}
	return *o.StepSize
}

// GetStepSizeOk returns a tuple with the StepSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetStepSizeOk() (*int32, bool) {
	if o == nil || o.StepSize == nil {
		return nil, false
	}
	return o.StepSize, true
}

// HasStepSize returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasStepSize() bool {
	if o != nil && o.StepSize != nil {
		return true
	}

	return false
}

// SetStepSize gets a reference to the given int32 and assigns it to the StepSize field.
func (o *CoreCreateVolumeTypeRequest) SetStepSize(v int32) {
	o.StepSize = &v
}

// GetSystemVolume returns the SystemVolume field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetSystemVolume() bool {
	if o == nil || o.SystemVolume == nil {
		var ret bool
		return ret
	}
	return *o.SystemVolume
}

// GetSystemVolumeOk returns a tuple with the SystemVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetSystemVolumeOk() (*bool, bool) {
	if o == nil || o.SystemVolume == nil {
		return nil, false
	}
	return o.SystemVolume, true
}

// HasSystemVolume returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasSystemVolume() bool {
	if o != nil && o.SystemVolume != nil {
		return true
	}

	return false
}

// SetSystemVolume gets a reference to the given bool and assigns it to the SystemVolume field.
func (o *CoreCreateVolumeTypeRequest) SetSystemVolume(v bool) {
	o.SystemVolume = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetVendor() string {
	if o == nil || o.Vendor == nil {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetVendorOk() (*string, bool) {
	if o == nil || o.Vendor == nil {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasVendor() bool {
	if o != nil && o.Vendor != nil {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *CoreCreateVolumeTypeRequest) SetVendor(v string) {
	o.Vendor = &v
}

// GetVolumeType returns the VolumeType field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetVolumeType() string {
	if o == nil || o.VolumeType == nil {
		var ret string
		return ret
	}
	return *o.VolumeType
}

// GetVolumeTypeOk returns a tuple with the VolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetVolumeTypeOk() (*string, bool) {
	if o == nil || o.VolumeType == nil {
		return nil, false
	}
	return o.VolumeType, true
}

// HasVolumeType returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasVolumeType() bool {
	if o != nil && o.VolumeType != nil {
		return true
	}

	return false
}

// SetVolumeType gets a reference to the given string and assigns it to the VolumeType field.
func (o *CoreCreateVolumeTypeRequest) SetVolumeType(v string) {
	o.VolumeType = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *CoreCreateVolumeTypeRequest) GetZone() []string {
	if o == nil || o.Zone == nil {
		var ret []string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreCreateVolumeTypeRequest) GetZoneOk() (*[]string, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *CoreCreateVolumeTypeRequest) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given []string and assigns it to the Zone field.
func (o *CoreCreateVolumeTypeRequest) SetZone(v []string) {
	o.Zone = &v
}

func (o CoreCreateVolumeTypeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CompatibleSystemVolumeType != nil {
		toSerialize["compatible_system_volume_type"] = o.CompatibleSystemVolumeType
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.IsInstanceAttached != nil {
		toSerialize["is_instance_attached"] = o.IsInstanceAttached
	}
	if o.MaxSize != nil {
		toSerialize["max_size"] = o.MaxSize
	}
	if o.MinSize != nil {
		toSerialize["min_size"] = o.MinSize
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NumberOfDisk != nil {
		toSerialize["number_of_disk"] = o.NumberOfDisk
	}
	if o.Portable != nil {
		toSerialize["portable"] = o.Portable
	}
	if o.Scalable != nil {
		toSerialize["scalable"] = o.Scalable
	}
	if o.StepSize != nil {
		toSerialize["step_size"] = o.StepSize
	}
	if o.SystemVolume != nil {
		toSerialize["system_volume"] = o.SystemVolume
	}
	if o.Vendor != nil {
		toSerialize["vendor"] = o.Vendor
	}
	if o.VolumeType != nil {
		toSerialize["volume_type"] = o.VolumeType
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	return json.Marshal(toSerialize)
}

type NullableCoreCreateVolumeTypeRequest struct {
	value *CoreCreateVolumeTypeRequest
	isSet bool
}

func (v NullableCoreCreateVolumeTypeRequest) Get() *CoreCreateVolumeTypeRequest {
	return v.value
}

func (v *NullableCoreCreateVolumeTypeRequest) Set(val *CoreCreateVolumeTypeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreCreateVolumeTypeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreCreateVolumeTypeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreCreateVolumeTypeRequest(val *CoreCreateVolumeTypeRequest) *NullableCoreCreateVolumeTypeRequest {
	return &NullableCoreCreateVolumeTypeRequest{value: val, isSet: true}
}

func (v NullableCoreCreateVolumeTypeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreCreateVolumeTypeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


