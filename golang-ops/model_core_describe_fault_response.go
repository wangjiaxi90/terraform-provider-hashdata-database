/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreDescribeFaultResponse struct for CoreDescribeFaultResponse
type CoreDescribeFaultResponse struct {
	ComponentType *string `json:"component_type,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	FailureMessage *string `json:"failure_message,omitempty"`
	Id *string `json:"id,omitempty"`
	Instance *string `json:"instance,omitempty"`
	Message *string `json:"message,omitempty"`
	Properties *map[string]interface{} `json:"properties,omitempty"`
	RecoveryId *string `json:"recovery_id,omitempty"`
	Service *string `json:"service,omitempty"`
	ServiceType *string `json:"service_type,omitempty"`
	Status *string `json:"status,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewCoreDescribeFaultResponse instantiates a new CoreDescribeFaultResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreDescribeFaultResponse() *CoreDescribeFaultResponse {
	this := CoreDescribeFaultResponse{}
	return &this
}

// NewCoreDescribeFaultResponseWithDefaults instantiates a new CoreDescribeFaultResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreDescribeFaultResponseWithDefaults() *CoreDescribeFaultResponse {
	this := CoreDescribeFaultResponse{}
	return &this
}

// GetComponentType returns the ComponentType field value if set, zero value otherwise.
func (o *CoreDescribeFaultResponse) GetComponentType() string {
	if o == nil || o.ComponentType == nil {
		var ret string
		return ret
	}
	return *o.ComponentType
}

// GetComponentTypeOk returns a tuple with the ComponentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeFaultResponse) GetComponentTypeOk() (*string, bool) {
	if o == nil || o.ComponentType == nil {
		return nil, false
	}
	return o.ComponentType, true
}

// HasComponentType returns a boolean if a field has been set.
func (o *CoreDescribeFaultResponse) HasComponentType() bool {
	if o != nil && o.ComponentType != nil {
		return true
	}

	return false
}

// SetComponentType gets a reference to the given string and assigns it to the ComponentType field.
func (o *CoreDescribeFaultResponse) SetComponentType(v string) {
	o.ComponentType = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CoreDescribeFaultResponse) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeFaultResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CoreDescribeFaultResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CoreDescribeFaultResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetFailureMessage returns the FailureMessage field value if set, zero value otherwise.
func (o *CoreDescribeFaultResponse) GetFailureMessage() string {
	if o == nil || o.FailureMessage == nil {
		var ret string
		return ret
	}
	return *o.FailureMessage
}

// GetFailureMessageOk returns a tuple with the FailureMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeFaultResponse) GetFailureMessageOk() (*string, bool) {
	if o == nil || o.FailureMessage == nil {
		return nil, false
	}
	return o.FailureMessage, true
}

// HasFailureMessage returns a boolean if a field has been set.
func (o *CoreDescribeFaultResponse) HasFailureMessage() bool {
	if o != nil && o.FailureMessage != nil {
		return true
	}

	return false
}

// SetFailureMessage gets a reference to the given string and assigns it to the FailureMessage field.
func (o *CoreDescribeFaultResponse) SetFailureMessage(v string) {
	o.FailureMessage = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CoreDescribeFaultResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeFaultResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CoreDescribeFaultResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CoreDescribeFaultResponse) SetId(v string) {
	o.Id = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *CoreDescribeFaultResponse) GetInstance() string {
	if o == nil || o.Instance == nil {
		var ret string
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeFaultResponse) GetInstanceOk() (*string, bool) {
	if o == nil || o.Instance == nil {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *CoreDescribeFaultResponse) HasInstance() bool {
	if o != nil && o.Instance != nil {
		return true
	}

	return false
}

// SetInstance gets a reference to the given string and assigns it to the Instance field.
func (o *CoreDescribeFaultResponse) SetInstance(v string) {
	o.Instance = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CoreDescribeFaultResponse) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeFaultResponse) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CoreDescribeFaultResponse) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CoreDescribeFaultResponse) SetMessage(v string) {
	o.Message = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *CoreDescribeFaultResponse) GetProperties() map[string]interface{} {
	if o == nil || o.Properties == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeFaultResponse) GetPropertiesOk() (*map[string]interface{}, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *CoreDescribeFaultResponse) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *CoreDescribeFaultResponse) SetProperties(v map[string]interface{}) {
	o.Properties = &v
}

// GetRecoveryId returns the RecoveryId field value if set, zero value otherwise.
func (o *CoreDescribeFaultResponse) GetRecoveryId() string {
	if o == nil || o.RecoveryId == nil {
		var ret string
		return ret
	}
	return *o.RecoveryId
}

// GetRecoveryIdOk returns a tuple with the RecoveryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeFaultResponse) GetRecoveryIdOk() (*string, bool) {
	if o == nil || o.RecoveryId == nil {
		return nil, false
	}
	return o.RecoveryId, true
}

// HasRecoveryId returns a boolean if a field has been set.
func (o *CoreDescribeFaultResponse) HasRecoveryId() bool {
	if o != nil && o.RecoveryId != nil {
		return true
	}

	return false
}

// SetRecoveryId gets a reference to the given string and assigns it to the RecoveryId field.
func (o *CoreDescribeFaultResponse) SetRecoveryId(v string) {
	o.RecoveryId = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *CoreDescribeFaultResponse) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeFaultResponse) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *CoreDescribeFaultResponse) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *CoreDescribeFaultResponse) SetService(v string) {
	o.Service = &v
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *CoreDescribeFaultResponse) GetServiceType() string {
	if o == nil || o.ServiceType == nil {
		var ret string
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeFaultResponse) GetServiceTypeOk() (*string, bool) {
	if o == nil || o.ServiceType == nil {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *CoreDescribeFaultResponse) HasServiceType() bool {
	if o != nil && o.ServiceType != nil {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given string and assigns it to the ServiceType field.
func (o *CoreDescribeFaultResponse) SetServiceType(v string) {
	o.ServiceType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CoreDescribeFaultResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeFaultResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CoreDescribeFaultResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CoreDescribeFaultResponse) SetStatus(v string) {
	o.Status = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CoreDescribeFaultResponse) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeFaultResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CoreDescribeFaultResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CoreDescribeFaultResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o CoreDescribeFaultResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ComponentType != nil {
		toSerialize["component_type"] = o.ComponentType
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.FailureMessage != nil {
		toSerialize["failure_message"] = o.FailureMessage
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Instance != nil {
		toSerialize["instance"] = o.Instance
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.RecoveryId != nil {
		toSerialize["recovery_id"] = o.RecoveryId
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.ServiceType != nil {
		toSerialize["service_type"] = o.ServiceType
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableCoreDescribeFaultResponse struct {
	value *CoreDescribeFaultResponse
	isSet bool
}

func (v NullableCoreDescribeFaultResponse) Get() *CoreDescribeFaultResponse {
	return v.value
}

func (v *NullableCoreDescribeFaultResponse) Set(val *CoreDescribeFaultResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreDescribeFaultResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreDescribeFaultResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreDescribeFaultResponse(val *CoreDescribeFaultResponse) *NullableCoreDescribeFaultResponse {
	return &NullableCoreDescribeFaultResponse{value: val, isSet: true}
}

func (v NullableCoreDescribeFaultResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreDescribeFaultResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


