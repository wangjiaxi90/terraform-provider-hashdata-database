/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreUpdateZoneConfigRequest struct for CoreUpdateZoneConfigRequest
type CoreUpdateZoneConfigRequest struct {
	Vxnet *string `json:"vxnet,omitempty"`
}

// NewCoreUpdateZoneConfigRequest instantiates a new CoreUpdateZoneConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreUpdateZoneConfigRequest() *CoreUpdateZoneConfigRequest {
	this := CoreUpdateZoneConfigRequest{}
	return &this
}

// NewCoreUpdateZoneConfigRequestWithDefaults instantiates a new CoreUpdateZoneConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreUpdateZoneConfigRequestWithDefaults() *CoreUpdateZoneConfigRequest {
	this := CoreUpdateZoneConfigRequest{}
	return &this
}

// GetVxnet returns the Vxnet field value if set, zero value otherwise.
func (o *CoreUpdateZoneConfigRequest) GetVxnet() string {
	if o == nil || o.Vxnet == nil {
		var ret string
		return ret
	}
	return *o.Vxnet
}

// GetVxnetOk returns a tuple with the Vxnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreUpdateZoneConfigRequest) GetVxnetOk() (*string, bool) {
	if o == nil || o.Vxnet == nil {
		return nil, false
	}
	return o.Vxnet, true
}

// HasVxnet returns a boolean if a field has been set.
func (o *CoreUpdateZoneConfigRequest) HasVxnet() bool {
	if o != nil && o.Vxnet != nil {
		return true
	}

	return false
}

// SetVxnet gets a reference to the given string and assigns it to the Vxnet field.
func (o *CoreUpdateZoneConfigRequest) SetVxnet(v string) {
	o.Vxnet = &v
}

func (o CoreUpdateZoneConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Vxnet != nil {
		toSerialize["vxnet"] = o.Vxnet
	}
	return json.Marshal(toSerialize)
}

type NullableCoreUpdateZoneConfigRequest struct {
	value *CoreUpdateZoneConfigRequest
	isSet bool
}

func (v NullableCoreUpdateZoneConfigRequest) Get() *CoreUpdateZoneConfigRequest {
	return v.value
}

func (v *NullableCoreUpdateZoneConfigRequest) Set(val *CoreUpdateZoneConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreUpdateZoneConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreUpdateZoneConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreUpdateZoneConfigRequest(val *CoreUpdateZoneConfigRequest) *NullableCoreUpdateZoneConfigRequest {
	return &NullableCoreUpdateZoneConfigRequest{value: val, isSet: true}
}

func (v NullableCoreUpdateZoneConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreUpdateZoneConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


