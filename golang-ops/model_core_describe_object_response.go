/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreDescribeObjectResponse struct for CoreDescribeObjectResponse
type CoreDescribeObjectResponse struct {
	CreatedAt *string `json:"created_at,omitempty"`
	Key *string `json:"key,omitempty"`
	LastModified *string `json:"last_modified,omitempty"`
	Size *string `json:"size,omitempty"`
}

// NewCoreDescribeObjectResponse instantiates a new CoreDescribeObjectResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreDescribeObjectResponse() *CoreDescribeObjectResponse {
	this := CoreDescribeObjectResponse{}
	return &this
}

// NewCoreDescribeObjectResponseWithDefaults instantiates a new CoreDescribeObjectResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreDescribeObjectResponseWithDefaults() *CoreDescribeObjectResponse {
	this := CoreDescribeObjectResponse{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CoreDescribeObjectResponse) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeObjectResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CoreDescribeObjectResponse) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CoreDescribeObjectResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *CoreDescribeObjectResponse) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeObjectResponse) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *CoreDescribeObjectResponse) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *CoreDescribeObjectResponse) SetKey(v string) {
	o.Key = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *CoreDescribeObjectResponse) GetLastModified() string {
	if o == nil || o.LastModified == nil {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeObjectResponse) GetLastModifiedOk() (*string, bool) {
	if o == nil || o.LastModified == nil {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *CoreDescribeObjectResponse) HasLastModified() bool {
	if o != nil && o.LastModified != nil {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *CoreDescribeObjectResponse) SetLastModified(v string) {
	o.LastModified = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CoreDescribeObjectResponse) GetSize() string {
	if o == nil || o.Size == nil {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreDescribeObjectResponse) GetSizeOk() (*string, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CoreDescribeObjectResponse) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *CoreDescribeObjectResponse) SetSize(v string) {
	o.Size = &v
}

func (o CoreDescribeObjectResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.LastModified != nil {
		toSerialize["last_modified"] = o.LastModified
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	return json.Marshal(toSerialize)
}

type NullableCoreDescribeObjectResponse struct {
	value *CoreDescribeObjectResponse
	isSet bool
}

func (v NullableCoreDescribeObjectResponse) Get() *CoreDescribeObjectResponse {
	return v.value
}

func (v *NullableCoreDescribeObjectResponse) Set(val *CoreDescribeObjectResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreDescribeObjectResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreDescribeObjectResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreDescribeObjectResponse(val *CoreDescribeObjectResponse) *NullableCoreDescribeObjectResponse {
	return &NullableCoreDescribeObjectResponse{value: val, isSet: true}
}

func (v NullableCoreDescribeObjectResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreDescribeObjectResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


