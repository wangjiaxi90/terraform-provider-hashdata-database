/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreAttachNetworkInterfaceRequest struct for CoreAttachNetworkInterfaceRequest
type CoreAttachNetworkInterfaceRequest struct {
	InstanceId *string `json:"instance_id,omitempty"`
}

// NewCoreAttachNetworkInterfaceRequest instantiates a new CoreAttachNetworkInterfaceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreAttachNetworkInterfaceRequest() *CoreAttachNetworkInterfaceRequest {
	this := CoreAttachNetworkInterfaceRequest{}
	return &this
}

// NewCoreAttachNetworkInterfaceRequestWithDefaults instantiates a new CoreAttachNetworkInterfaceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreAttachNetworkInterfaceRequestWithDefaults() *CoreAttachNetworkInterfaceRequest {
	this := CoreAttachNetworkInterfaceRequest{}
	return &this
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *CoreAttachNetworkInterfaceRequest) GetInstanceId() string {
	if o == nil || o.InstanceId == nil {
		var ret string
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreAttachNetworkInterfaceRequest) GetInstanceIdOk() (*string, bool) {
	if o == nil || o.InstanceId == nil {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *CoreAttachNetworkInterfaceRequest) HasInstanceId() bool {
	if o != nil && o.InstanceId != nil {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given string and assigns it to the InstanceId field.
func (o *CoreAttachNetworkInterfaceRequest) SetInstanceId(v string) {
	o.InstanceId = &v
}

func (o CoreAttachNetworkInterfaceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InstanceId != nil {
		toSerialize["instance_id"] = o.InstanceId
	}
	return json.Marshal(toSerialize)
}

type NullableCoreAttachNetworkInterfaceRequest struct {
	value *CoreAttachNetworkInterfaceRequest
	isSet bool
}

func (v NullableCoreAttachNetworkInterfaceRequest) Get() *CoreAttachNetworkInterfaceRequest {
	return v.value
}

func (v *NullableCoreAttachNetworkInterfaceRequest) Set(val *CoreAttachNetworkInterfaceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreAttachNetworkInterfaceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreAttachNetworkInterfaceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreAttachNetworkInterfaceRequest(val *CoreAttachNetworkInterfaceRequest) *NullableCoreAttachNetworkInterfaceRequest {
	return &NullableCoreAttachNetworkInterfaceRequest{value: val, isSet: true}
}

func (v NullableCoreAttachNetworkInterfaceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreAttachNetworkInterfaceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


