/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// VmalertDescribeAlertRuleResponse struct for VmalertDescribeAlertRuleResponse
type VmalertDescribeAlertRuleResponse struct {
	ContactGroups *[]string `json:"contact_groups,omitempty"`
	Duration *int32 `json:"duration,omitempty"`
	Exceed *bool `json:"exceed,omitempty"`
	Id *string `json:"id,omitempty"`
	Metrics *string `json:"metrics,omitempty"`
	Service *string `json:"service,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Value *float64 `json:"value,omitempty"`
}

// NewVmalertDescribeAlertRuleResponse instantiates a new VmalertDescribeAlertRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmalertDescribeAlertRuleResponse() *VmalertDescribeAlertRuleResponse {
	this := VmalertDescribeAlertRuleResponse{}
	return &this
}

// NewVmalertDescribeAlertRuleResponseWithDefaults instantiates a new VmalertDescribeAlertRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmalertDescribeAlertRuleResponseWithDefaults() *VmalertDescribeAlertRuleResponse {
	this := VmalertDescribeAlertRuleResponse{}
	return &this
}

// GetContactGroups returns the ContactGroups field value if set, zero value otherwise.
func (o *VmalertDescribeAlertRuleResponse) GetContactGroups() []string {
	if o == nil || o.ContactGroups == nil {
		var ret []string
		return ret
	}
	return *o.ContactGroups
}

// GetContactGroupsOk returns a tuple with the ContactGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertDescribeAlertRuleResponse) GetContactGroupsOk() (*[]string, bool) {
	if o == nil || o.ContactGroups == nil {
		return nil, false
	}
	return o.ContactGroups, true
}

// HasContactGroups returns a boolean if a field has been set.
func (o *VmalertDescribeAlertRuleResponse) HasContactGroups() bool {
	if o != nil && o.ContactGroups != nil {
		return true
	}

	return false
}

// SetContactGroups gets a reference to the given []string and assigns it to the ContactGroups field.
func (o *VmalertDescribeAlertRuleResponse) SetContactGroups(v []string) {
	o.ContactGroups = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *VmalertDescribeAlertRuleResponse) GetDuration() int32 {
	if o == nil || o.Duration == nil {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertDescribeAlertRuleResponse) GetDurationOk() (*int32, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *VmalertDescribeAlertRuleResponse) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *VmalertDescribeAlertRuleResponse) SetDuration(v int32) {
	o.Duration = &v
}

// GetExceed returns the Exceed field value if set, zero value otherwise.
func (o *VmalertDescribeAlertRuleResponse) GetExceed() bool {
	if o == nil || o.Exceed == nil {
		var ret bool
		return ret
	}
	return *o.Exceed
}

// GetExceedOk returns a tuple with the Exceed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertDescribeAlertRuleResponse) GetExceedOk() (*bool, bool) {
	if o == nil || o.Exceed == nil {
		return nil, false
	}
	return o.Exceed, true
}

// HasExceed returns a boolean if a field has been set.
func (o *VmalertDescribeAlertRuleResponse) HasExceed() bool {
	if o != nil && o.Exceed != nil {
		return true
	}

	return false
}

// SetExceed gets a reference to the given bool and assigns it to the Exceed field.
func (o *VmalertDescribeAlertRuleResponse) SetExceed(v bool) {
	o.Exceed = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VmalertDescribeAlertRuleResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertDescribeAlertRuleResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VmalertDescribeAlertRuleResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VmalertDescribeAlertRuleResponse) SetId(v string) {
	o.Id = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *VmalertDescribeAlertRuleResponse) GetMetrics() string {
	if o == nil || o.Metrics == nil {
		var ret string
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertDescribeAlertRuleResponse) GetMetricsOk() (*string, bool) {
	if o == nil || o.Metrics == nil {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *VmalertDescribeAlertRuleResponse) HasMetrics() bool {
	if o != nil && o.Metrics != nil {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given string and assigns it to the Metrics field.
func (o *VmalertDescribeAlertRuleResponse) SetMetrics(v string) {
	o.Metrics = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *VmalertDescribeAlertRuleResponse) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertDescribeAlertRuleResponse) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *VmalertDescribeAlertRuleResponse) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *VmalertDescribeAlertRuleResponse) SetService(v string) {
	o.Service = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *VmalertDescribeAlertRuleResponse) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertDescribeAlertRuleResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VmalertDescribeAlertRuleResponse) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *VmalertDescribeAlertRuleResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *VmalertDescribeAlertRuleResponse) GetValue() float64 {
	if o == nil || o.Value == nil {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertDescribeAlertRuleResponse) GetValueOk() (*float64, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *VmalertDescribeAlertRuleResponse) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *VmalertDescribeAlertRuleResponse) SetValue(v float64) {
	o.Value = &v
}

func (o VmalertDescribeAlertRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContactGroups != nil {
		toSerialize["contact_groups"] = o.ContactGroups
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.Exceed != nil {
		toSerialize["exceed"] = o.Exceed
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Metrics != nil {
		toSerialize["metrics"] = o.Metrics
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableVmalertDescribeAlertRuleResponse struct {
	value *VmalertDescribeAlertRuleResponse
	isSet bool
}

func (v NullableVmalertDescribeAlertRuleResponse) Get() *VmalertDescribeAlertRuleResponse {
	return v.value
}

func (v *NullableVmalertDescribeAlertRuleResponse) Set(val *VmalertDescribeAlertRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVmalertDescribeAlertRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVmalertDescribeAlertRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmalertDescribeAlertRuleResponse(val *VmalertDescribeAlertRuleResponse) *NullableVmalertDescribeAlertRuleResponse {
	return &NullableVmalertDescribeAlertRuleResponse{value: val, isSet: true}
}

func (v NullableVmalertDescribeAlertRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmalertDescribeAlertRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


