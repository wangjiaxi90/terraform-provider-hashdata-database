/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// OpsMeteringResource struct for OpsMeteringResource
type OpsMeteringResource struct {
	Id *string `json:"id,omitempty"`
	Region *string `json:"region,omitempty"`
	ResourceConfigName *string `json:"resource_config_name,omitempty"`
	ResourceName *string `json:"resource_name,omitempty"`
	ResourceType *string `json:"resource_type,omitempty"`
	Size *int32 `json:"size,omitempty"`
	Status *string `json:"status,omitempty"`
	Zone *string `json:"zone,omitempty"`
}

// NewOpsMeteringResource instantiates a new OpsMeteringResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpsMeteringResource() *OpsMeteringResource {
	this := OpsMeteringResource{}
	return &this
}

// NewOpsMeteringResourceWithDefaults instantiates a new OpsMeteringResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpsMeteringResourceWithDefaults() *OpsMeteringResource {
	this := OpsMeteringResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpsMeteringResource) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsMeteringResource) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpsMeteringResource) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OpsMeteringResource) SetId(v string) {
	o.Id = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *OpsMeteringResource) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsMeteringResource) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *OpsMeteringResource) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *OpsMeteringResource) SetRegion(v string) {
	o.Region = &v
}

// GetResourceConfigName returns the ResourceConfigName field value if set, zero value otherwise.
func (o *OpsMeteringResource) GetResourceConfigName() string {
	if o == nil || o.ResourceConfigName == nil {
		var ret string
		return ret
	}
	return *o.ResourceConfigName
}

// GetResourceConfigNameOk returns a tuple with the ResourceConfigName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsMeteringResource) GetResourceConfigNameOk() (*string, bool) {
	if o == nil || o.ResourceConfigName == nil {
		return nil, false
	}
	return o.ResourceConfigName, true
}

// HasResourceConfigName returns a boolean if a field has been set.
func (o *OpsMeteringResource) HasResourceConfigName() bool {
	if o != nil && o.ResourceConfigName != nil {
		return true
	}

	return false
}

// SetResourceConfigName gets a reference to the given string and assigns it to the ResourceConfigName field.
func (o *OpsMeteringResource) SetResourceConfigName(v string) {
	o.ResourceConfigName = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *OpsMeteringResource) GetResourceName() string {
	if o == nil || o.ResourceName == nil {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsMeteringResource) GetResourceNameOk() (*string, bool) {
	if o == nil || o.ResourceName == nil {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *OpsMeteringResource) HasResourceName() bool {
	if o != nil && o.ResourceName != nil {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *OpsMeteringResource) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *OpsMeteringResource) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsMeteringResource) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *OpsMeteringResource) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *OpsMeteringResource) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *OpsMeteringResource) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsMeteringResource) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *OpsMeteringResource) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *OpsMeteringResource) SetSize(v int32) {
	o.Size = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OpsMeteringResource) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsMeteringResource) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OpsMeteringResource) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OpsMeteringResource) SetStatus(v string) {
	o.Status = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *OpsMeteringResource) GetZone() string {
	if o == nil || o.Zone == nil {
		var ret string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpsMeteringResource) GetZoneOk() (*string, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *OpsMeteringResource) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given string and assigns it to the Zone field.
func (o *OpsMeteringResource) SetZone(v string) {
	o.Zone = &v
}

func (o OpsMeteringResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.ResourceConfigName != nil {
		toSerialize["resource_config_name"] = o.ResourceConfigName
	}
	if o.ResourceName != nil {
		toSerialize["resource_name"] = o.ResourceName
	}
	if o.ResourceType != nil {
		toSerialize["resource_type"] = o.ResourceType
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	return json.Marshal(toSerialize)
}

type NullableOpsMeteringResource struct {
	value *OpsMeteringResource
	isSet bool
}

func (v NullableOpsMeteringResource) Get() *OpsMeteringResource {
	return v.value
}

func (v *NullableOpsMeteringResource) Set(val *OpsMeteringResource) {
	v.value = val
	v.isSet = true
}

func (v NullableOpsMeteringResource) IsSet() bool {
	return v.isSet
}

func (v *NullableOpsMeteringResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpsMeteringResource(val *OpsMeteringResource) *NullableOpsMeteringResource {
	return &NullableOpsMeteringResource{value: val, isSet: true}
}

func (v NullableOpsMeteringResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpsMeteringResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


