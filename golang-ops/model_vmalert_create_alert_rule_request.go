/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// VmalertCreateAlertRuleRequest struct for VmalertCreateAlertRuleRequest
type VmalertCreateAlertRuleRequest struct {
	ContactGroups *[]string `json:"contact_groups,omitempty"`
	Duration *int32 `json:"duration,omitempty"`
	Exceed *bool `json:"exceed,omitempty"`
	Metrics *string `json:"metrics,omitempty"`
	Value *float64 `json:"value,omitempty"`
}

// NewVmalertCreateAlertRuleRequest instantiates a new VmalertCreateAlertRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmalertCreateAlertRuleRequest() *VmalertCreateAlertRuleRequest {
	this := VmalertCreateAlertRuleRequest{}
	return &this
}

// NewVmalertCreateAlertRuleRequestWithDefaults instantiates a new VmalertCreateAlertRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmalertCreateAlertRuleRequestWithDefaults() *VmalertCreateAlertRuleRequest {
	this := VmalertCreateAlertRuleRequest{}
	return &this
}

// GetContactGroups returns the ContactGroups field value if set, zero value otherwise.
func (o *VmalertCreateAlertRuleRequest) GetContactGroups() []string {
	if o == nil || o.ContactGroups == nil {
		var ret []string
		return ret
	}
	return *o.ContactGroups
}

// GetContactGroupsOk returns a tuple with the ContactGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertCreateAlertRuleRequest) GetContactGroupsOk() (*[]string, bool) {
	if o == nil || o.ContactGroups == nil {
		return nil, false
	}
	return o.ContactGroups, true
}

// HasContactGroups returns a boolean if a field has been set.
func (o *VmalertCreateAlertRuleRequest) HasContactGroups() bool {
	if o != nil && o.ContactGroups != nil {
		return true
	}

	return false
}

// SetContactGroups gets a reference to the given []string and assigns it to the ContactGroups field.
func (o *VmalertCreateAlertRuleRequest) SetContactGroups(v []string) {
	o.ContactGroups = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *VmalertCreateAlertRuleRequest) GetDuration() int32 {
	if o == nil || o.Duration == nil {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertCreateAlertRuleRequest) GetDurationOk() (*int32, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *VmalertCreateAlertRuleRequest) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *VmalertCreateAlertRuleRequest) SetDuration(v int32) {
	o.Duration = &v
}

// GetExceed returns the Exceed field value if set, zero value otherwise.
func (o *VmalertCreateAlertRuleRequest) GetExceed() bool {
	if o == nil || o.Exceed == nil {
		var ret bool
		return ret
	}
	return *o.Exceed
}

// GetExceedOk returns a tuple with the Exceed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertCreateAlertRuleRequest) GetExceedOk() (*bool, bool) {
	if o == nil || o.Exceed == nil {
		return nil, false
	}
	return o.Exceed, true
}

// HasExceed returns a boolean if a field has been set.
func (o *VmalertCreateAlertRuleRequest) HasExceed() bool {
	if o != nil && o.Exceed != nil {
		return true
	}

	return false
}

// SetExceed gets a reference to the given bool and assigns it to the Exceed field.
func (o *VmalertCreateAlertRuleRequest) SetExceed(v bool) {
	o.Exceed = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *VmalertCreateAlertRuleRequest) GetMetrics() string {
	if o == nil || o.Metrics == nil {
		var ret string
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertCreateAlertRuleRequest) GetMetricsOk() (*string, bool) {
	if o == nil || o.Metrics == nil {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *VmalertCreateAlertRuleRequest) HasMetrics() bool {
	if o != nil && o.Metrics != nil {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given string and assigns it to the Metrics field.
func (o *VmalertCreateAlertRuleRequest) SetMetrics(v string) {
	o.Metrics = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *VmalertCreateAlertRuleRequest) GetValue() float64 {
	if o == nil || o.Value == nil {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmalertCreateAlertRuleRequest) GetValueOk() (*float64, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *VmalertCreateAlertRuleRequest) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *VmalertCreateAlertRuleRequest) SetValue(v float64) {
	o.Value = &v
}

func (o VmalertCreateAlertRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContactGroups != nil {
		toSerialize["contact_groups"] = o.ContactGroups
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.Exceed != nil {
		toSerialize["exceed"] = o.Exceed
	}
	if o.Metrics != nil {
		toSerialize["metrics"] = o.Metrics
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableVmalertCreateAlertRuleRequest struct {
	value *VmalertCreateAlertRuleRequest
	isSet bool
}

func (v NullableVmalertCreateAlertRuleRequest) Get() *VmalertCreateAlertRuleRequest {
	return v.value
}

func (v *NullableVmalertCreateAlertRuleRequest) Set(val *VmalertCreateAlertRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVmalertCreateAlertRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVmalertCreateAlertRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmalertCreateAlertRuleRequest(val *VmalertCreateAlertRuleRequest) *NullableVmalertCreateAlertRuleRequest {
	return &NullableVmalertCreateAlertRuleRequest{value: val, isSet: true}
}

func (v NullableVmalertCreateAlertRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmalertCreateAlertRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


