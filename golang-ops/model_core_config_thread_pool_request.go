/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// CoreConfigThreadPoolRequest struct for CoreConfigThreadPoolRequest
type CoreConfigThreadPoolRequest struct {
	Capacity *int32 `json:"capacity,omitempty"`
	CorePoolSize *int32 `json:"core_pool_size,omitempty"`
	MaxPoolSize *int32 `json:"max_pool_size,omitempty"`
	PoolType *string `json:"pool_type,omitempty"`
}

// NewCoreConfigThreadPoolRequest instantiates a new CoreConfigThreadPoolRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreConfigThreadPoolRequest() *CoreConfigThreadPoolRequest {
	this := CoreConfigThreadPoolRequest{}
	return &this
}

// NewCoreConfigThreadPoolRequestWithDefaults instantiates a new CoreConfigThreadPoolRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreConfigThreadPoolRequestWithDefaults() *CoreConfigThreadPoolRequest {
	this := CoreConfigThreadPoolRequest{}
	return &this
}

// GetCapacity returns the Capacity field value if set, zero value otherwise.
func (o *CoreConfigThreadPoolRequest) GetCapacity() int32 {
	if o == nil || o.Capacity == nil {
		var ret int32
		return ret
	}
	return *o.Capacity
}

// GetCapacityOk returns a tuple with the Capacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreConfigThreadPoolRequest) GetCapacityOk() (*int32, bool) {
	if o == nil || o.Capacity == nil {
		return nil, false
	}
	return o.Capacity, true
}

// HasCapacity returns a boolean if a field has been set.
func (o *CoreConfigThreadPoolRequest) HasCapacity() bool {
	if o != nil && o.Capacity != nil {
		return true
	}

	return false
}

// SetCapacity gets a reference to the given int32 and assigns it to the Capacity field.
func (o *CoreConfigThreadPoolRequest) SetCapacity(v int32) {
	o.Capacity = &v
}

// GetCorePoolSize returns the CorePoolSize field value if set, zero value otherwise.
func (o *CoreConfigThreadPoolRequest) GetCorePoolSize() int32 {
	if o == nil || o.CorePoolSize == nil {
		var ret int32
		return ret
	}
	return *o.CorePoolSize
}

// GetCorePoolSizeOk returns a tuple with the CorePoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreConfigThreadPoolRequest) GetCorePoolSizeOk() (*int32, bool) {
	if o == nil || o.CorePoolSize == nil {
		return nil, false
	}
	return o.CorePoolSize, true
}

// HasCorePoolSize returns a boolean if a field has been set.
func (o *CoreConfigThreadPoolRequest) HasCorePoolSize() bool {
	if o != nil && o.CorePoolSize != nil {
		return true
	}

	return false
}

// SetCorePoolSize gets a reference to the given int32 and assigns it to the CorePoolSize field.
func (o *CoreConfigThreadPoolRequest) SetCorePoolSize(v int32) {
	o.CorePoolSize = &v
}

// GetMaxPoolSize returns the MaxPoolSize field value if set, zero value otherwise.
func (o *CoreConfigThreadPoolRequest) GetMaxPoolSize() int32 {
	if o == nil || o.MaxPoolSize == nil {
		var ret int32
		return ret
	}
	return *o.MaxPoolSize
}

// GetMaxPoolSizeOk returns a tuple with the MaxPoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreConfigThreadPoolRequest) GetMaxPoolSizeOk() (*int32, bool) {
	if o == nil || o.MaxPoolSize == nil {
		return nil, false
	}
	return o.MaxPoolSize, true
}

// HasMaxPoolSize returns a boolean if a field has been set.
func (o *CoreConfigThreadPoolRequest) HasMaxPoolSize() bool {
	if o != nil && o.MaxPoolSize != nil {
		return true
	}

	return false
}

// SetMaxPoolSize gets a reference to the given int32 and assigns it to the MaxPoolSize field.
func (o *CoreConfigThreadPoolRequest) SetMaxPoolSize(v int32) {
	o.MaxPoolSize = &v
}

// GetPoolType returns the PoolType field value if set, zero value otherwise.
func (o *CoreConfigThreadPoolRequest) GetPoolType() string {
	if o == nil || o.PoolType == nil {
		var ret string
		return ret
	}
	return *o.PoolType
}

// GetPoolTypeOk returns a tuple with the PoolType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreConfigThreadPoolRequest) GetPoolTypeOk() (*string, bool) {
	if o == nil || o.PoolType == nil {
		return nil, false
	}
	return o.PoolType, true
}

// HasPoolType returns a boolean if a field has been set.
func (o *CoreConfigThreadPoolRequest) HasPoolType() bool {
	if o != nil && o.PoolType != nil {
		return true
	}

	return false
}

// SetPoolType gets a reference to the given string and assigns it to the PoolType field.
func (o *CoreConfigThreadPoolRequest) SetPoolType(v string) {
	o.PoolType = &v
}

func (o CoreConfigThreadPoolRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Capacity != nil {
		toSerialize["capacity"] = o.Capacity
	}
	if o.CorePoolSize != nil {
		toSerialize["core_pool_size"] = o.CorePoolSize
	}
	if o.MaxPoolSize != nil {
		toSerialize["max_pool_size"] = o.MaxPoolSize
	}
	if o.PoolType != nil {
		toSerialize["pool_type"] = o.PoolType
	}
	return json.Marshal(toSerialize)
}

type NullableCoreConfigThreadPoolRequest struct {
	value *CoreConfigThreadPoolRequest
	isSet bool
}

func (v NullableCoreConfigThreadPoolRequest) Get() *CoreConfigThreadPoolRequest {
	return v.value
}

func (v *NullableCoreConfigThreadPoolRequest) Set(val *CoreConfigThreadPoolRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreConfigThreadPoolRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreConfigThreadPoolRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreConfigThreadPoolRequest(val *CoreConfigThreadPoolRequest) *NullableCoreConfigThreadPoolRequest {
	return &NullableCoreConfigThreadPoolRequest{value: val, isSet: true}
}

func (v NullableCoreConfigThreadPoolRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreConfigThreadPoolRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


