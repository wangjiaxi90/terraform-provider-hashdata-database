/*
 * Cloud Manager API
 *
 * Cloud Manager Restful API Documentation.
 *
 * API version: v2.0
 * Contact: wang@hashdata.cn
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudmgr

import (
	"encoding/json"
)

// KsyunExecuteServiceConfigRequest struct for KsyunExecuteServiceConfigRequest
type KsyunExecuteServiceConfigRequest struct {
	Conf *string `json:"conf,omitempty"`
	ConfId *string `json:"confId,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewKsyunExecuteServiceConfigRequest instantiates a new KsyunExecuteServiceConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKsyunExecuteServiceConfigRequest() *KsyunExecuteServiceConfigRequest {
	this := KsyunExecuteServiceConfigRequest{}
	return &this
}

// NewKsyunExecuteServiceConfigRequestWithDefaults instantiates a new KsyunExecuteServiceConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKsyunExecuteServiceConfigRequestWithDefaults() *KsyunExecuteServiceConfigRequest {
	this := KsyunExecuteServiceConfigRequest{}
	return &this
}

// GetConf returns the Conf field value if set, zero value otherwise.
func (o *KsyunExecuteServiceConfigRequest) GetConf() string {
	if o == nil || o.Conf == nil {
		var ret string
		return ret
	}
	return *o.Conf
}

// GetConfOk returns a tuple with the Conf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KsyunExecuteServiceConfigRequest) GetConfOk() (*string, bool) {
	if o == nil || o.Conf == nil {
		return nil, false
	}
	return o.Conf, true
}

// HasConf returns a boolean if a field has been set.
func (o *KsyunExecuteServiceConfigRequest) HasConf() bool {
	if o != nil && o.Conf != nil {
		return true
	}

	return false
}

// SetConf gets a reference to the given string and assigns it to the Conf field.
func (o *KsyunExecuteServiceConfigRequest) SetConf(v string) {
	o.Conf = &v
}

// GetConfId returns the ConfId field value if set, zero value otherwise.
func (o *KsyunExecuteServiceConfigRequest) GetConfId() string {
	if o == nil || o.ConfId == nil {
		var ret string
		return ret
	}
	return *o.ConfId
}

// GetConfIdOk returns a tuple with the ConfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KsyunExecuteServiceConfigRequest) GetConfIdOk() (*string, bool) {
	if o == nil || o.ConfId == nil {
		return nil, false
	}
	return o.ConfId, true
}

// HasConfId returns a boolean if a field has been set.
func (o *KsyunExecuteServiceConfigRequest) HasConfId() bool {
	if o != nil && o.ConfId != nil {
		return true
	}

	return false
}

// SetConfId gets a reference to the given string and assigns it to the ConfId field.
func (o *KsyunExecuteServiceConfigRequest) SetConfId(v string) {
	o.ConfId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *KsyunExecuteServiceConfigRequest) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KsyunExecuteServiceConfigRequest) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *KsyunExecuteServiceConfigRequest) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *KsyunExecuteServiceConfigRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o KsyunExecuteServiceConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Conf != nil {
		toSerialize["conf"] = o.Conf
	}
	if o.ConfId != nil {
		toSerialize["confId"] = o.ConfId
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableKsyunExecuteServiceConfigRequest struct {
	value *KsyunExecuteServiceConfigRequest
	isSet bool
}

func (v NullableKsyunExecuteServiceConfigRequest) Get() *KsyunExecuteServiceConfigRequest {
	return v.value
}

func (v *NullableKsyunExecuteServiceConfigRequest) Set(val *KsyunExecuteServiceConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKsyunExecuteServiceConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKsyunExecuteServiceConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKsyunExecuteServiceConfigRequest(val *KsyunExecuteServiceConfigRequest) *NullableKsyunExecuteServiceConfigRequest {
	return &NullableKsyunExecuteServiceConfigRequest{value: val, isSet: true}
}

func (v NullableKsyunExecuteServiceConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKsyunExecuteServiceConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


